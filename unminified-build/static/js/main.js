/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 	};
/******/
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		0: 0
/******/ 	};
/******/
/******/
/******/
/******/ 	// script path function
/******/ 	function jsonpScriptSrc(chunkId) {
/******/ 		return __webpack_require__.p + "static/js/" + ({}[chunkId]||chunkId) + "." + {"1":"6a738965","2":"dcf4eeac"}[chunkId] + ".chunk.js"
/******/ 	}
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// JSONP chunk loading for javascript
/******/
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData !== 0) { // 0 means "already installed".
/******/
/******/ 			// a Promise means "currently loading".
/******/ 			if(installedChunkData) {
/******/ 				promises.push(installedChunkData[2]);
/******/ 			} else {
/******/ 				// setup Promise in chunk cache
/******/ 				var promise = new Promise(function(resolve, reject) {
/******/ 					installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 				});
/******/ 				promises.push(installedChunkData[2] = promise);
/******/
/******/ 				// start chunk loading
/******/ 				var script = document.createElement('script');
/******/ 				var onScriptComplete;
/******/
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.src = jsonpScriptSrc(chunkId);
/******/
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				onScriptComplete = function (event) {
/******/ 					// avoid mem leaks in IE.
/******/ 					script.onerror = script.onload = null;
/******/ 					clearTimeout(timeout);
/******/ 					var chunk = installedChunks[chunkId];
/******/ 					if(chunk !== 0) {
/******/ 						if(chunk) {
/******/ 							var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 							var realSrc = event && event.target && event.target.src;
/******/ 							error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 							error.name = 'ChunkLoadError';
/******/ 							error.type = errorType;
/******/ 							error.request = realSrc;
/******/ 							chunk[1](error);
/******/ 						}
/******/ 						installedChunks[chunkId] = undefined;
/******/ 					}
/******/ 				};
/******/ 				var timeout = setTimeout(function(){
/******/ 					onScriptComplete({ type: 'timeout', target: script });
/******/ 				}, 120000);
/******/ 				script.onerror = script.onload = onScriptComplete;
/******/ 				document.head.appendChild(script);
/******/ 			}
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	var jsonpArray = this["webpackJsonpdaofactory"] = this["webpackJsonpdaofactory"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 90);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(64);
} else {}

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "j", function() { return /* binding */ isBytesLike; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* binding */ isBytes; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ arrayify; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ concat; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* binding */ stripZeros; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* binding */ isHexString; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* binding */ hexlify; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* binding */ hexDataLength; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* binding */ hexDataSlice; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* binding */ hexConcat; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* binding */ hexValue; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* binding */ hexZeroPad; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* binding */ splitSignature; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* binding */ joinSignature; });

// UNUSED EXPORTS: zeroPad, hexStripZeros

// EXTERNAL MODULE: ./node_modules/@ethersproject/logger/lib.esm/index.js + 1 modules
var lib_esm = __webpack_require__(4);

// CONCATENATED MODULE: ./node_modules/@ethersproject/bytes/lib.esm/_version.js
var version = "bytes/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/bytes/lib.esm/index.js




var logger = new lib_esm["a" /* Logger */](version); ///////////////////////////////

function isHexable(value) {
  return !!value.toHexString;
}

function addSlice(array) {
  if (array.slice) {
    return array;
  }

  array.slice = function () {
    var args = Array.prototype.slice.call(arguments);
    return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
  };

  return array;
}

function isBytesLike(value) {
  return isHexString(value) && !(value.length % 2) || isBytes(value);
}

function isInteger(value) {
  return typeof value === "number" && value == value && value % 1 === 0;
}

function isBytes(value) {
  if (value == null) {
    return false;
  }

  if (value.constructor === Uint8Array) {
    return true;
  }

  if (typeof value === "string") {
    return false;
  }

  if (!isInteger(value.length) || value.length < 0) {
    return false;
  }

  for (var i = 0; i < value.length; i++) {
    var v = value[i];

    if (!isInteger(v) || v < 0 || v >= 256) {
      return false;
    }
  }

  return true;
}
function arrayify(value, options) {
  if (!options) {
    options = {};
  }

  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid arrayify value");
    var result = [];

    while (value) {
      result.unshift(value & 0xff);
      value = parseInt(String(value / 256));
    }

    if (result.length === 0) {
      result.push(0);
    }

    return addSlice(new Uint8Array(result));
  }

  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }

  if (isHexable(value)) {
    value = value.toHexString();
  }

  if (isHexString(value)) {
    var hex = value.substring(2);

    if (hex.length % 2) {
      if (options.hexPad === "left") {
        hex = "0x0" + hex.substring(2);
      } else if (options.hexPad === "right") {
        hex += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }

    var _result = [];

    for (var i = 0; i < hex.length; i += 2) {
      _result.push(parseInt(hex.substring(i, i + 2), 16));
    }

    return addSlice(new Uint8Array(_result));
  }

  if (isBytes(value)) {
    return addSlice(new Uint8Array(value));
  }

  return logger.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
  var objects = items.map(function (item) {
    return arrayify(item);
  });
  var length = objects.reduce(function (accum, item) {
    return accum + item.length;
  }, 0);
  var result = new Uint8Array(length);
  objects.reduce(function (offset, object) {
    result.set(object, offset);
    return offset + object.length;
  }, 0);
  return addSlice(result);
}
function stripZeros(value) {
  var result = arrayify(value);

  if (result.length === 0) {
    return result;
  } // Find the first non-zero entry


  var start = 0;

  while (start < result.length && result[start] === 0) {
    start++;
  } // If we started with zeros, strip them


  if (start) {
    result = result.slice(start);
  }

  return result;
}
function zeroPad(value, length) {
  value = arrayify(value);

  if (value.length > length) {
    logger.throwArgumentError("value out of range", "value", arguments[0]);
  }

  var result = new Uint8Array(length);
  result.set(value, length - value.length);
  return addSlice(result);
}
function isHexString(value, length) {
  if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
    return false;
  }

  if (length && value.length !== 2 + 2 * length) {
    return false;
  }

  return true;
}
var HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
  if (!options) {
    options = {};
  }

  if (typeof value === "number") {
    logger.checkSafeUint53(value, "invalid hexlify value");
    var hex = "";

    while (value) {
      hex = HexCharacters[value & 0xf] + hex;
      value = Math.floor(value / 16);
    }

    if (hex.length) {
      if (hex.length % 2) {
        hex = "0" + hex;
      }

      return "0x" + hex;
    }

    return "0x00";
  }

  if (typeof value === "bigint") {
    value = value.toString(16);

    if (value.length % 2) {
      return "0x0" + value;
    }

    return "0x" + value;
  }

  if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  }

  if (isHexable(value)) {
    return value.toHexString();
  }

  if (isHexString(value)) {
    if (value.length % 2) {
      if (options.hexPad === "left") {
        value = "0x0" + value.substring(2);
      } else if (options.hexPad === "right") {
        value += "0";
      } else {
        logger.throwArgumentError("hex data is odd-length", "value", value);
      }
    }

    return value.toLowerCase();
  }

  if (isBytes(value)) {
    var result = "0x";

    for (var i = 0; i < value.length; i++) {
      var v = value[i];
      result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
    }

    return result;
  }

  return logger.throwArgumentError("invalid hexlify value", "value", value);
}
/*
function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
    if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
        return "0x0" + value.substring(2);
    }
    return value;
}
*/

function hexDataLength(data) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    return null;
  }

  return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
  if (typeof data !== "string") {
    data = hexlify(data);
  } else if (!isHexString(data) || data.length % 2) {
    logger.throwArgumentError("invalid hexData", "value", data);
  }

  offset = 2 + 2 * offset;

  if (endOffset != null) {
    return "0x" + data.substring(offset, 2 + 2 * endOffset);
  }

  return "0x" + data.substring(offset);
}
function hexConcat(items) {
  var result = "0x";
  items.forEach(function (item) {
    result += hexlify(item).substring(2);
  });
  return result;
}
function hexValue(value) {
  var trimmed = hexStripZeros(hexlify(value, {
    hexPad: "left"
  }));

  if (trimmed === "0x") {
    return "0x0";
  }

  return trimmed;
}
function hexStripZeros(value) {
  if (typeof value !== "string") {
    value = hexlify(value);
  }

  if (!isHexString(value)) {
    logger.throwArgumentError("invalid hex string", "value", value);
  }

  value = value.substring(2);
  var offset = 0;

  while (offset < value.length && value[offset] === "0") {
    offset++;
  }

  return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
  if (typeof value !== "string") {
    value = hexlify(value);
  } else if (!isHexString(value)) {
    logger.throwArgumentError("invalid hex string", "value", value);
  }

  if (value.length > 2 * length + 2) {
    logger.throwArgumentError("value out of range", "value", arguments[1]);
  }

  while (value.length < 2 * length + 2) {
    value = "0x0" + value.substring(2);
  }

  return value;
}
function splitSignature(signature) {
  var result = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0
  };

  if (isBytesLike(signature)) {
    var bytes = arrayify(signature);

    if (bytes.length !== 65) {
      logger.throwArgumentError("invalid signature string; must be 65 bytes", "signature", signature);
    } // Get the r, s and v


    result.r = hexlify(bytes.slice(0, 32));
    result.s = hexlify(bytes.slice(32, 64));
    result.v = bytes[64]; // Allow a recid to be used as the v

    if (result.v < 27) {
      if (result.v === 0 || result.v === 1) {
        result.v += 27;
      } else {
        logger.throwArgumentError("signature invalid v byte", "signature", signature);
      }
    } // Compute recoveryParam from v


    result.recoveryParam = 1 - result.v % 2; // Compute _vs from recoveryParam and s

    if (result.recoveryParam) {
      bytes[32] |= 0x80;
    }

    result._vs = hexlify(bytes.slice(32, 64));
  } else {
    result.r = signature.r;
    result.s = signature.s;
    result.v = signature.v;
    result.recoveryParam = signature.recoveryParam;
    result._vs = signature._vs; // If the _vs is available, use it to populate missing s, v and recoveryParam
    // and verify non-missing s, v and recoveryParam

    if (result._vs != null) {
      var _vs2 = zeroPad(arrayify(result._vs), 32);

      result._vs = hexlify(_vs2); // Set or check the recid

      var recoveryParam = _vs2[0] >= 128 ? 1 : 0;

      if (result.recoveryParam == null) {
        result.recoveryParam = recoveryParam;
      } else if (result.recoveryParam !== recoveryParam) {
        logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
      } // Set or check the s


      _vs2[0] &= 0x7f;
      var s = hexlify(_vs2);

      if (result.s == null) {
        result.s = s;
      } else if (result.s !== s) {
        logger.throwArgumentError("signature v mismatch _vs", "signature", signature);
      }
    } // Use recid and v to populate each other


    if (result.recoveryParam == null) {
      if (result.v == null) {
        logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
      } else if (result.v === 0 || result.v === 1) {
        result.recoveryParam = result.v;
      } else {
        result.recoveryParam = 1 - result.v % 2;
      }
    } else {
      if (result.v == null) {
        result.v = 27 + result.recoveryParam;
      } else {
        var recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;

        if (result.recoveryParam !== recId) {
          logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
        }
      }
    }

    if (result.r == null || !isHexString(result.r)) {
      logger.throwArgumentError("signature missing or invalid r", "signature", signature);
    } else {
      result.r = hexZeroPad(result.r, 32);
    }

    if (result.s == null || !isHexString(result.s)) {
      logger.throwArgumentError("signature missing or invalid s", "signature", signature);
    } else {
      result.s = hexZeroPad(result.s, 32);
    }

    var vs = arrayify(result.s);

    if (vs[0] >= 128) {
      logger.throwArgumentError("signature s out of range", "signature", signature);
    }

    if (result.recoveryParam) {
      vs[0] |= 0x80;
    }

    var _vs = hexlify(vs);

    if (result._vs) {
      if (!isHexString(result._vs)) {
        logger.throwArgumentError("signature invalid _vs", "signature", signature);
      }

      result._vs = hexZeroPad(result._vs, 32);
    } // Set or check the _vs


    if (result._vs == null) {
      result._vs = _vs;
    } else if (result._vs !== _vs) {
      logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
    }
  }

  return result;
}
function joinSignature(signature) {
  signature = splitSignature(signature);
  return hexlify(concat([signature.r, signature.s, signature.recoveryParam ? "0x1c" : "0x1b"]));
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(65);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(58);
} else {}

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ lib_esm_Logger; });

// UNUSED EXPORTS: LogLevel, ErrorCode

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/@ethersproject/logger/lib.esm/_version.js
var _version_version = "logger/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/logger/lib.esm/index.js




var _permanentCensorErrors = false;
var _censorErrors = false;
var LogLevels = {
  debug: 1,
  "default": 2,
  info: 2,
  warning: 3,
  error: 4,
  off: 5
};
var _logLevel = LogLevels["default"];

var _globalLogger = null;

function _checkNormalize() {
  try {
    var missing = []; // Make sure all forms of normalization are supported

    ["NFD", "NFC", "NFKD", "NFKC"].forEach(function (form) {
      try {
        if ("test".normalize(form) !== "test") {
          throw new Error("bad normalize");
        }

        ;
      } catch (error) {
        missing.push(form);
      }
    });

    if (missing.length) {
      throw new Error("missing " + missing.join(", "));
    }

    if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
      throw new Error("broken implementation");
    }
  } catch (error) {
    return error.message;
  }

  return null;
}

var _normalizeError = _checkNormalize();

var LogLevel;

(function (LogLevel) {
  LogLevel["DEBUG"] = "DEBUG";
  LogLevel["INFO"] = "INFO";
  LogLevel["WARNING"] = "WARNING";
  LogLevel["ERROR"] = "ERROR";
  LogLevel["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));

var ErrorCode;

(function (ErrorCode) {
  ///////////////////
  // Generic Errors
  // Unknown Error
  ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR"; // Not Implemented

  ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED"; // Unsupported Operation
  //   - operation

  ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
  //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)

  ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR"; // Some sort of bad response from the server

  ErrorCode["SERVER_ERROR"] = "SERVER_ERROR"; // Timeout

  ErrorCode["TIMEOUT"] = "TIMEOUT"; ///////////////////
  // Operational  Errors
  // Buffer Overrun

  ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN"; // Numeric Fault
  //   - operation: the operation being executed
  //   - fault: the reason this faulted

  ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT"; ///////////////////
  // Argument Errors
  // Missing new operator to an object
  //  - name: The name of the class

  ErrorCode["MISSING_NEW"] = "MISSING_NEW"; // Invalid argument (e.g. value is incompatible with type) to a function:
  //   - argument: The argument name that was invalid
  //   - value: The value of the argument

  ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT"; // Missing argument to a function:
  //   - count: The number of arguments received
  //   - expectedCount: The number of arguments expected

  ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT"; // Too many arguments
  //   - count: The number of arguments received
  //   - expectedCount: The number of arguments expected

  ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT"; ///////////////////
  // Blockchain Errors
  // Call exception
  //  - transaction: the transaction
  //  - address?: the contract address
  //  - args?: The arguments passed into the function
  //  - method?: The Solidity method signature
  //  - errorSignature?: The EIP848 error signature
  //  - errorArgs?: The EIP848 error parameters
  //  - reason: The reason (only for EIP848 "Error(string)")

  ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION"; // Insufficient funds (< value + gasLimit * gasPrice)
  //   - transaction: the transaction attempted

  ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS"; // Nonce has already been used
  //   - transaction: the transaction attempted

  ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED"; // The replacement fee for the transaction is too low
  //   - transaction: the transaction attempted

  ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED"; // The gas limit could not be estimated
  //   - transaction: the transaction passed to estimateGas

  ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT"; // The transaction was replaced by one with a higher gas price
  //   - reason: "cancelled", "replaced" or "repriced"
  //   - cancelled: true if reason == "cancelled" or reason == "replaced")
  //   - hash: original transaction hash
  //   - replacement: the full TransactionsResponse for the replacement
  //   - receipt: the receipt of the replacement

  ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
})(ErrorCode || (ErrorCode = {}));

;
var HEX = "0123456789abcdef";
var lib_esm_Logger = /*#__PURE__*/function () {
  function Logger(version) {
    Object(classCallCheck["a" /* default */])(this, Logger);

    Object.defineProperty(this, "version", {
      enumerable: true,
      value: version,
      writable: false
    });
  }

  Object(createClass["a" /* default */])(Logger, [{
    key: "_log",
    value: function _log(logLevel, args) {
      var level = logLevel.toLowerCase();

      if (LogLevels[level] == null) {
        this.throwArgumentError("invalid log level name", "logLevel", logLevel);
      }

      if (_logLevel > LogLevels[level]) {
        return;
      }

      console.log.apply(console, args);
    }
  }, {
    key: "debug",
    value: function debug() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this._log(Logger.levels.DEBUG, args);
    }
  }, {
    key: "info",
    value: function info() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      this._log(Logger.levels.INFO, args);
    }
  }, {
    key: "warn",
    value: function warn() {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      this._log(Logger.levels.WARNING, args);
    }
  }, {
    key: "makeError",
    value: function makeError(message, code, params) {
      // Errors are being censored
      if (_censorErrors) {
        return this.makeError("censored error", code, {});
      }

      if (!code) {
        code = Logger.errors.UNKNOWN_ERROR;
      }

      if (!params) {
        params = {};
      }

      var messageDetails = [];
      Object.keys(params).forEach(function (key) {
        var value = params[key];

        try {
          if (value instanceof Uint8Array) {
            var hex = "";

            for (var i = 0; i < value.length; i++) {
              hex += HEX[value[i] >> 4];
              hex += HEX[value[i] & 0x0f];
            }

            messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
          } else {
            messageDetails.push(key + "=" + JSON.stringify(value));
          }
        } catch (error) {
          messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
        }
      });
      messageDetails.push("code=".concat(code));
      messageDetails.push("version=".concat(this.version));
      var reason = message;

      if (messageDetails.length) {
        message += " (" + messageDetails.join(", ") + ")";
      } // @TODO: Any??


      var error = new Error(message);
      error.reason = reason;
      error.code = code;
      Object.keys(params).forEach(function (key) {
        error[key] = params[key];
      });
      return error;
    }
  }, {
    key: "throwError",
    value: function throwError(message, code, params) {
      throw this.makeError(message, code, params);
    }
  }, {
    key: "throwArgumentError",
    value: function throwArgumentError(message, name, value) {
      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
        argument: name,
        value: value
      });
    }
  }, {
    key: "assert",
    value: function assert(condition, message, code, params) {
      if (!!condition) {
        return;
      }

      this.throwError(message, code, params);
    }
  }, {
    key: "assertArgument",
    value: function assertArgument(condition, message, name, value) {
      if (!!condition) {
        return;
      }

      this.throwArgumentError(message, name, value);
    }
  }, {
    key: "checkNormalize",
    value: function checkNormalize(message) {
      if (message == null) {
        message = "platform missing String.prototype.normalize";
      }

      if (_normalizeError) {
        this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "String.prototype.normalize",
          form: _normalizeError
        });
      }
    }
  }, {
    key: "checkSafeUint53",
    value: function checkSafeUint53(value, message) {
      if (typeof value !== "number") {
        return;
      }

      if (message == null) {
        message = "value not safe";
      }

      if (value < 0 || value >= 0x1fffffffffffff) {
        this.throwError(message, Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "out-of-safe-range",
          value: value
        });
      }

      if (value % 1) {
        this.throwError(message, Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "non-integer",
          value: value
        });
      }
    }
  }, {
    key: "checkArgumentCount",
    value: function checkArgumentCount(count, expectedCount, message) {
      if (message) {
        message = ": " + message;
      } else {
        message = "";
      }

      if (count < expectedCount) {
        this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
          count: count,
          expectedCount: expectedCount
        });
      }

      if (count > expectedCount) {
        this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
          count: count,
          expectedCount: expectedCount
        });
      }
    }
  }, {
    key: "checkNew",
    value: function checkNew(target, kind) {
      if (target === Object || target == null) {
        this.throwError("missing new", Logger.errors.MISSING_NEW, {
          name: kind.name
        });
      }
    }
  }, {
    key: "checkAbstract",
    value: function checkAbstract(target, kind) {
      if (target === kind) {
        this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, {
          name: target.name,
          operation: "new"
        });
      } else if (target === Object || target == null) {
        this.throwError("missing new", Logger.errors.MISSING_NEW, {
          name: kind.name
        });
      }
    }
  }], [{
    key: "globalLogger",
    value: function globalLogger() {
      if (!_globalLogger) {
        _globalLogger = new Logger(_version_version);
      }

      return _globalLogger;
    }
  }, {
    key: "setCensorship",
    value: function setCensorship(censorship, permanent) {
      if (!censorship && permanent) {
        this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }

      if (_permanentCensorErrors) {
        if (!censorship) {
          return;
        }

        this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }

      _censorErrors = !!censorship;
      _permanentCensorErrors = !!permanent;
    }
  }, {
    key: "setLogLevel",
    value: function setLogLevel(logLevel) {
      var level = LogLevels[logLevel.toLowerCase()];

      if (level == null) {
        Logger.globalLogger().warn("invalid log level - " + logLevel);
        return;
      }

      _logLevel = level;
    }
  }, {
    key: "from",
    value: function from(version) {
      return new Logger(version);
    }
  }]);

  return Logger;
}();
lib_esm_Logger.errors = ErrorCode;
lib_esm_Logger.levels = LogLevel;

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _slicedToArray; });

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(22);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || Object(unsupportedIterableToArray["a" /* default */])(arr, i) || _nonIterableRest();
}

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _classCallCheck; });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _createClass; });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _defineProperty; });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),
/* 9 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _asyncToGenerator; });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict'; // Utils

  function assert(val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  } // Could use `inherits` module, but don't want to move from single file
  // architecture yet.


  function inherits(ctor, superCtor) {
    ctor.super_ = superCtor;

    var TempCtor = function TempCtor() {};

    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  } // BN


  function BN(number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0; // Reduction context

    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }

  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;
  var Buffer;

  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = __webpack_require__(72).Buffer;
    }
  } catch (e) {}

  BN.isBN = function isBN(num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max(left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min(left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init(number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }

    assert(base === (base | 0) && base >= 2 && base <= 36);
    number = number.toString().replace(/\s+/g, '');
    var start = 0;

    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);

        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber(number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }

    if (number < 0x4000000) {
      this.words = [number & 0x3ffffff];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)

      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];
      this.length = 3;
    }

    if (endian !== 'le') return; // Reverse the bytes

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray(number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');

    if (number.length <= 0) {
      this.words = [0];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);

    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;

    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
        this.words[j] |= w << off & 0x3ffffff;
        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
        off += 24;

        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
        this.words[j] |= w << off & 0x3ffffff;
        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;
        off += 24;

        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }

    return this.strip();
  };

  function parseHex4Bits(string, index) {
    var c = string.charCodeAt(index); // 'A' - 'F'

    if (c >= 65 && c <= 70) {
      return c - 55; // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87; // '0' - '9'
    } else {
      return c - 48 & 0xf;
    }
  }

  function parseHexByte(string, lowerBound, index) {
    var r = parseHex4Bits(string, index);

    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }

    return r;
  }

  BN.prototype._parseHex = function _parseHex(number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);

    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    } // 24-bits chunks


    var off = 0;
    var j = 0;
    var w;

    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;

        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;

      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;

        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase(str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);

    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;
      r *= mul; // 'a'

      if (c >= 49) {
        r += c - 49 + 0xa; // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa; // '0' - '9'
      } else {
        r += c;
      }
    }

    return r;
  }

  BN.prototype._parseBase = function _parseBase(number, base, start) {
    // Initialize as zero
    this.words = [0];
    this.length = 1; // Find length of limb in base

    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }

    limbLen--;
    limbPow = limbPow / base | 0;
    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;
    var word = 0;

    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);
      this.imuln(limbPow);

      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);

      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy(dest) {
    dest.words = new Array(this.length);

    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }

    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone() {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand(size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }

    return this;
  }; // Remove leading `0` from `this`


  BN.prototype.strip = function strip() {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }

    return this._normSign();
  };

  BN.prototype._normSign = function _normSign() {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }

    return this;
  };

  BN.prototype.inspect = function inspect() {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };
  /*
   var zeros = [];
  var groupSizes = [];
  var groupBases = [];
   var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }
   */


  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];
  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];
  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

  BN.prototype.toString = function toString(base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;
    var out;

    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;

      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = ((w << off | carry) & 0xffffff).toString(16);
        carry = w >>> 24 - off & 0xffffff;

        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }

        off += 2;

        if (off >= 26) {
          off -= 26;
          i--;
        }
      }

      if (carry !== 0) {
        out = carry.toString(16) + out;
      }

      while (out.length % padding !== 0) {
        out = '0' + out;
      }

      if (this.negative !== 0) {
        out = '-' + out;
      }

      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);

      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;

      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }

      if (this.isZero()) {
        out = '0' + out;
      }

      while (out.length % padding !== 0) {
        out = '0' + out;
      }

      if (this.negative !== 0) {
        out = '-' + out;
      }

      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber() {
    var ret = this.words[0];

    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + this.words[1] * 0x4000000;
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }

    return this.negative !== 0 ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON() {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer(endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray(endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');
    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);
    var b, i;
    var q = this.clone();

    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);
        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);
        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits(w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits(w) {
      var t = w;
      var r = 0;

      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }

      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }

      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }

      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }

      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits(w) {
    // Short-cut
    if (w === 0) return 26;
    var t = w;
    var r = 0;

    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }

    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }

    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }

    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }

    if ((t & 0x1) === 0) {
      r++;
    }

    return r;
  }; // Return number of used bits in a BN


  BN.prototype.bitLength = function bitLength() {
    var w = this.words[this.length - 1];

    var hi = this._countBits(w);

    return (this.length - 1) * 26 + hi;
  };

  function toBitArray(num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = bit / 26 | 0;
      var wbit = bit % 26;
      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
    }

    return w;
  } // Number of trailing zero bits


  BN.prototype.zeroBits = function zeroBits() {
    if (this.isZero()) return 0;
    var r = 0;

    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);

      r += b;
      if (b !== 26) break;
    }

    return r;
  };

  BN.prototype.byteLength = function byteLength() {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos(width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }

    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos(width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }

    return this.clone();
  };

  BN.prototype.isNeg = function isNeg() {
    return this.negative !== 0;
  }; // Return negative clone of `this`


  BN.prototype.neg = function neg() {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg() {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  }; // Or `num` with `this` in-place


  BN.prototype.iuor = function iuor(num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior(num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  }; // Or `num` with `this`


  BN.prototype.or = function or(num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor(num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  }; // And `num` with `this` in-place


  BN.prototype.iuand = function iuand(num) {
    // b = min-length(num, this)
    var b;

    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;
    return this.strip();
  };

  BN.prototype.iand = function iand(num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  }; // And `num` with `this`


  BN.prototype.and = function and(num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand(num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  }; // Xor `num` with `this` in-place


  BN.prototype.iuxor = function iuxor(num) {
    // a.length > b.length
    var a;
    var b;

    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;
    return this.strip();
  };

  BN.prototype.ixor = function ixor(num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  }; // Xor `num` with `this`


  BN.prototype.xor = function xor(num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor(num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  }; // Not ``this`` with ``width`` bitwidth


  BN.prototype.inotn = function inotn(width) {
    assert(typeof width === 'number' && width >= 0);
    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26; // Extend the buffer with leading zeroes

    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    } // Handle complete words


    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    } // Handle the residue


    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;
    } // And remove leading zeroes


    return this.strip();
  };

  BN.prototype.notn = function notn(width) {
    return this.clone().inotn(width);
  }; // Set `bit` of `this`


  BN.prototype.setn = function setn(bit, val) {
    assert(typeof bit === 'number' && bit >= 0);
    var off = bit / 26 | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | 1 << wbit;
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  }; // Add `num` to `this` in-place


  BN.prototype.iadd = function iadd(num) {
    var r; // negative + positive

    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign(); // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    } // a.length > b.length


    var a, b;

    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;

    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;

    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++; // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  }; // Add `num` to `this`


  BN.prototype.add = function add(num) {
    var res;

    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);
    return num.clone().iadd(this);
  }; // Subtract `num` from `this` in-place


  BN.prototype.isub = function isub(num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign(); // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    } // At this point both numbers are positive


    var cmp = this.cmp(num); // Optimization - zeroify

    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    } // a > b


    var a, b;

    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;

    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    } // Copy rest of the words


    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  }; // Subtract `num` from `this`


  BN.prototype.sub = function sub(num) {
    return this.clone().isub(num);
  };

  function smallMulTo(self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = self.length + num.length | 0;
    out.length = len;
    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)

    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;
    var lo = r & 0x3ffffff;
    var carry = r / 0x4000000 | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);

      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += r / 0x4000000 | 0;
        rword = r & 0x3ffffff;
      }

      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }

    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  } // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).


  var comb10MulTo = function comb10MulTo(self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;
    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */

    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = mid + Math.imul(ah0, bl0) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */

    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = mid + Math.imul(ah1, bl0) | 0;
    hi = Math.imul(ah1, bh0);
    lo = lo + Math.imul(al0, bl1) | 0;
    mid = mid + Math.imul(al0, bh1) | 0;
    mid = mid + Math.imul(ah0, bl1) | 0;
    hi = hi + Math.imul(ah0, bh1) | 0;
    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */

    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = mid + Math.imul(ah2, bl0) | 0;
    hi = Math.imul(ah2, bh0);
    lo = lo + Math.imul(al1, bl1) | 0;
    mid = mid + Math.imul(al1, bh1) | 0;
    mid = mid + Math.imul(ah1, bl1) | 0;
    hi = hi + Math.imul(ah1, bh1) | 0;
    lo = lo + Math.imul(al0, bl2) | 0;
    mid = mid + Math.imul(al0, bh2) | 0;
    mid = mid + Math.imul(ah0, bl2) | 0;
    hi = hi + Math.imul(ah0, bh2) | 0;
    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */

    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = mid + Math.imul(ah3, bl0) | 0;
    hi = Math.imul(ah3, bh0);
    lo = lo + Math.imul(al2, bl1) | 0;
    mid = mid + Math.imul(al2, bh1) | 0;
    mid = mid + Math.imul(ah2, bl1) | 0;
    hi = hi + Math.imul(ah2, bh1) | 0;
    lo = lo + Math.imul(al1, bl2) | 0;
    mid = mid + Math.imul(al1, bh2) | 0;
    mid = mid + Math.imul(ah1, bl2) | 0;
    hi = hi + Math.imul(ah1, bh2) | 0;
    lo = lo + Math.imul(al0, bl3) | 0;
    mid = mid + Math.imul(al0, bh3) | 0;
    mid = mid + Math.imul(ah0, bl3) | 0;
    hi = hi + Math.imul(ah0, bh3) | 0;
    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */

    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = mid + Math.imul(ah4, bl0) | 0;
    hi = Math.imul(ah4, bh0);
    lo = lo + Math.imul(al3, bl1) | 0;
    mid = mid + Math.imul(al3, bh1) | 0;
    mid = mid + Math.imul(ah3, bl1) | 0;
    hi = hi + Math.imul(ah3, bh1) | 0;
    lo = lo + Math.imul(al2, bl2) | 0;
    mid = mid + Math.imul(al2, bh2) | 0;
    mid = mid + Math.imul(ah2, bl2) | 0;
    hi = hi + Math.imul(ah2, bh2) | 0;
    lo = lo + Math.imul(al1, bl3) | 0;
    mid = mid + Math.imul(al1, bh3) | 0;
    mid = mid + Math.imul(ah1, bl3) | 0;
    hi = hi + Math.imul(ah1, bh3) | 0;
    lo = lo + Math.imul(al0, bl4) | 0;
    mid = mid + Math.imul(al0, bh4) | 0;
    mid = mid + Math.imul(ah0, bl4) | 0;
    hi = hi + Math.imul(ah0, bh4) | 0;
    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */

    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = mid + Math.imul(ah5, bl0) | 0;
    hi = Math.imul(ah5, bh0);
    lo = lo + Math.imul(al4, bl1) | 0;
    mid = mid + Math.imul(al4, bh1) | 0;
    mid = mid + Math.imul(ah4, bl1) | 0;
    hi = hi + Math.imul(ah4, bh1) | 0;
    lo = lo + Math.imul(al3, bl2) | 0;
    mid = mid + Math.imul(al3, bh2) | 0;
    mid = mid + Math.imul(ah3, bl2) | 0;
    hi = hi + Math.imul(ah3, bh2) | 0;
    lo = lo + Math.imul(al2, bl3) | 0;
    mid = mid + Math.imul(al2, bh3) | 0;
    mid = mid + Math.imul(ah2, bl3) | 0;
    hi = hi + Math.imul(ah2, bh3) | 0;
    lo = lo + Math.imul(al1, bl4) | 0;
    mid = mid + Math.imul(al1, bh4) | 0;
    mid = mid + Math.imul(ah1, bl4) | 0;
    hi = hi + Math.imul(ah1, bh4) | 0;
    lo = lo + Math.imul(al0, bl5) | 0;
    mid = mid + Math.imul(al0, bh5) | 0;
    mid = mid + Math.imul(ah0, bl5) | 0;
    hi = hi + Math.imul(ah0, bh5) | 0;
    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */

    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = mid + Math.imul(ah6, bl0) | 0;
    hi = Math.imul(ah6, bh0);
    lo = lo + Math.imul(al5, bl1) | 0;
    mid = mid + Math.imul(al5, bh1) | 0;
    mid = mid + Math.imul(ah5, bl1) | 0;
    hi = hi + Math.imul(ah5, bh1) | 0;
    lo = lo + Math.imul(al4, bl2) | 0;
    mid = mid + Math.imul(al4, bh2) | 0;
    mid = mid + Math.imul(ah4, bl2) | 0;
    hi = hi + Math.imul(ah4, bh2) | 0;
    lo = lo + Math.imul(al3, bl3) | 0;
    mid = mid + Math.imul(al3, bh3) | 0;
    mid = mid + Math.imul(ah3, bl3) | 0;
    hi = hi + Math.imul(ah3, bh3) | 0;
    lo = lo + Math.imul(al2, bl4) | 0;
    mid = mid + Math.imul(al2, bh4) | 0;
    mid = mid + Math.imul(ah2, bl4) | 0;
    hi = hi + Math.imul(ah2, bh4) | 0;
    lo = lo + Math.imul(al1, bl5) | 0;
    mid = mid + Math.imul(al1, bh5) | 0;
    mid = mid + Math.imul(ah1, bl5) | 0;
    hi = hi + Math.imul(ah1, bh5) | 0;
    lo = lo + Math.imul(al0, bl6) | 0;
    mid = mid + Math.imul(al0, bh6) | 0;
    mid = mid + Math.imul(ah0, bl6) | 0;
    hi = hi + Math.imul(ah0, bh6) | 0;
    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */

    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = mid + Math.imul(ah7, bl0) | 0;
    hi = Math.imul(ah7, bh0);
    lo = lo + Math.imul(al6, bl1) | 0;
    mid = mid + Math.imul(al6, bh1) | 0;
    mid = mid + Math.imul(ah6, bl1) | 0;
    hi = hi + Math.imul(ah6, bh1) | 0;
    lo = lo + Math.imul(al5, bl2) | 0;
    mid = mid + Math.imul(al5, bh2) | 0;
    mid = mid + Math.imul(ah5, bl2) | 0;
    hi = hi + Math.imul(ah5, bh2) | 0;
    lo = lo + Math.imul(al4, bl3) | 0;
    mid = mid + Math.imul(al4, bh3) | 0;
    mid = mid + Math.imul(ah4, bl3) | 0;
    hi = hi + Math.imul(ah4, bh3) | 0;
    lo = lo + Math.imul(al3, bl4) | 0;
    mid = mid + Math.imul(al3, bh4) | 0;
    mid = mid + Math.imul(ah3, bl4) | 0;
    hi = hi + Math.imul(ah3, bh4) | 0;
    lo = lo + Math.imul(al2, bl5) | 0;
    mid = mid + Math.imul(al2, bh5) | 0;
    mid = mid + Math.imul(ah2, bl5) | 0;
    hi = hi + Math.imul(ah2, bh5) | 0;
    lo = lo + Math.imul(al1, bl6) | 0;
    mid = mid + Math.imul(al1, bh6) | 0;
    mid = mid + Math.imul(ah1, bl6) | 0;
    hi = hi + Math.imul(ah1, bh6) | 0;
    lo = lo + Math.imul(al0, bl7) | 0;
    mid = mid + Math.imul(al0, bh7) | 0;
    mid = mid + Math.imul(ah0, bl7) | 0;
    hi = hi + Math.imul(ah0, bh7) | 0;
    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */

    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = mid + Math.imul(ah8, bl0) | 0;
    hi = Math.imul(ah8, bh0);
    lo = lo + Math.imul(al7, bl1) | 0;
    mid = mid + Math.imul(al7, bh1) | 0;
    mid = mid + Math.imul(ah7, bl1) | 0;
    hi = hi + Math.imul(ah7, bh1) | 0;
    lo = lo + Math.imul(al6, bl2) | 0;
    mid = mid + Math.imul(al6, bh2) | 0;
    mid = mid + Math.imul(ah6, bl2) | 0;
    hi = hi + Math.imul(ah6, bh2) | 0;
    lo = lo + Math.imul(al5, bl3) | 0;
    mid = mid + Math.imul(al5, bh3) | 0;
    mid = mid + Math.imul(ah5, bl3) | 0;
    hi = hi + Math.imul(ah5, bh3) | 0;
    lo = lo + Math.imul(al4, bl4) | 0;
    mid = mid + Math.imul(al4, bh4) | 0;
    mid = mid + Math.imul(ah4, bl4) | 0;
    hi = hi + Math.imul(ah4, bh4) | 0;
    lo = lo + Math.imul(al3, bl5) | 0;
    mid = mid + Math.imul(al3, bh5) | 0;
    mid = mid + Math.imul(ah3, bl5) | 0;
    hi = hi + Math.imul(ah3, bh5) | 0;
    lo = lo + Math.imul(al2, bl6) | 0;
    mid = mid + Math.imul(al2, bh6) | 0;
    mid = mid + Math.imul(ah2, bl6) | 0;
    hi = hi + Math.imul(ah2, bh6) | 0;
    lo = lo + Math.imul(al1, bl7) | 0;
    mid = mid + Math.imul(al1, bh7) | 0;
    mid = mid + Math.imul(ah1, bl7) | 0;
    hi = hi + Math.imul(ah1, bh7) | 0;
    lo = lo + Math.imul(al0, bl8) | 0;
    mid = mid + Math.imul(al0, bh8) | 0;
    mid = mid + Math.imul(ah0, bl8) | 0;
    hi = hi + Math.imul(ah0, bh8) | 0;
    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */

    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = mid + Math.imul(ah9, bl0) | 0;
    hi = Math.imul(ah9, bh0);
    lo = lo + Math.imul(al8, bl1) | 0;
    mid = mid + Math.imul(al8, bh1) | 0;
    mid = mid + Math.imul(ah8, bl1) | 0;
    hi = hi + Math.imul(ah8, bh1) | 0;
    lo = lo + Math.imul(al7, bl2) | 0;
    mid = mid + Math.imul(al7, bh2) | 0;
    mid = mid + Math.imul(ah7, bl2) | 0;
    hi = hi + Math.imul(ah7, bh2) | 0;
    lo = lo + Math.imul(al6, bl3) | 0;
    mid = mid + Math.imul(al6, bh3) | 0;
    mid = mid + Math.imul(ah6, bl3) | 0;
    hi = hi + Math.imul(ah6, bh3) | 0;
    lo = lo + Math.imul(al5, bl4) | 0;
    mid = mid + Math.imul(al5, bh4) | 0;
    mid = mid + Math.imul(ah5, bl4) | 0;
    hi = hi + Math.imul(ah5, bh4) | 0;
    lo = lo + Math.imul(al4, bl5) | 0;
    mid = mid + Math.imul(al4, bh5) | 0;
    mid = mid + Math.imul(ah4, bl5) | 0;
    hi = hi + Math.imul(ah4, bh5) | 0;
    lo = lo + Math.imul(al3, bl6) | 0;
    mid = mid + Math.imul(al3, bh6) | 0;
    mid = mid + Math.imul(ah3, bl6) | 0;
    hi = hi + Math.imul(ah3, bh6) | 0;
    lo = lo + Math.imul(al2, bl7) | 0;
    mid = mid + Math.imul(al2, bh7) | 0;
    mid = mid + Math.imul(ah2, bl7) | 0;
    hi = hi + Math.imul(ah2, bh7) | 0;
    lo = lo + Math.imul(al1, bl8) | 0;
    mid = mid + Math.imul(al1, bh8) | 0;
    mid = mid + Math.imul(ah1, bl8) | 0;
    hi = hi + Math.imul(ah1, bh8) | 0;
    lo = lo + Math.imul(al0, bl9) | 0;
    mid = mid + Math.imul(al0, bh9) | 0;
    mid = mid + Math.imul(ah0, bl9) | 0;
    hi = hi + Math.imul(ah0, bh9) | 0;
    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */

    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = mid + Math.imul(ah9, bl1) | 0;
    hi = Math.imul(ah9, bh1);
    lo = lo + Math.imul(al8, bl2) | 0;
    mid = mid + Math.imul(al8, bh2) | 0;
    mid = mid + Math.imul(ah8, bl2) | 0;
    hi = hi + Math.imul(ah8, bh2) | 0;
    lo = lo + Math.imul(al7, bl3) | 0;
    mid = mid + Math.imul(al7, bh3) | 0;
    mid = mid + Math.imul(ah7, bl3) | 0;
    hi = hi + Math.imul(ah7, bh3) | 0;
    lo = lo + Math.imul(al6, bl4) | 0;
    mid = mid + Math.imul(al6, bh4) | 0;
    mid = mid + Math.imul(ah6, bl4) | 0;
    hi = hi + Math.imul(ah6, bh4) | 0;
    lo = lo + Math.imul(al5, bl5) | 0;
    mid = mid + Math.imul(al5, bh5) | 0;
    mid = mid + Math.imul(ah5, bl5) | 0;
    hi = hi + Math.imul(ah5, bh5) | 0;
    lo = lo + Math.imul(al4, bl6) | 0;
    mid = mid + Math.imul(al4, bh6) | 0;
    mid = mid + Math.imul(ah4, bl6) | 0;
    hi = hi + Math.imul(ah4, bh6) | 0;
    lo = lo + Math.imul(al3, bl7) | 0;
    mid = mid + Math.imul(al3, bh7) | 0;
    mid = mid + Math.imul(ah3, bl7) | 0;
    hi = hi + Math.imul(ah3, bh7) | 0;
    lo = lo + Math.imul(al2, bl8) | 0;
    mid = mid + Math.imul(al2, bh8) | 0;
    mid = mid + Math.imul(ah2, bl8) | 0;
    hi = hi + Math.imul(ah2, bh8) | 0;
    lo = lo + Math.imul(al1, bl9) | 0;
    mid = mid + Math.imul(al1, bh9) | 0;
    mid = mid + Math.imul(ah1, bl9) | 0;
    hi = hi + Math.imul(ah1, bh9) | 0;
    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */

    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = mid + Math.imul(ah9, bl2) | 0;
    hi = Math.imul(ah9, bh2);
    lo = lo + Math.imul(al8, bl3) | 0;
    mid = mid + Math.imul(al8, bh3) | 0;
    mid = mid + Math.imul(ah8, bl3) | 0;
    hi = hi + Math.imul(ah8, bh3) | 0;
    lo = lo + Math.imul(al7, bl4) | 0;
    mid = mid + Math.imul(al7, bh4) | 0;
    mid = mid + Math.imul(ah7, bl4) | 0;
    hi = hi + Math.imul(ah7, bh4) | 0;
    lo = lo + Math.imul(al6, bl5) | 0;
    mid = mid + Math.imul(al6, bh5) | 0;
    mid = mid + Math.imul(ah6, bl5) | 0;
    hi = hi + Math.imul(ah6, bh5) | 0;
    lo = lo + Math.imul(al5, bl6) | 0;
    mid = mid + Math.imul(al5, bh6) | 0;
    mid = mid + Math.imul(ah5, bl6) | 0;
    hi = hi + Math.imul(ah5, bh6) | 0;
    lo = lo + Math.imul(al4, bl7) | 0;
    mid = mid + Math.imul(al4, bh7) | 0;
    mid = mid + Math.imul(ah4, bl7) | 0;
    hi = hi + Math.imul(ah4, bh7) | 0;
    lo = lo + Math.imul(al3, bl8) | 0;
    mid = mid + Math.imul(al3, bh8) | 0;
    mid = mid + Math.imul(ah3, bl8) | 0;
    hi = hi + Math.imul(ah3, bh8) | 0;
    lo = lo + Math.imul(al2, bl9) | 0;
    mid = mid + Math.imul(al2, bh9) | 0;
    mid = mid + Math.imul(ah2, bl9) | 0;
    hi = hi + Math.imul(ah2, bh9) | 0;
    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */

    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = mid + Math.imul(ah9, bl3) | 0;
    hi = Math.imul(ah9, bh3);
    lo = lo + Math.imul(al8, bl4) | 0;
    mid = mid + Math.imul(al8, bh4) | 0;
    mid = mid + Math.imul(ah8, bl4) | 0;
    hi = hi + Math.imul(ah8, bh4) | 0;
    lo = lo + Math.imul(al7, bl5) | 0;
    mid = mid + Math.imul(al7, bh5) | 0;
    mid = mid + Math.imul(ah7, bl5) | 0;
    hi = hi + Math.imul(ah7, bh5) | 0;
    lo = lo + Math.imul(al6, bl6) | 0;
    mid = mid + Math.imul(al6, bh6) | 0;
    mid = mid + Math.imul(ah6, bl6) | 0;
    hi = hi + Math.imul(ah6, bh6) | 0;
    lo = lo + Math.imul(al5, bl7) | 0;
    mid = mid + Math.imul(al5, bh7) | 0;
    mid = mid + Math.imul(ah5, bl7) | 0;
    hi = hi + Math.imul(ah5, bh7) | 0;
    lo = lo + Math.imul(al4, bl8) | 0;
    mid = mid + Math.imul(al4, bh8) | 0;
    mid = mid + Math.imul(ah4, bl8) | 0;
    hi = hi + Math.imul(ah4, bh8) | 0;
    lo = lo + Math.imul(al3, bl9) | 0;
    mid = mid + Math.imul(al3, bh9) | 0;
    mid = mid + Math.imul(ah3, bl9) | 0;
    hi = hi + Math.imul(ah3, bh9) | 0;
    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */

    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = mid + Math.imul(ah9, bl4) | 0;
    hi = Math.imul(ah9, bh4);
    lo = lo + Math.imul(al8, bl5) | 0;
    mid = mid + Math.imul(al8, bh5) | 0;
    mid = mid + Math.imul(ah8, bl5) | 0;
    hi = hi + Math.imul(ah8, bh5) | 0;
    lo = lo + Math.imul(al7, bl6) | 0;
    mid = mid + Math.imul(al7, bh6) | 0;
    mid = mid + Math.imul(ah7, bl6) | 0;
    hi = hi + Math.imul(ah7, bh6) | 0;
    lo = lo + Math.imul(al6, bl7) | 0;
    mid = mid + Math.imul(al6, bh7) | 0;
    mid = mid + Math.imul(ah6, bl7) | 0;
    hi = hi + Math.imul(ah6, bh7) | 0;
    lo = lo + Math.imul(al5, bl8) | 0;
    mid = mid + Math.imul(al5, bh8) | 0;
    mid = mid + Math.imul(ah5, bl8) | 0;
    hi = hi + Math.imul(ah5, bh8) | 0;
    lo = lo + Math.imul(al4, bl9) | 0;
    mid = mid + Math.imul(al4, bh9) | 0;
    mid = mid + Math.imul(ah4, bl9) | 0;
    hi = hi + Math.imul(ah4, bh9) | 0;
    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */

    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = mid + Math.imul(ah9, bl5) | 0;
    hi = Math.imul(ah9, bh5);
    lo = lo + Math.imul(al8, bl6) | 0;
    mid = mid + Math.imul(al8, bh6) | 0;
    mid = mid + Math.imul(ah8, bl6) | 0;
    hi = hi + Math.imul(ah8, bh6) | 0;
    lo = lo + Math.imul(al7, bl7) | 0;
    mid = mid + Math.imul(al7, bh7) | 0;
    mid = mid + Math.imul(ah7, bl7) | 0;
    hi = hi + Math.imul(ah7, bh7) | 0;
    lo = lo + Math.imul(al6, bl8) | 0;
    mid = mid + Math.imul(al6, bh8) | 0;
    mid = mid + Math.imul(ah6, bl8) | 0;
    hi = hi + Math.imul(ah6, bh8) | 0;
    lo = lo + Math.imul(al5, bl9) | 0;
    mid = mid + Math.imul(al5, bh9) | 0;
    mid = mid + Math.imul(ah5, bl9) | 0;
    hi = hi + Math.imul(ah5, bh9) | 0;
    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */

    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = mid + Math.imul(ah9, bl6) | 0;
    hi = Math.imul(ah9, bh6);
    lo = lo + Math.imul(al8, bl7) | 0;
    mid = mid + Math.imul(al8, bh7) | 0;
    mid = mid + Math.imul(ah8, bl7) | 0;
    hi = hi + Math.imul(ah8, bh7) | 0;
    lo = lo + Math.imul(al7, bl8) | 0;
    mid = mid + Math.imul(al7, bh8) | 0;
    mid = mid + Math.imul(ah7, bl8) | 0;
    hi = hi + Math.imul(ah7, bh8) | 0;
    lo = lo + Math.imul(al6, bl9) | 0;
    mid = mid + Math.imul(al6, bh9) | 0;
    mid = mid + Math.imul(ah6, bl9) | 0;
    hi = hi + Math.imul(ah6, bh9) | 0;
    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */

    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = mid + Math.imul(ah9, bl7) | 0;
    hi = Math.imul(ah9, bh7);
    lo = lo + Math.imul(al8, bl8) | 0;
    mid = mid + Math.imul(al8, bh8) | 0;
    mid = mid + Math.imul(ah8, bl8) | 0;
    hi = hi + Math.imul(ah8, bh8) | 0;
    lo = lo + Math.imul(al7, bl9) | 0;
    mid = mid + Math.imul(al7, bh9) | 0;
    mid = mid + Math.imul(ah7, bl9) | 0;
    hi = hi + Math.imul(ah7, bh9) | 0;
    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */

    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = mid + Math.imul(ah9, bl8) | 0;
    hi = Math.imul(ah9, bh8);
    lo = lo + Math.imul(al8, bl9) | 0;
    mid = mid + Math.imul(al8, bh9) | 0;
    mid = mid + Math.imul(ah8, bl9) | 0;
    hi = hi + Math.imul(ah8, bh9) | 0;
    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */

    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = mid + Math.imul(ah9, bl9) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;
    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;

    if (c !== 0) {
      o[19] = c;
      out.length++;
    }

    return out;
  }; // Polyfill comb


  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo(self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;
    var carry = 0;
    var hncarry = 0;

    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);

      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;
        var lo = r & 0x3ffffff;
        ncarry = ncarry + (r / 0x4000000 | 0) | 0;
        lo = lo + rword | 0;
        rword = lo & 0x3ffffff;
        ncarry = ncarry + (lo >>> 26) | 0;
        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }

      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }

    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo(self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo(num, out) {
    var res;
    var len = this.length + num.length;

    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  }; // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion


  function FFTM(x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT(N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;

    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  }; // Returns binary-reversed representation of `x`


  FFTM.prototype.revBin = function revBin(x, l, N) {
    if (x === 0 || x === N - 1) return x;
    var rb = 0;

    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << l - i - 1;
      x >>= 1;
    }

    return rb;
  }; // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm


  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;
      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];
          var ro = rtws[p + j + s];
          var io = itws[p + j + s];
          var rx = rtwdf_ * ro - itwdf_ * io;
          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;
          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;
          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;
          /* jshint maxdepth : false */

          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;
            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;

    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];
      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;
      t = iws[i];
      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b(ws, N) {
    var carry = 0;

    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;
      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
    var carry = 0;

    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);
      rws[2 * i] = carry & 0x1fff;
      carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff;
      carry = carry >>> 13;
    } // Pad with zeroes


    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub(N) {
    var ph = new Array(N);

    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp(x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);
    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);
    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);
    var rmws = out.words;
    rmws.length = N;
    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);
    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);
    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  }; // Multiply `this` by `num`


  BN.prototype.mul = function mul(num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  }; // Multiply employing FFT


  BN.prototype.mulf = function mulf(num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  }; // In-place Multiplication


  BN.prototype.imul = function imul(num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln(num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000); // Carry

    var carry = 0;

    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum

      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln(num) {
    return this.clone().imuln(num);
  }; // `this` * `this`


  BN.prototype.sqr = function sqr() {
    return this.mul(this);
  }; // `this` * `this` in-place


  BN.prototype.isqr = function isqr() {
    return this.imul(this.clone());
  }; // Math.pow(`this`, `num`)


  BN.prototype.pow = function pow(num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1); // Skip leading zeroes

    var res = this;

    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;
        res = res.mul(q);
      }
    }

    return res;
  }; // Shift-left in-place


  BN.prototype.iushln = function iushln(bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = (this.words[i] | 0) - newCarry << r;
        this.words[i] = c | carry;
        carry = newCarry >>> 26 - r;
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln(bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  }; // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits


  BN.prototype.iushrn = function iushrn(bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;

    if (hint) {
      h = (hint - hint % 26) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
    var maskedWords = extended;
    h -= s;
    h = Math.max(0, h); // Extended mode, copy masked part

    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }

      maskedWords.length = s;
    }

    if (s === 0) {// No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;

      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;

    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = carry << 26 - r | word >>> r;
      carry = word & mask;
    } // Push carried bits as a mask


    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn(bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  }; // Shift-left


  BN.prototype.shln = function shln(bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln(bits) {
    return this.clone().iushln(bits);
  }; // Shift-right


  BN.prototype.shrn = function shrn(bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn(bits) {
    return this.clone().iushrn(bits);
  }; // Test if n bit is set


  BN.prototype.testn = function testn(bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r; // Fast case: bit is much higher than all existing words

    if (this.length <= s) return false; // Check bit and return

    var w = this.words[s];
    return !!(w & q);
  }; // Return only lowers bits of number (in-place)


  BN.prototype.imaskn = function imaskn(bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }

    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  }; // Return only lowers bits of number


  BN.prototype.maskn = function maskn(bits) {
    return this.clone().imaskn(bits);
  }; // Add plain number `num` to `this`


  BN.prototype.iaddn = function iaddn(num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num); // Possible sign change

    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    } // Add without checks


    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn(num) {
    this.words[0] += num; // Carry

    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;

      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }

    this.length = Math.max(this.length, i + 1);
    return this;
  }; // Subtract plain number `num` from `this`


  BN.prototype.isubn = function isubn(num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn(num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn(num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs() {
    this.negative = 0;
    return this;
  };

  BN.prototype.abs = function abs() {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;

    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - (right / 0x4000000 | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }

    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip(); // Subtraction overflow

    assert(carry === -1);
    carry = 0;

    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }

    this.negative = 1;
    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv(num, mode) {
    var shift = this.length - num.length;
    var a = this.clone();
    var b = num; // Normalize

    var bhi = b.words[b.length - 1] | 0;

    var bhiBits = this._countBits(bhi);

    shift = 26 - bhiBits;

    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    } // Initialize quotient


    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);

      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);

    if (diff.negative === 0) {
      a = diff;

      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)

      qj = Math.min(qj / bhi | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);

      while (a.negative !== 0) {
        qj--;
        a.negative = 0;

        a._ishlnsubmul(b, 1, j);

        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }

      if (q) {
        q.words[j] = qj;
      }
    }

    if (q) {
      q.strip();
    }

    a.strip(); // Denormalize

    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested


  BN.prototype.divmod = function divmod(num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;

    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();

        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();

        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    } // Both numbers are positive at this point
    // Strip both numbers to approximate shift value


    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    } // Very short reduction


    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  }; // Find `this` / `num`


  BN.prototype.div = function div(num) {
    return this.divmod(num, 'div', false).div;
  }; // Find `this` % `num`


  BN.prototype.mod = function mod(num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod(num) {
    return this.divmod(num, 'mod', true).mod;
  }; // Find Round(`this` / `num`)


  BN.prototype.divRound = function divRound(num) {
    var dm = this.divmod(num); // Fast case - exact division

    if (dm.mod.isZero()) return dm.div;
    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half); // Round down

    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up

    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn(num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;
    var acc = 0;

    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  }; // In-place division by number


  BN.prototype.idivn = function idivn(num) {
    assert(num <= 0x3ffffff);
    var carry = 0;

    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = w / num | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn(num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd(p) {
    assert(p.negative === 0);
    assert(!p.isZero());
    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    } // A * x + B * y = x


    var A = new BN(1);
    var B = new BN(0); // C * x + D * y = y

    var C = new BN(0);
    var D = new BN(1);
    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {
        ;
      }

      if (i > 0) {
        x.iushrn(i);

        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {
        ;
      }

      if (j > 0) {
        y.iushrn(j);

        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  }; // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed


  BN.prototype._invmp = function _invmp(p) {
    assert(p.negative === 0);
    assert(!p.isZero());
    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);
    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {
        ;
      }

      if (i > 0) {
        a.iushrn(i);

        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {
        ;
      }

      if (j > 0) {
        b.iushrn(j);

        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;

    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd(num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();
    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0; // Remove common factor of two

    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }

      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);

      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  }; // Invert number in the field F(num)


  BN.prototype.invm = function invm(num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven() {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd() {
    return (this.words[0] & 1) === 1;
  }; // And first word and num


  BN.prototype.andln = function andln(num) {
    return this.words[0] & num;
  }; // Increment at the bit position in-line


  BN.prototype.bincn = function bincn(bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r; // Fast case: bit is much higher than all existing words

    if (this.length <= s) {
      this._expand(s + 1);

      this.words[s] |= q;
      return this;
    } // Add bit and propagate, if needed


    var carry = q;

    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.isZero = function isZero() {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn(num) {
    var negative = num < 0;
    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;
    this.strip();
    var res;

    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');
      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }

    if (this.negative !== 0) return -res | 0;
    return res;
  }; // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`


  BN.prototype.cmp = function cmp(num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;
    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  }; // Unsigned comparison


  BN.prototype.ucmp = function ucmp(num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;
    var res = 0;

    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;
      if (a === b) continue;

      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }

      break;
    }

    return res;
  };

  BN.prototype.gtn = function gtn(num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt(num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten(num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte(num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn(num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt(num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten(num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte(num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn(num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq(num) {
    return this.cmp(num) === 0;
  }; //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //


  BN.red = function red(num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed(ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed() {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed(ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed(ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd(num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd(num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub(num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub(num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl(num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul(num) {
    assert(this.red, 'redMul works only with red numbers');

    this.red._verify2(this, num);

    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul(num) {
    assert(this.red, 'redMul works only with red numbers');

    this.red._verify2(this, num);

    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr() {
    assert(this.red, 'redSqr works only with red numbers');

    this.red._verify1(this);

    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr() {
    assert(this.red, 'redISqr works only with red numbers');

    this.red._verify1(this);

    return this.red.isqr(this);
  }; // Square root over p


  BN.prototype.redSqrt = function redSqrt() {
    assert(this.red, 'redSqrt works only with red numbers');

    this.red._verify1(this);

    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm() {
    assert(this.red, 'redInvm works only with red numbers');

    this.red._verify1(this);

    return this.red.invm(this);
  }; // Return negative clone of `this` % `red modulo`


  BN.prototype.redNeg = function redNeg() {
    assert(this.red, 'redNeg works only with red numbers');

    this.red._verify1(this);

    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow(num) {
    assert(this.red && !num.red, 'redPow(normalNum)');

    this.red._verify1(this);

    return this.red.pow(this, num);
  }; // Prime numbers with efficient reduction


  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  }; // Pseudo-Mersenne prime

  function MPrime(name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);
    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp() {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce(num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);

    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split(input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK(num) {
    return num.imul(this.k);
  };

  function K256() {
    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }

  inherits(K256, MPrime);

  K256.prototype.split = function split(input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;
    var outLen = Math.min(input.length, 9);

    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }

    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    } // Shift by 9 limbs


    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
      prev = next;
    }

    prev >>>= 22;
    input.words[i - 10] = prev;

    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK(num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390

    var lo = 0;

    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + (lo / 0x4000000 | 0);
    } // Fast length reduction


    if (num.words[num.length - 1] === 0) {
      num.length--;

      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }

    return num;
  };

  function P224() {
    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }

  inherits(P224, MPrime);

  function P192() {
    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }

  inherits(P192, MPrime);

  function P25519() {
    // 2 ^ 255 - 19
    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }

  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK(num) {
    // K = 0x13
    var carry = 0;

    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;
      num.words[i] = lo;
      carry = hi;
    }

    if (carry !== 0) {
      num.words[num.length++] = carry;
    }

    return num;
  }; // Exported mostly for testing purposes, use plain name instead


  BN._prime = function prime(name) {
    // Cached version of prime
    if (primes[name]) return primes[name];
    var prime;

    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }

    primes[name] = prime;
    return prime;
  }; //
  // Base reduction engine
  //


  function Red(m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);

      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1(a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2(a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red, 'red works only with red numbers');
  };

  Red.prototype.imod = function imod(a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg(a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add(a, b) {
    this._verify2(a, b);

    var res = a.add(b);

    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }

    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd(a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);

    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }

    return res;
  };

  Red.prototype.sub = function sub(a, b) {
    this._verify2(a, b);

    var res = a.sub(b);

    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Red.prototype.isub = function isub(a, b) {
    this._verify2(a, b);

    var res = a.isub(b);

    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }

    return res;
  };

  Red.prototype.shl = function shl(a, num) {
    this._verify1(a);

    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul(a, b) {
    this._verify2(a, b);

    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul(a, b) {
    this._verify2(a, b);

    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr(a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr(a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt(a) {
    if (a.isZero()) return a.clone();
    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1); // Fast case

    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)


    var q = this.m.subn(1);
    var s = 0;

    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }

    assert(!q.isZero());
    var one = new BN(1).toRed(this);
    var nOne = one.redNeg(); // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.

    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;

    while (t.cmp(one) !== 0) {
      var tmp = t;

      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }

      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));
      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm(a) {
    var inv = a._invmp(this.m);

    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow(a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();
    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;

    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;

    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];

      for (var j = start - 1; j >= 0; j--) {
        var bit = word >> j & 1;

        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }

      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo(num) {
    var r = num.umod(this.m);
    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom(num) {
    var res = num.clone();
    res.red = null;
    return res;
  }; //
  // Montgomery method engine
  //


  BN.mont = function mont(num) {
    return new Mont(num);
  };

  function Mont(m) {
    Red.call(this, m);
    this.shift = this.m.bitLength();

    if (this.shift % 26 !== 0) {
      this.shift += 26 - this.shift % 26;
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);
    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }

  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo(num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom(num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul(a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul(a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm(a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})( false || module, this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(55)(module)))

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _assertThisInitialized; });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _createSuper; });

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(18);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js
function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(11);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return Object(assertThisInitialized["a" /* default */])(self);
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js



function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();
  return function _createSuperInternal() {
    var Super = Object(getPrototypeOf["a" /* default */])(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = Object(getPrototypeOf["a" /* default */])(this).constructor;
      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _inherits; });

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = this && this.__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var __rest = this && this.__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gql = exports.batchRequests = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;

var cross_fetch_1 = __importStar(__webpack_require__(31)),
    CrossFetch = cross_fetch_1;

var printer_1 = __webpack_require__(91);

var createRequestBody_1 = __importDefault(__webpack_require__(66));

var types_1 = __webpack_require__(42);

var types_2 = __webpack_require__(42);

Object.defineProperty(exports, "ClientError", {
  enumerable: true,
  get: function get() {
    return types_2.ClientError;
  }
});
/**
 * Convert the given headers configuration into a plain object.
 */

var resolveHeaders = function resolveHeaders(headers) {
  var oHeaders = {};

  if (headers) {
    if (typeof Headers !== 'undefined' && headers instanceof Headers || headers instanceof CrossFetch.Headers) {
      oHeaders = HeadersInstanceToPlainObject(headers);
    } else if (Array.isArray(headers)) {
      headers.forEach(function (_a) {
        var name = _a[0],
            value = _a[1];
        oHeaders[name] = value;
      });
    } else {
      oHeaders = headers;
    }
  }

  return oHeaders;
};
/**
 * Clean a GraphQL document to send it via a GET query
 *
 * @param {string} str GraphQL query
 * @returns {string} Cleaned query
 */


var queryCleanner = function queryCleanner(str) {
  return str.replace(/([\s,]|#[^\n\r]+)+/g, ' ').trim();
};
/**
 * Create query string for GraphQL request
 *
 * @param {object} param0 -
 *
 * @param {string|string[]} param0.query the GraphQL document or array of document if it's a batch request
 * @param {string|undefined} param0.operationName the GraphQL operation name
 * @param {any|any[]} param0.variables the GraphQL variables to use
 */


var buildGetQueryParams = function buildGetQueryParams(_a) {
  var query = _a.query,
      variables = _a.variables,
      operationName = _a.operationName;

  if (!Array.isArray(query)) {
    var search = ["query=" + encodeURIComponent(queryCleanner(query))];

    if (variables) {
      search.push("variables=" + encodeURIComponent(JSON.stringify(variables)));
    }

    if (operationName) {
      search.push("operationName=" + encodeURIComponent(operationName));
    }

    return search.join('&');
  }

  if (typeof variables !== 'undefined' && !Array.isArray(variables)) {
    throw new Error('Cannot create query with given variable type, array expected');
  } // Batch support


  var payload = query.reduce(function (accu, currentQuery, index) {
    accu.push({
      query: queryCleanner(currentQuery),
      variables: variables ? JSON.stringify(variables[index]) : undefined
    });
    return accu;
  }, []);
  return "query=" + encodeURIComponent(JSON.stringify(payload));
};
/**
 * Fetch data using POST method
 */


var post = function post(_a) {
  var url = _a.url,
      query = _a.query,
      variables = _a.variables,
      operationName = _a.operationName,
      headers = _a.headers,
      fetch = _a.fetch,
      fetchOptions = _a.fetchOptions;
  return __awaiter(void 0, void 0, void 0, function () {
    var body;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          body = createRequestBody_1.default(query, variables, operationName);
          return [4
          /*yield*/
          , fetch(url, __assign({
            method: 'POST',
            headers: __assign(__assign({}, typeof body === 'string' ? {
              'Content-Type': 'application/json'
            } : {}), headers),
            body: body
          }, fetchOptions))];

        case 1:
          return [2
          /*return*/
          , _b.sent()];
      }
    });
  });
};
/**
 * Fetch data using GET method
 */


var get = function get(_a) {
  var url = _a.url,
      query = _a.query,
      variables = _a.variables,
      operationName = _a.operationName,
      headers = _a.headers,
      fetch = _a.fetch,
      fetchOptions = _a.fetchOptions;
  return __awaiter(void 0, void 0, void 0, function () {
    var queryParams;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          queryParams = buildGetQueryParams({
            query: query,
            variables: variables,
            operationName: operationName
          });
          return [4
          /*yield*/
          , fetch(url + "?" + queryParams, __assign({
            method: 'GET',
            headers: headers
          }, fetchOptions))];

        case 1:
          return [2
          /*return*/
          , _b.sent()];
      }
    });
  });
};
/**
 * todo
 */


var GraphQLClient =
/** @class */
function () {
  function GraphQLClient(url, options) {
    this.url = url;
    this.options = options || {};
  }

  GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {
    var _a = this.options,
        headers = _a.headers,
        _b = _a.fetch,
        fetch = _b === void 0 ? cross_fetch_1.default : _b,
        _c = _a.method,
        method = _c === void 0 ? 'POST' : _c,
        fetchOptions = __rest(_a, ["headers", "fetch", "method"]);

    var url = this.url;
    return makeRequest({
      url: url,
      query: query,
      variables: variables,
      headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),
      operationName: undefined,
      fetch: fetch,
      method: method,
      fetchOptions: fetchOptions
    });
  };
  /**
   * Send a GraphQL document to the server.
   */


  GraphQLClient.prototype.request = function (document, variables, requestHeaders) {
    return __awaiter(this, void 0, void 0, function () {
      var _a, headers, _b, fetch, _c, method, fetchOptions, url, _d, query, operationName, data;

      return __generator(this, function (_e) {
        switch (_e.label) {
          case 0:
            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, ["headers", "fetch", "method"]);
            url = this.url;
            _d = resolveRequestDocument(document), query = _d.query, operationName = _d.operationName;
            return [4
            /*yield*/
            , makeRequest({
              url: url,
              query: query,
              variables: variables,
              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),
              operationName: operationName,
              fetch: fetch,
              method: method,
              fetchOptions: fetchOptions
            })];

          case 1:
            data = _e.sent().data;
            return [2
            /*return*/
            , data];
        }
      });
    });
  };
  /**
   * Send a GraphQL document to the server.
   */


  GraphQLClient.prototype.batchRequests = function (documents, requestHeaders) {
    return __awaiter(this, void 0, void 0, function () {
      var _a, headers, _b, fetch, _c, method, fetchOptions, url, queries, variables, data;

      return __generator(this, function (_d) {
        switch (_d.label) {
          case 0:
            _a = this.options, headers = _a.headers, _b = _a.fetch, fetch = _b === void 0 ? cross_fetch_1.default : _b, _c = _a.method, method = _c === void 0 ? 'POST' : _c, fetchOptions = __rest(_a, ["headers", "fetch", "method"]);
            url = this.url;
            queries = documents.map(function (_a) {
              var document = _a.document;
              return resolveRequestDocument(document).query;
            });
            variables = documents.map(function (_a) {
              var variables = _a.variables;
              return variables;
            });
            return [4
            /*yield*/
            , makeRequest({
              url: url,
              query: queries,
              variables: variables,
              headers: __assign(__assign({}, resolveHeaders(headers)), resolveHeaders(requestHeaders)),
              operationName: undefined,
              fetch: fetch,
              method: method,
              fetchOptions: fetchOptions
            })];

          case 1:
            data = _d.sent().data;
            return [2
            /*return*/
            , data];
        }
      });
    });
  };

  GraphQLClient.prototype.setHeaders = function (headers) {
    this.options.headers = headers;
    return this;
  };
  /**
   * Attach a header to the client. All subsequent requests will have this header.
   */


  GraphQLClient.prototype.setHeader = function (key, value) {
    var _a;

    var headers = this.options.headers;

    if (headers) {
      // todo what if headers is in nested array form... ?
      //@ts-ignore
      headers[key] = value;
    } else {
      this.options.headers = (_a = {}, _a[key] = value, _a);
    }

    return this;
  };
  /**
   * Change the client endpoint. All subsequent requests will send to this endpoint.
   */


  GraphQLClient.prototype.setEndpoint = function (value) {
    this.url = value;
    return this;
  };

  return GraphQLClient;
}();

exports.GraphQLClient = GraphQLClient;

function makeRequest(_a) {
  var url = _a.url,
      query = _a.query,
      variables = _a.variables,
      headers = _a.headers,
      operationName = _a.operationName,
      fetch = _a.fetch,
      _b = _a.method,
      method = _b === void 0 ? 'POST' : _b,
      fetchOptions = _a.fetchOptions;
  return __awaiter(this, void 0, void 0, function () {
    var fetcher, isBathchingQuery, response, result, successfullyReceivedData, headers_1, status_1, errorResult;
    return __generator(this, function (_c) {
      switch (_c.label) {
        case 0:
          fetcher = method.toUpperCase() === 'POST' ? post : get;
          isBathchingQuery = Array.isArray(query);
          return [4
          /*yield*/
          , fetcher({
            url: url,
            query: query,
            variables: variables,
            operationName: operationName,
            headers: headers,
            fetch: fetch,
            fetchOptions: fetchOptions
          })];

        case 1:
          response = _c.sent();
          return [4
          /*yield*/
          , getResult(response)];

        case 2:
          result = _c.sent();
          successfullyReceivedData = isBathchingQuery && Array.isArray(result) ? !result.some(function (_a) {
            var data = _a.data;
            return !data;
          }) : !!result.data;

          if (response.ok && !result.errors && successfullyReceivedData) {
            headers_1 = response.headers, status_1 = response.status;
            return [2
            /*return*/
            , __assign(__assign({}, isBathchingQuery ? {
              data: result
            } : result), {
              headers: headers_1,
              status: status_1
            })];
          } else {
            errorResult = typeof result === 'string' ? {
              error: result
            } : result;
            throw new types_1.ClientError(__assign(__assign({}, errorResult), {
              status: response.status,
              headers: response.headers
            }), {
              query: query,
              variables: variables
            });
          }

          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * todo
 */


function rawRequest(url, query, variables, requestHeaders) {
  return __awaiter(this, void 0, void 0, function () {
    var client;
    return __generator(this, function (_a) {
      client = new GraphQLClient(url);
      return [2
      /*return*/
      , client.rawRequest(query, variables, requestHeaders)];
    });
  });
}

exports.rawRequest = rawRequest;
/**
 * Send a GraphQL Document to the GraphQL server for exectuion.
 *
 * @example
 *
 * ```ts
 * // You can pass a raw string
 *
 * await request('https://foo.bar/graphql', `
 *   {
 *     query {
 *       users
 *     }
 *   }
 * `)
 *
 * // You can also pass a GraphQL DocumentNode. Convenient if you
 * // are using graphql-tag package.
 *
 * import gql from 'graphql-tag'
 *
 * await request('https://foo.bar/graphql', gql`...`)
 *
 * // If you don't actually care about using DocumentNode but just
 * // want the tooling support for gql template tag like IDE syntax
 * // coloring and prettier autoformat then note you can use the
 * // passthrough gql tag shipped with graphql-request to save a bit
 * // of performance and not have to install another dep into your project.
 *
 * import { gql } from 'graphql-request'
 *
 * await request('https://foo.bar/graphql', gql`...`)
 * ```
 */

function request(url, document, variables, requestHeaders) {
  return __awaiter(this, void 0, void 0, function () {
    var client;
    return __generator(this, function (_a) {
      client = new GraphQLClient(url);
      return [2
      /*return*/
      , client.request(document, variables, requestHeaders)];
    });
  });
}

exports.request = request;
/**
 * Send a batch of GraphQL Document to the GraphQL server for exectuion.
 *
 * @example
 *
 * ```ts
 * // You can pass a raw string
 *
 * await batchRequests('https://foo.bar/graphql', [
 * {
 *  query: `
 *   {
 *     query {
 *       users
 *     }
 *   }`
 * },
 * {
 *   query: `
 *   {
 *     query {
 *       users
 *     }
 *   }`
 * }])
 *
 * // You can also pass a GraphQL DocumentNode as query. Convenient if you
 * // are using graphql-tag package.
 *
 * import gql from 'graphql-tag'
 *
 * await batchRequests('https://foo.bar/graphql', [{ query: gql`...` }])
 * ```
 */

function batchRequests(url, documents, requestHeaders) {
  return __awaiter(this, void 0, void 0, function () {
    var client;
    return __generator(this, function (_a) {
      client = new GraphQLClient(url);
      return [2
      /*return*/
      , client.batchRequests(documents, requestHeaders)];
    });
  });
}

exports.batchRequests = batchRequests;
exports.default = request;
/**
 * todo
 */

function getResult(response) {
  var contentType = response.headers.get('Content-Type');

  if (contentType && contentType.startsWith('application/json')) {
    return response.json();
  } else {
    return response.text();
  }
}
/**
 * helpers
 */


function resolveRequestDocument(document) {
  var _a;

  if (typeof document === 'string') return {
    query: document
  };
  var operationName = undefined;
  var operationDefinitions = document.definitions.filter(function (definition) {
    return definition.kind === 'OperationDefinition';
  });

  if (operationDefinitions.length === 1) {
    operationName = (_a = operationDefinitions[0].name) === null || _a === void 0 ? void 0 : _a.value;
  }

  return {
    query: printer_1.print(document),
    operationName: operationName
  };
}
/**
 * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.
 *
 * @example
 *
 * import { gql } from 'graphql-request'
 *
 * await request('https://foo.bar/graphql', gql`...`)
 *
 * @remarks
 *
 * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named "gql". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.
 */


function gql(chunks) {
  var variables = [];

  for (var _i = 1; _i < arguments.length; _i++) {
    variables[_i - 1] = arguments[_i];
  }

  return chunks.reduce(function (accumulator, chunk, index) {
    return "" + accumulator + chunk + (index in variables ? variables[index] : '');
  }, '');
}

exports.gql = gql;
/**
 * Convert Headers instance into regular object
 */

function HeadersInstanceToPlainObject(headers) {
  var o = {};
  headers.forEach(function (v, k) {
    o[k] = v;
  });
  return o;
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;
hash.utils = __webpack_require__(17);
hash.common = __webpack_require__(25);
hash.sha = __webpack_require__(74);
hash.ripemd = __webpack_require__(78);
hash.hmac = __webpack_require__(79); // Proxy hash functions to the main object

hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


(function (root) {
  function checkInt(value) {
    return parseInt(value) === value;
  }

  function checkInts(arrayish) {
    if (!checkInt(arrayish.length)) {
      return false;
    }

    for (var i = 0; i < arrayish.length; i++) {
      if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
        return false;
      }
    }

    return true;
  }

  function coerceArray(arg, copy) {
    // ArrayBuffer view
    if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {
      if (copy) {
        if (arg.slice) {
          arg = arg.slice();
        } else {
          arg = Array.prototype.slice.call(arg);
        }
      }

      return arg;
    } // It's an array; check it is a valid representation of a byte


    if (Array.isArray(arg)) {
      if (!checkInts(arg)) {
        throw new Error('Array contains invalid value: ' + arg);
      }

      return new Uint8Array(arg);
    } // Something else, but behaves like an array (maybe a Buffer? Arguments?)


    if (checkInt(arg.length) && checkInts(arg)) {
      return new Uint8Array(arg);
    }

    throw new Error('unsupported array-like object');
  }

  function createArray(length) {
    return new Uint8Array(length);
  }

  function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
    if (sourceStart != null || sourceEnd != null) {
      if (sourceArray.slice) {
        sourceArray = sourceArray.slice(sourceStart, sourceEnd);
      } else {
        sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
      }
    }

    targetArray.set(sourceArray, targetStart);
  }

  var convertUtf8 = function () {
    function toBytes(text) {
      var result = [],
          i = 0;
      text = encodeURI(text);

      while (i < text.length) {
        var c = text.charCodeAt(i++); // if it is a % sign, encode the following 2 bytes as a hex value

        if (c === 37) {
          result.push(parseInt(text.substr(i, 2), 16));
          i += 2; // otherwise, just the actual byte
        } else {
          result.push(c);
        }
      }

      return coerceArray(result);
    }

    function fromBytes(bytes) {
      var result = [],
          i = 0;

      while (i < bytes.length) {
        var c = bytes[i];

        if (c < 128) {
          result.push(String.fromCharCode(c));
          i++;
        } else if (c > 191 && c < 224) {
          result.push(String.fromCharCode((c & 0x1f) << 6 | bytes[i + 1] & 0x3f));
          i += 2;
        } else {
          result.push(String.fromCharCode((c & 0x0f) << 12 | (bytes[i + 1] & 0x3f) << 6 | bytes[i + 2] & 0x3f));
          i += 3;
        }
      }

      return result.join('');
    }

    return {
      toBytes: toBytes,
      fromBytes: fromBytes
    };
  }();

  var convertHex = function () {
    function toBytes(text) {
      var result = [];

      for (var i = 0; i < text.length; i += 2) {
        result.push(parseInt(text.substr(i, 2), 16));
      }

      return result;
    } // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html


    var Hex = '0123456789abcdef';

    function fromBytes(bytes) {
      var result = [];

      for (var i = 0; i < bytes.length; i++) {
        var v = bytes[i];
        result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
      }

      return result.join('');
    }

    return {
      toBytes: toBytes,
      fromBytes: fromBytes
    };
  }(); // Number of rounds by keysize


  var numberOfRounds = {
    16: 10,
    24: 12,
    32: 14
  }; // Round constant words

  var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91]; // S-box and Inverse S-box (S is for Substitution)

  var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];
  var Si = [0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]; // Transformations for encryption

  var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];
  var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];
  var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];
  var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c]; // Transformations for decryption

  var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];
  var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];
  var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];
  var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0]; // Transformations for decryption key expansion

  var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];
  var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];
  var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];
  var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

  function convertToInt32(bytes) {
    var result = [];

    for (var i = 0; i < bytes.length; i += 4) {
      result.push(bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]);
    }

    return result;
  }

  var AES = function AES(key) {
    if (!(this instanceof AES)) {
      throw Error('AES must be instanitated with `new`');
    }

    Object.defineProperty(this, 'key', {
      value: coerceArray(key, true)
    });

    this._prepare();
  };

  AES.prototype._prepare = function () {
    var rounds = numberOfRounds[this.key.length];

    if (rounds == null) {
      throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
    } // encryption round keys


    this._Ke = []; // decryption round keys

    this._Kd = [];

    for (var i = 0; i <= rounds; i++) {
      this._Ke.push([0, 0, 0, 0]);

      this._Kd.push([0, 0, 0, 0]);
    }

    var roundKeyCount = (rounds + 1) * 4;
    var KC = this.key.length / 4; // convert the key into ints

    var tk = convertToInt32(this.key); // copy values into round key arrays

    var index;

    for (var i = 0; i < KC; i++) {
      index = i >> 2;
      this._Ke[index][i % 4] = tk[i];
      this._Kd[rounds - index][i % 4] = tk[i];
    } // key expansion (fips-197 section 5.2)


    var rconpointer = 0;
    var t = KC,
        tt;

    while (t < roundKeyCount) {
      tt = tk[KC - 1];
      tk[0] ^= S[tt >> 16 & 0xFF] << 24 ^ S[tt >> 8 & 0xFF] << 16 ^ S[tt & 0xFF] << 8 ^ S[tt >> 24 & 0xFF] ^ rcon[rconpointer] << 24;
      rconpointer += 1; // key expansion (for non-256 bit)

      if (KC != 8) {
        for (var i = 1; i < KC; i++) {
          tk[i] ^= tk[i - 1];
        } // key expansion for 256-bit keys is "slightly different" (fips-197)

      } else {
        for (var i = 1; i < KC / 2; i++) {
          tk[i] ^= tk[i - 1];
        }

        tt = tk[KC / 2 - 1];
        tk[KC / 2] ^= S[tt & 0xFF] ^ S[tt >> 8 & 0xFF] << 8 ^ S[tt >> 16 & 0xFF] << 16 ^ S[tt >> 24 & 0xFF] << 24;

        for (var i = KC / 2 + 1; i < KC; i++) {
          tk[i] ^= tk[i - 1];
        }
      } // copy values into round key arrays


      var i = 0,
          r,
          c;

      while (i < KC && t < roundKeyCount) {
        r = t >> 2;
        c = t % 4;
        this._Ke[r][c] = tk[i];
        this._Kd[rounds - r][c] = tk[i++];
        t++;
      }
    } // inverse-cipher-ify the decryption round key (fips-197 section 5.3)


    for (var r = 1; r < rounds; r++) {
      for (var c = 0; c < 4; c++) {
        tt = this._Kd[r][c];
        this._Kd[r][c] = U1[tt >> 24 & 0xFF] ^ U2[tt >> 16 & 0xFF] ^ U3[tt >> 8 & 0xFF] ^ U4[tt & 0xFF];
      }
    }
  };

  AES.prototype.encrypt = function (plaintext) {
    if (plaintext.length != 16) {
      throw new Error('invalid plaintext size (must be 16 bytes)');
    }

    var rounds = this._Ke.length - 1;
    var a = [0, 0, 0, 0]; // convert plaintext to (ints ^ key)

    var t = convertToInt32(plaintext);

    for (var i = 0; i < 4; i++) {
      t[i] ^= this._Ke[0][i];
    } // apply round transforms


    for (var r = 1; r < rounds; r++) {
      for (var i = 0; i < 4; i++) {
        a[i] = T1[t[i] >> 24 & 0xff] ^ T2[t[(i + 1) % 4] >> 16 & 0xff] ^ T3[t[(i + 2) % 4] >> 8 & 0xff] ^ T4[t[(i + 3) % 4] & 0xff] ^ this._Ke[r][i];
      }

      t = a.slice();
    } // the last round is special


    var result = createArray(16),
        tt;

    for (var i = 0; i < 4; i++) {
      tt = this._Ke[rounds][i];
      result[4 * i] = (S[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
      result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
      result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
      result[4 * i + 3] = (S[t[(i + 3) % 4] & 0xff] ^ tt) & 0xff;
    }

    return result;
  };

  AES.prototype.decrypt = function (ciphertext) {
    if (ciphertext.length != 16) {
      throw new Error('invalid ciphertext size (must be 16 bytes)');
    }

    var rounds = this._Kd.length - 1;
    var a = [0, 0, 0, 0]; // convert plaintext to (ints ^ key)

    var t = convertToInt32(ciphertext);

    for (var i = 0; i < 4; i++) {
      t[i] ^= this._Kd[0][i];
    } // apply round transforms


    for (var r = 1; r < rounds; r++) {
      for (var i = 0; i < 4; i++) {
        a[i] = T5[t[i] >> 24 & 0xff] ^ T6[t[(i + 3) % 4] >> 16 & 0xff] ^ T7[t[(i + 2) % 4] >> 8 & 0xff] ^ T8[t[(i + 1) % 4] & 0xff] ^ this._Kd[r][i];
      }

      t = a.slice();
    } // the last round is special


    var result = createArray(16),
        tt;

    for (var i = 0; i < 4; i++) {
      tt = this._Kd[rounds][i];
      result[4 * i] = (Si[t[i] >> 24 & 0xff] ^ tt >> 24) & 0xff;
      result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 0xff] ^ tt >> 16) & 0xff;
      result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 0xff] ^ tt >> 8) & 0xff;
      result[4 * i + 3] = (Si[t[(i + 1) % 4] & 0xff] ^ tt) & 0xff;
    }

    return result;
  };
  /**
   *  Mode Of Operation - Electonic Codebook (ECB)
   */


  var ModeOfOperationECB = function ModeOfOperationECB(key) {
    if (!(this instanceof ModeOfOperationECB)) {
      throw Error('AES must be instanitated with `new`');
    }

    this.description = "Electronic Code Block";
    this.name = "ecb";
    this._aes = new AES(key);
  };

  ModeOfOperationECB.prototype.encrypt = function (plaintext) {
    plaintext = coerceArray(plaintext);

    if (plaintext.length % 16 !== 0) {
      throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
    }

    var ciphertext = createArray(plaintext.length);
    var block = createArray(16);

    for (var i = 0; i < plaintext.length; i += 16) {
      copyArray(plaintext, block, 0, i, i + 16);
      block = this._aes.encrypt(block);
      copyArray(block, ciphertext, i);
    }

    return ciphertext;
  };

  ModeOfOperationECB.prototype.decrypt = function (ciphertext) {
    ciphertext = coerceArray(ciphertext);

    if (ciphertext.length % 16 !== 0) {
      throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
    }

    var plaintext = createArray(ciphertext.length);
    var block = createArray(16);

    for (var i = 0; i < ciphertext.length; i += 16) {
      copyArray(ciphertext, block, 0, i, i + 16);
      block = this._aes.decrypt(block);
      copyArray(block, plaintext, i);
    }

    return plaintext;
  };
  /**
   *  Mode Of Operation - Cipher Block Chaining (CBC)
   */


  var ModeOfOperationCBC = function ModeOfOperationCBC(key, iv) {
    if (!(this instanceof ModeOfOperationCBC)) {
      throw Error('AES must be instanitated with `new`');
    }

    this.description = "Cipher Block Chaining";
    this.name = "cbc";

    if (!iv) {
      iv = createArray(16);
    } else if (iv.length != 16) {
      throw new Error('invalid initialation vector size (must be 16 bytes)');
    }

    this._lastCipherblock = coerceArray(iv, true);
    this._aes = new AES(key);
  };

  ModeOfOperationCBC.prototype.encrypt = function (plaintext) {
    plaintext = coerceArray(plaintext);

    if (plaintext.length % 16 !== 0) {
      throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
    }

    var ciphertext = createArray(plaintext.length);
    var block = createArray(16);

    for (var i = 0; i < plaintext.length; i += 16) {
      copyArray(plaintext, block, 0, i, i + 16);

      for (var j = 0; j < 16; j++) {
        block[j] ^= this._lastCipherblock[j];
      }

      this._lastCipherblock = this._aes.encrypt(block);
      copyArray(this._lastCipherblock, ciphertext, i);
    }

    return ciphertext;
  };

  ModeOfOperationCBC.prototype.decrypt = function (ciphertext) {
    ciphertext = coerceArray(ciphertext);

    if (ciphertext.length % 16 !== 0) {
      throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
    }

    var plaintext = createArray(ciphertext.length);
    var block = createArray(16);

    for (var i = 0; i < ciphertext.length; i += 16) {
      copyArray(ciphertext, block, 0, i, i + 16);
      block = this._aes.decrypt(block);

      for (var j = 0; j < 16; j++) {
        plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
      }

      copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
    }

    return plaintext;
  };
  /**
   *  Mode Of Operation - Cipher Feedback (CFB)
   */


  var ModeOfOperationCFB = function ModeOfOperationCFB(key, iv, segmentSize) {
    if (!(this instanceof ModeOfOperationCFB)) {
      throw Error('AES must be instanitated with `new`');
    }

    this.description = "Cipher Feedback";
    this.name = "cfb";

    if (!iv) {
      iv = createArray(16);
    } else if (iv.length != 16) {
      throw new Error('invalid initialation vector size (must be 16 size)');
    }

    if (!segmentSize) {
      segmentSize = 1;
    }

    this.segmentSize = segmentSize;
    this._shiftRegister = coerceArray(iv, true);
    this._aes = new AES(key);
  };

  ModeOfOperationCFB.prototype.encrypt = function (plaintext) {
    if (plaintext.length % this.segmentSize != 0) {
      throw new Error('invalid plaintext size (must be segmentSize bytes)');
    }

    var encrypted = coerceArray(plaintext, true);
    var xorSegment;

    for (var i = 0; i < encrypted.length; i += this.segmentSize) {
      xorSegment = this._aes.encrypt(this._shiftRegister);

      for (var j = 0; j < this.segmentSize; j++) {
        encrypted[i + j] ^= xorSegment[j];
      } // Shift the register


      copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
      copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
    }

    return encrypted;
  };

  ModeOfOperationCFB.prototype.decrypt = function (ciphertext) {
    if (ciphertext.length % this.segmentSize != 0) {
      throw new Error('invalid ciphertext size (must be segmentSize bytes)');
    }

    var plaintext = coerceArray(ciphertext, true);
    var xorSegment;

    for (var i = 0; i < plaintext.length; i += this.segmentSize) {
      xorSegment = this._aes.encrypt(this._shiftRegister);

      for (var j = 0; j < this.segmentSize; j++) {
        plaintext[i + j] ^= xorSegment[j];
      } // Shift the register


      copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
      copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
    }

    return plaintext;
  };
  /**
   *  Mode Of Operation - Output Feedback (OFB)
   */


  var ModeOfOperationOFB = function ModeOfOperationOFB(key, iv) {
    if (!(this instanceof ModeOfOperationOFB)) {
      throw Error('AES must be instanitated with `new`');
    }

    this.description = "Output Feedback";
    this.name = "ofb";

    if (!iv) {
      iv = createArray(16);
    } else if (iv.length != 16) {
      throw new Error('invalid initialation vector size (must be 16 bytes)');
    }

    this._lastPrecipher = coerceArray(iv, true);
    this._lastPrecipherIndex = 16;
    this._aes = new AES(key);
  };

  ModeOfOperationOFB.prototype.encrypt = function (plaintext) {
    var encrypted = coerceArray(plaintext, true);

    for (var i = 0; i < encrypted.length; i++) {
      if (this._lastPrecipherIndex === 16) {
        this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
        this._lastPrecipherIndex = 0;
      }

      encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
    }

    return encrypted;
  }; // Decryption is symetric


  ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
  /**
   *  Counter object for CTR common mode of operation
   */

  var Counter = function Counter(initialValue) {
    if (!(this instanceof Counter)) {
      throw Error('Counter must be instanitated with `new`');
    } // We allow 0, but anything false-ish uses the default 1


    if (initialValue !== 0 && !initialValue) {
      initialValue = 1;
    }

    if (typeof initialValue === 'number') {
      this._counter = createArray(16);
      this.setValue(initialValue);
    } else {
      this.setBytes(initialValue);
    }
  };

  Counter.prototype.setValue = function (value) {
    if (typeof value !== 'number' || parseInt(value) != value) {
      throw new Error('invalid counter value (must be an integer)');
    }

    for (var index = 15; index >= 0; --index) {
      this._counter[index] = value % 256;
      value = value >> 8;
    }
  };

  Counter.prototype.setBytes = function (bytes) {
    bytes = coerceArray(bytes, true);

    if (bytes.length != 16) {
      throw new Error('invalid counter bytes size (must be 16 bytes)');
    }

    this._counter = bytes;
  };

  Counter.prototype.increment = function () {
    for (var i = 15; i >= 0; i--) {
      if (this._counter[i] === 255) {
        this._counter[i] = 0;
      } else {
        this._counter[i]++;
        break;
      }
    }
  };
  /**
   *  Mode Of Operation - Counter (CTR)
   */


  var ModeOfOperationCTR = function ModeOfOperationCTR(key, counter) {
    if (!(this instanceof ModeOfOperationCTR)) {
      throw Error('AES must be instanitated with `new`');
    }

    this.description = "Counter";
    this.name = "ctr";

    if (!(counter instanceof Counter)) {
      counter = new Counter(counter);
    }

    this._counter = counter;
    this._remainingCounter = null;
    this._remainingCounterIndex = 16;
    this._aes = new AES(key);
  };

  ModeOfOperationCTR.prototype.encrypt = function (plaintext) {
    var encrypted = coerceArray(plaintext, true);

    for (var i = 0; i < encrypted.length; i++) {
      if (this._remainingCounterIndex === 16) {
        this._remainingCounter = this._aes.encrypt(this._counter._counter);
        this._remainingCounterIndex = 0;

        this._counter.increment();
      }

      encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
    }

    return encrypted;
  }; // Decryption is symetric


  ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt; ///////////////////////
  // Padding
  // See:https://tools.ietf.org/html/rfc2315

  function pkcs7pad(data) {
    data = coerceArray(data, true);
    var padder = 16 - data.length % 16;
    var result = createArray(data.length + padder);
    copyArray(data, result);

    for (var i = data.length; i < result.length; i++) {
      result[i] = padder;
    }

    return result;
  }

  function pkcs7strip(data) {
    data = coerceArray(data, true);

    if (data.length < 16) {
      throw new Error('PKCS#7 invalid length');
    }

    var padder = data[data.length - 1];

    if (padder > 16) {
      throw new Error('PKCS#7 padding byte out of range');
    }

    var length = data.length - padder;

    for (var i = 0; i < padder; i++) {
      if (data[length + i] !== padder) {
        throw new Error('PKCS#7 invalid padding byte');
      }
    }

    var result = createArray(length);
    copyArray(data, result, 0, 0, length);
    return result;
  } ///////////////////////
  // Exporting
  // The block cipher


  var aesjs = {
    AES: AES,
    Counter: Counter,
    ModeOfOperation: {
      ecb: ModeOfOperationECB,
      cbc: ModeOfOperationCBC,
      cfb: ModeOfOperationCFB,
      ofb: ModeOfOperationOFB,
      ctr: ModeOfOperationCTR
    },
    utils: {
      hex: convertHex,
      utf8: convertUtf8
    },
    padding: {
      pkcs7: {
        pad: pkcs7pad,
        strip: pkcs7strip
      }
    },
    _arrayTest: {
      coerceArray: coerceArray,
      createArray: createArray,
      copyArray: copyArray
    }
  }; // node.js

  if (true) {
    module.exports = aesjs; // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
  } else {}
})(this);

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(24);

var inherits = __webpack_require__(73);

exports.inherits = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }

  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }

  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg)) return msg.slice();
  if (!msg) return [];
  var res = [];

  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;

      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);

        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = c >> 6 | 192;
          res[p++] = c & 63 | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = c >> 18 | 240;
          res[p++] = c >> 12 & 63 | 128;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        } else {
          res[p++] = c >> 12 | 224;
          res[p++] = c >> 6 & 63 | 128;
          res[p++] = c & 63 | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0) msg = '0' + msg;

      for (i = 0; i < msg.length; i += 2) {
        res.push(parseInt(msg[i] + msg[i + 1], 16));
      }
    }
  } else {
    for (i = 0; i < msg.length; i++) {
      res[i] = msg[i] | 0;
    }
  }

  return res;
}

exports.toArray = toArray;

function toHex(msg) {
  var res = '';

  for (var i = 0; i < msg.length; i++) {
    res += zero2(msg[i].toString(16));
  }

  return res;
}

exports.toHex = toHex;

function htonl(w) {
  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;
  return res >>> 0;
}

exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';

  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little') w = htonl(w);
    res += zero8(w.toString(16));
  }

  return res;
}

exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1) return '0' + word;else return word;
}

exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;
}

exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);

  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
    res[i] = w >>> 0;
  }

  return res;
}

exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);

  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];

    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = m >>> 16 & 0xff;
      res[k + 2] = m >>> 8 & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = m >>> 16 & 0xff;
      res[k + 1] = m >>> 8 & 0xff;
      res[k] = m & 0xff;
    }
  }

  return res;
}

exports.split32 = split32;

function rotr32(w, b) {
  return w >>> b | w << 32 - b;
}

exports.rotr32 = rotr32;

function rotl32(w, b) {
  return w << b | w >>> 32 - b;
}

exports.rotl32 = rotl32;

function sum32(a, b) {
  return a + b >>> 0;
}

exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return a + b + c >>> 0;
}

exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return a + b + c + d >>> 0;
}

exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return a + b + c + d + e >>> 0;
}

exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}

exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = al + bl >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}

exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}

exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}

exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}

exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = lo + bl >>> 0;
  carry += lo < al ? 1 : 0;
  lo = lo + cl >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = lo + dl >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = lo + el >>> 0;
  carry += lo < el ? 1 : 0;
  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}

exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;
  return lo >>> 0;
}

exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = al << 32 - num | ah >>> num;
  return r >>> 0;
}

exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = ah << 32 - num | al >>> num;
  return r >>> 0;
}

exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}

exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = ah << 32 - num | al >>> num;
  return r >>> 0;
}

exports.shr64_lo = shr64_lo;

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _getPrototypeOf; });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),
/* 19 */,
/* 20 */,
/* 21 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _createForOfIteratorHelper; });
/* harmony import */ var _babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(22);

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = Object(_babel_runtime_helpers_esm_unsupportedIterableToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

/***/ }),
/* 22 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _unsupportedIterableToArray; });
/* harmony import */ var _babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(26);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_babel_runtime_helpers_esm_arrayLikeToArray__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(o, minLen);
}

/***/ }),
/* 23 */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val) throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var assert = __webpack_require__(24);

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';
  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}

exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length; // Enough data, try updating

  if (this.pending.length >= this._delta8) {
    msg = this.pending; // Process pending data in blocks

    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0) this.pending = null;
    msg = utils.join32(msg, 0, msg.length - r, this.endian);

    for (var i = 0; i < msg.length; i += this._delta32) {
      this._update(msg, i, i + this._delta32);
    }
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);
  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - (len + this.padLength) % bytes;
  var res = new Array(k + this.padLength);
  res[0] = 0x80;

  for (var i = 1; i < k; i++) {
    res[i] = 0;
  } // Append length


  len <<= 3;

  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++) {
      res[i++] = 0;
    }

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = len >>> 24 & 0xff;
    res[i++] = len >>> 16 & 0xff;
    res[i++] = len >>> 8 & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = len >>> 8 & 0xff;
    res[i++] = len >>> 16 & 0xff;
    res[i++] = len >>> 24 & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++) {
      res[i++] = 0;
    }
  }

  return res;
};

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _arrayLikeToArray; });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {

(function (root) {
  var MAX_VALUE = 0x7fffffff; // The SHA256 and PBKDF2 implementation are from scrypt-async-js:
  // See: https://github.com/dchest/scrypt-async-js

  function SHA256(m) {
    var K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);
    var h0 = 0x6a09e667,
        h1 = 0xbb67ae85,
        h2 = 0x3c6ef372,
        h3 = 0xa54ff53a;
    var h4 = 0x510e527f,
        h5 = 0x9b05688c,
        h6 = 0x1f83d9ab,
        h7 = 0x5be0cd19;
    var w = new Uint32Array(64);

    function blocks(p) {
      var off = 0,
          len = p.length;

      while (len >= 64) {
        var a = h0,
            b = h1,
            c = h2,
            d = h3,
            e = h4,
            f = h5,
            g = h6,
            h = h7,
            u = void 0,
            _i = void 0,
            j = void 0,
            t1 = void 0,
            t2 = void 0;

        for (_i = 0; _i < 16; _i++) {
          j = off + _i * 4;
          w[_i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;
        }

        for (_i = 16; _i < 64; _i++) {
          u = w[_i - 2];
          t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;
          u = w[_i - 15];
          t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;
          w[_i] = (t1 + w[_i - 7] | 0) + (t2 + w[_i - 16] | 0) | 0;
        }

        for (_i = 0; _i < 64; _i++) {
          t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[_i] + w[_i] | 0) | 0) | 0;
          t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;
          h = g;
          g = f;
          f = e;
          e = d + t1 | 0;
          d = c;
          c = b;
          b = a;
          a = t1 + t2 | 0;
        }

        h0 = h0 + a | 0;
        h1 = h1 + b | 0;
        h2 = h2 + c | 0;
        h3 = h3 + d | 0;
        h4 = h4 + e | 0;
        h5 = h5 + f | 0;
        h6 = h6 + g | 0;
        h7 = h7 + h | 0;
        off += 64;
        len -= 64;
      }
    }

    blocks(m);
    var i,
        bytesLeft = m.length % 64,
        bitLenHi = m.length / 0x20000000 | 0,
        bitLenLo = m.length << 3,
        numZeros = bytesLeft < 56 ? 56 : 120,
        p = m.slice(m.length - bytesLeft, m.length);
    p.push(0x80);

    for (i = bytesLeft + 1; i < numZeros; i++) {
      p.push(0);
    }

    p.push(bitLenHi >>> 24 & 0xff);
    p.push(bitLenHi >>> 16 & 0xff);
    p.push(bitLenHi >>> 8 & 0xff);
    p.push(bitLenHi >>> 0 & 0xff);
    p.push(bitLenLo >>> 24 & 0xff);
    p.push(bitLenLo >>> 16 & 0xff);
    p.push(bitLenLo >>> 8 & 0xff);
    p.push(bitLenLo >>> 0 & 0xff);
    blocks(p);
    return [h0 >>> 24 & 0xff, h0 >>> 16 & 0xff, h0 >>> 8 & 0xff, h0 >>> 0 & 0xff, h1 >>> 24 & 0xff, h1 >>> 16 & 0xff, h1 >>> 8 & 0xff, h1 >>> 0 & 0xff, h2 >>> 24 & 0xff, h2 >>> 16 & 0xff, h2 >>> 8 & 0xff, h2 >>> 0 & 0xff, h3 >>> 24 & 0xff, h3 >>> 16 & 0xff, h3 >>> 8 & 0xff, h3 >>> 0 & 0xff, h4 >>> 24 & 0xff, h4 >>> 16 & 0xff, h4 >>> 8 & 0xff, h4 >>> 0 & 0xff, h5 >>> 24 & 0xff, h5 >>> 16 & 0xff, h5 >>> 8 & 0xff, h5 >>> 0 & 0xff, h6 >>> 24 & 0xff, h6 >>> 16 & 0xff, h6 >>> 8 & 0xff, h6 >>> 0 & 0xff, h7 >>> 24 & 0xff, h7 >>> 16 & 0xff, h7 >>> 8 & 0xff, h7 >>> 0 & 0xff];
  }

  function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
    // compress password if it's longer than hash block length
    password = password.length <= 64 ? password : SHA256(password);
    var innerLen = 64 + salt.length + 4;
    var inner = new Array(innerLen);
    var outerKey = new Array(64);
    var i;
    var dk = []; // inner = (password ^ ipad) || salt || counter

    for (i = 0; i < 64; i++) {
      inner[i] = 0x36;
    }

    for (i = 0; i < password.length; i++) {
      inner[i] ^= password[i];
    }

    for (i = 0; i < salt.length; i++) {
      inner[64 + i] = salt[i];
    }

    for (i = innerLen - 4; i < innerLen; i++) {
      inner[i] = 0;
    } // outerKey = password ^ opad


    for (i = 0; i < 64; i++) {
      outerKey[i] = 0x5c;
    }

    for (i = 0; i < password.length; i++) {
      outerKey[i] ^= password[i];
    } // increments counter inside inner


    function incrementCounter() {
      for (var _i2 = innerLen - 1; _i2 >= innerLen - 4; _i2--) {
        inner[_i2]++;
        if (inner[_i2] <= 0xff) return;
        inner[_i2] = 0;
      }
    } // output blocks = SHA256(outerKey || SHA256(inner)) ...


    while (dkLen >= 32) {
      incrementCounter();
      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
      dkLen -= 32;
    }

    if (dkLen > 0) {
      incrementCounter();
      dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
    }

    return dk;
  } // The following is an adaptation of scryptsy
  // See: https://www.npmjs.com/package/scryptsy


  function blockmix_salsa8(BY, Yi, r, x, _X) {
    var i;
    arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);

    for (i = 0; i < 2 * r; i++) {
      blockxor(BY, i * 16, _X, 16);
      salsa20_8(_X, x);
      arraycopy(_X, 0, BY, Yi + i * 16, 16);
    }

    for (i = 0; i < r; i++) {
      arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);
    }

    for (i = 0; i < r; i++) {
      arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);
    }
  }

  function R(a, b) {
    return a << b | a >>> 32 - b;
  }

  function salsa20_8(B, x) {
    arraycopy(B, 0, x, 0, 16);

    for (var i = 8; i > 0; i -= 2) {
      x[4] ^= R(x[0] + x[12], 7);
      x[8] ^= R(x[4] + x[0], 9);
      x[12] ^= R(x[8] + x[4], 13);
      x[0] ^= R(x[12] + x[8], 18);
      x[9] ^= R(x[5] + x[1], 7);
      x[13] ^= R(x[9] + x[5], 9);
      x[1] ^= R(x[13] + x[9], 13);
      x[5] ^= R(x[1] + x[13], 18);
      x[14] ^= R(x[10] + x[6], 7);
      x[2] ^= R(x[14] + x[10], 9);
      x[6] ^= R(x[2] + x[14], 13);
      x[10] ^= R(x[6] + x[2], 18);
      x[3] ^= R(x[15] + x[11], 7);
      x[7] ^= R(x[3] + x[15], 9);
      x[11] ^= R(x[7] + x[3], 13);
      x[15] ^= R(x[11] + x[7], 18);
      x[1] ^= R(x[0] + x[3], 7);
      x[2] ^= R(x[1] + x[0], 9);
      x[3] ^= R(x[2] + x[1], 13);
      x[0] ^= R(x[3] + x[2], 18);
      x[6] ^= R(x[5] + x[4], 7);
      x[7] ^= R(x[6] + x[5], 9);
      x[4] ^= R(x[7] + x[6], 13);
      x[5] ^= R(x[4] + x[7], 18);
      x[11] ^= R(x[10] + x[9], 7);
      x[8] ^= R(x[11] + x[10], 9);
      x[9] ^= R(x[8] + x[11], 13);
      x[10] ^= R(x[9] + x[8], 18);
      x[12] ^= R(x[15] + x[14], 7);
      x[13] ^= R(x[12] + x[15], 9);
      x[14] ^= R(x[13] + x[12], 13);
      x[15] ^= R(x[14] + x[13], 18);
    }

    for (var _i3 = 0; _i3 < 16; ++_i3) {
      B[_i3] += x[_i3];
    }
  } // naive approach... going back to loop unrolling may yield additional performance


  function blockxor(S, Si, D, len) {
    for (var i = 0; i < len; i++) {
      D[i] ^= S[Si + i];
    }
  }

  function arraycopy(src, srcPos, dest, destPos, length) {
    while (length--) {
      dest[destPos++] = src[srcPos++];
    }
  }

  function checkBufferish(o) {
    if (!o || typeof o.length !== 'number') {
      return false;
    }

    for (var i = 0; i < o.length; i++) {
      var v = o[i];

      if (typeof v !== 'number' || v % 1 || v < 0 || v >= 256) {
        return false;
      }
    }

    return true;
  }

  function ensureInteger(value, name) {
    if (typeof value !== "number" || value % 1) {
      throw new Error('invalid ' + name);
    }

    return value;
  } // N = Cpu cost, r = Memory cost, p = parallelization cost
  // callback(error, progress, key)


  function _scrypt(password, salt, N, r, p, dkLen, callback) {
    N = ensureInteger(N, 'N');
    r = ensureInteger(r, 'r');
    p = ensureInteger(p, 'p');
    dkLen = ensureInteger(dkLen, 'dkLen');

    if (N === 0 || (N & N - 1) !== 0) {
      throw new Error('N must be power of 2');
    }

    if (N > MAX_VALUE / 128 / r) {
      throw new Error('N too large');
    }

    if (r > MAX_VALUE / 128 / p) {
      throw new Error('r too large');
    }

    if (!checkBufferish(password)) {
      throw new Error('password must be an array or buffer');
    }

    password = Array.prototype.slice.call(password);

    if (!checkBufferish(salt)) {
      throw new Error('salt must be an array or buffer');
    }

    salt = Array.prototype.slice.call(salt);
    var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);
    var B = new Uint32Array(p * 32 * r);

    for (var i = 0; i < B.length; i++) {
      var j = i * 4;
      B[i] = (b[j + 3] & 0xff) << 24 | (b[j + 2] & 0xff) << 16 | (b[j + 1] & 0xff) << 8 | (b[j + 0] & 0xff) << 0;
    }

    var XY = new Uint32Array(64 * r);
    var V = new Uint32Array(32 * r * N);
    var Yi = 32 * r; // scratch space

    var x = new Uint32Array(16); // salsa20_8

    var _X = new Uint32Array(16); // blockmix_salsa8


    var totalOps = p * N * 2;
    var currentOp = 0;
    var lastPercent10 = null; // Set this to true to abandon the scrypt on the next step

    var stop = false; // State information

    var state = 0;
    var i0 = 0,
        i1;
    var Bi; // How many blockmix_salsa8 can we do per step?

    var limit = callback ? parseInt(1000 / r) : 0xffffffff; // Trick from scrypt-async; if there is a setImmediate shim in place, use it

    var nextTick = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout; // This is really all I changed; making scryptsy a state machine so we occasionally
    // stop and give other evnts on the evnt loop a chance to run. ~RicMoo

    var incrementalSMix = function incrementalSMix() {
      if (stop) {
        return callback(new Error('cancelled'), currentOp / totalOps);
      }

      var steps;

      switch (state) {
        case 0:
          // for (var i = 0; i < p; i++)...
          Bi = i0 * 32 * r;
          arraycopy(B, Bi, XY, 0, Yi); // ROMix - 1

          state = 1; // Move to ROMix 2

          i1 = 0;
        // Fall through

        case 1:
          // Run up to 1000 steps of the first inner smix loop
          steps = N - i1;

          if (steps > limit) {
            steps = limit;
          }

          for (var _i4 = 0; _i4 < steps; _i4++) {
            // ROMix - 2
            arraycopy(XY, 0, V, (i1 + _i4) * Yi, Yi); // ROMix - 3

            blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 4
          } // for (var i = 0; i < N; i++)


          i1 += steps;
          currentOp += steps;

          if (callback) {
            // Call the callback with the progress (optionally stopping us)
            var percent10 = parseInt(1000 * currentOp / totalOps);

            if (percent10 !== lastPercent10) {
              stop = callback(null, currentOp / totalOps);

              if (stop) {
                break;
              }

              lastPercent10 = percent10;
            }
          }

          if (i1 < N) {
            break;
          }

          i1 = 0; // Move to ROMix 6

          state = 2;
        // Fall through

        case 2:
          // Run up to 1000 steps of the second inner smix loop
          steps = N - i1;

          if (steps > limit) {
            steps = limit;
          }

          for (var _i5 = 0; _i5 < steps; _i5++) {
            // ROMix - 6
            var offset = (2 * r - 1) * 16; // ROMix - 7

            var _j = XY[offset] & N - 1;

            blockxor(V, _j * Yi, XY, Yi); // ROMix - 8 (inner)

            blockmix_salsa8(XY, Yi, r, x, _X); // ROMix - 9 (outer)
          } // for (var i = 0; i < N; i++)...


          i1 += steps;
          currentOp += steps; // Call the callback with the progress (optionally stopping us)

          if (callback) {
            var _percent = parseInt(1000 * currentOp / totalOps);

            if (_percent !== lastPercent10) {
              stop = callback(null, currentOp / totalOps);

              if (stop) {
                break;
              }

              lastPercent10 = _percent;
            }
          }

          if (i1 < N) {
            break;
          }

          arraycopy(XY, 0, B, Bi, Yi); // ROMix - 10
          // for (var i = 0; i < p; i++)...

          i0++;

          if (i0 < p) {
            state = 0;
            break;
          }

          b = [];

          for (var _i6 = 0; _i6 < B.length; _i6++) {
            b.push(B[_i6] >> 0 & 0xff);
            b.push(B[_i6] >> 8 & 0xff);
            b.push(B[_i6] >> 16 & 0xff);
            b.push(B[_i6] >> 24 & 0xff);
          }

          var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen); // Send the result to the callback

          if (callback) {
            callback(null, 1.0, derivedKey);
          } // Done; don't break (which would reschedule)


          return derivedKey;
      } // Schedule the next steps


      if (callback) {
        nextTick(incrementalSMix);
      }
    }; // Run the smix state machine until completion


    if (!callback) {
      while (true) {
        var derivedKey = incrementalSMix();

        if (derivedKey != undefined) {
          return derivedKey;
        }
      }
    } // Bootstrap the async incremental smix


    incrementalSMix();
  }

  var lib = {
    scrypt: function scrypt(password, salt, N, r, p, dkLen, progressCallback) {
      return new Promise(function (resolve, reject) {
        var lastProgress = 0;

        if (progressCallback) {
          progressCallback(0);
        }

        _scrypt(password, salt, N, r, p, dkLen, function (error, progress, key) {
          if (error) {
            reject(error);
          } else if (key) {
            if (progressCallback && lastProgress !== 1) {
              progressCallback(1);
            }

            resolve(new Uint8Array(key));
          } else if (progressCallback && progress !== lastProgress) {
            lastProgress = progress;
            return progressCallback(progress);
          }
        });
      });
    },
    syncScrypt: function syncScrypt(password, salt, N, r, p, dkLen) {
      return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));
    }
  }; // node.js

  if (true) {
    module.exports = lib; // RequireJS/AMD
    // http://www.requirejs.org/docs/api.html
    // https://github.com/amdjs/amdjs-api/wiki/AMD
  } else {}
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(80).setImmediate))

/***/ }),
/* 28 */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"daofactory\",\"version\":\"0.1.3\",\"private\":true,\"homepage\":\".\",\"scripts\":{\"start\":\"react-scripts start\",\"build\":\"react-scripts build\",\"test\":\"react-scripts test\",\"eject\":\"react-scripts eject\",\"prettier\":\"npx prettier src/* --write\",\"build:plugin\":\"craco build\",\"unminified-build:plugin\":\"UNMINIFIED=true BUILD_PATH='./unminified-build' craco build\"},\"dependencies\":{\"@craco/craco\":\"^6.4.2\",\"@ethersproject/providers\":\"^5.5.0\",\"@ethersproject/units\":\"^5.5.0\",\"@ethersproject/wallet\":\"^5.5.0\",\"@web3-react/core\":\"^6.1.9\",\"@web3-react/injected-connector\":\"^6.0.7\",\"@web3-react/network-connector\":\"^6.1.9\",\"@web3-react/walletconnect-connector\":\"^6.2.8\",\"graphql\":\"^16.0.1\",\"graphql-request\":\"^3.6.1\",\"react\":\"^17.0.2\",\"react-dom\":\"^17.0.2\",\"react-router-dom\":\"^6.0.2\",\"remarkable\":\"^2.0.1\",\"remove-markdown\":\"^0.3.0\",\"web-vitals\":\"^1.1.2\"},\"eslintConfig\":{\"extends\":[\"react-app\",\"react-app/jest\"]},\"browserslist\":{\"production\":[\">0.2%\",\"not dead\",\"not op_mini all\"],\"development\":[\"last 1 chrome version\",\"last 1 firefox version\",\"last 1 safari version\"]},\"devDependencies\":{\"@testing-library/jest-dom\":\"^5.15.0\",\"@testing-library/react\":\"^11.2.7\",\"@testing-library/user-event\":\"^12.8.3\",\"@types/jest\":\"^26.0.24\",\"@types/node\":\"^12.20.36\",\"@types/react\":\"^17.0.33\",\"@types/react-dom\":\"^17.0.10\",\"@types/remarkable\":\"^2.0.3\",\"@types/remove-markdown\":\"^0.3.1\",\"node-sass\":\"npm:sass@^1.48.0\",\"react-scripts\":\"4.0.3\",\"typescript\":\"^4.4.4\"}}");

/***/ }),
/* 29 */,
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),
/* 31 */
/***/ (function(module, exports) {

var global = typeof self !== 'undefined' ? self : this;

var __self__ = function () {
  function F() {
    this.fetch = false;
    this.DOMException = global.DOMException;
  }

  F.prototype = global;
  return new F();
}();

(function (self) {
  var irrelevant = function (exports) {
    var support = {
      searchParams: 'URLSearchParams' in self,
      iterable: 'Symbol' in self && 'iterator' in Symbol,
      blob: 'FileReader' in self && 'Blob' in self && function () {
        try {
          new Blob();
          return true;
        } catch (e) {
          return false;
        }
      }(),
      formData: 'FormData' in self,
      arrayBuffer: 'ArrayBuffer' in self
    };

    function isDataView(obj) {
      return obj && DataView.prototype.isPrototypeOf(obj);
    }

    if (support.arrayBuffer) {
      var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

      var isArrayBufferView = ArrayBuffer.isView || function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
      };
    }

    function normalizeName(name) {
      if (typeof name !== 'string') {
        name = String(name);
      }

      if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
        throw new TypeError('Invalid character in header field name');
      }

      return name.toLowerCase();
    }

    function normalizeValue(value) {
      if (typeof value !== 'string') {
        value = String(value);
      }

      return value;
    } // Build a destructive iterator for the value list


    function iteratorFor(items) {
      var iterator = {
        next: function next() {
          var value = items.shift();
          return {
            done: value === undefined,
            value: value
          };
        }
      };

      if (support.iterable) {
        iterator[Symbol.iterator] = function () {
          return iterator;
        };
      }

      return iterator;
    }

    function Headers(headers) {
      this.map = {};

      if (headers instanceof Headers) {
        headers.forEach(function (value, name) {
          this.append(name, value);
        }, this);
      } else if (Array.isArray(headers)) {
        headers.forEach(function (header) {
          this.append(header[0], header[1]);
        }, this);
      } else if (headers) {
        Object.getOwnPropertyNames(headers).forEach(function (name) {
          this.append(name, headers[name]);
        }, this);
      }
    }

    Headers.prototype.append = function (name, value) {
      name = normalizeName(name);
      value = normalizeValue(value);
      var oldValue = this.map[name];
      this.map[name] = oldValue ? oldValue + ', ' + value : value;
    };

    Headers.prototype['delete'] = function (name) {
      delete this.map[normalizeName(name)];
    };

    Headers.prototype.get = function (name) {
      name = normalizeName(name);
      return this.has(name) ? this.map[name] : null;
    };

    Headers.prototype.has = function (name) {
      return this.map.hasOwnProperty(normalizeName(name));
    };

    Headers.prototype.set = function (name, value) {
      this.map[normalizeName(name)] = normalizeValue(value);
    };

    Headers.prototype.forEach = function (callback, thisArg) {
      for (var name in this.map) {
        if (this.map.hasOwnProperty(name)) {
          callback.call(thisArg, this.map[name], name, this);
        }
      }
    };

    Headers.prototype.keys = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push(name);
      });
      return iteratorFor(items);
    };

    Headers.prototype.values = function () {
      var items = [];
      this.forEach(function (value) {
        items.push(value);
      });
      return iteratorFor(items);
    };

    Headers.prototype.entries = function () {
      var items = [];
      this.forEach(function (value, name) {
        items.push([name, value]);
      });
      return iteratorFor(items);
    };

    if (support.iterable) {
      Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
    }

    function consumed(body) {
      if (body.bodyUsed) {
        return Promise.reject(new TypeError('Already read'));
      }

      body.bodyUsed = true;
    }

    function fileReaderReady(reader) {
      return new Promise(function (resolve, reject) {
        reader.onload = function () {
          resolve(reader.result);
        };

        reader.onerror = function () {
          reject(reader.error);
        };
      });
    }

    function readBlobAsArrayBuffer(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsArrayBuffer(blob);
      return promise;
    }

    function readBlobAsText(blob) {
      var reader = new FileReader();
      var promise = fileReaderReady(reader);
      reader.readAsText(blob);
      return promise;
    }

    function readArrayBufferAsText(buf) {
      var view = new Uint8Array(buf);
      var chars = new Array(view.length);

      for (var i = 0; i < view.length; i++) {
        chars[i] = String.fromCharCode(view[i]);
      }

      return chars.join('');
    }

    function bufferClone(buf) {
      if (buf.slice) {
        return buf.slice(0);
      } else {
        var view = new Uint8Array(buf.byteLength);
        view.set(new Uint8Array(buf));
        return view.buffer;
      }
    }

    function Body() {
      this.bodyUsed = false;

      this._initBody = function (body) {
        this._bodyInit = body;

        if (!body) {
          this._bodyText = '';
        } else if (typeof body === 'string') {
          this._bodyText = body;
        } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
          this._bodyBlob = body;
        } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
          this._bodyFormData = body;
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this._bodyText = body.toString();
        } else if (support.arrayBuffer && support.blob && isDataView(body)) {
          this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.

          this._bodyInit = new Blob([this._bodyArrayBuffer]);
        } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
          this._bodyArrayBuffer = bufferClone(body);
        } else {
          this._bodyText = body = Object.prototype.toString.call(body);
        }

        if (!this.headers.get('content-type')) {
          if (typeof body === 'string') {
            this.headers.set('content-type', 'text/plain;charset=UTF-8');
          } else if (this._bodyBlob && this._bodyBlob.type) {
            this.headers.set('content-type', this._bodyBlob.type);
          } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
            this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
          }
        }
      };

      if (support.blob) {
        this.blob = function () {
          var rejected = consumed(this);

          if (rejected) {
            return rejected;
          }

          if (this._bodyBlob) {
            return Promise.resolve(this._bodyBlob);
          } else if (this._bodyArrayBuffer) {
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          } else if (this._bodyFormData) {
            throw new Error('could not read FormData body as blob');
          } else {
            return Promise.resolve(new Blob([this._bodyText]));
          }
        };

        this.arrayBuffer = function () {
          if (this._bodyArrayBuffer) {
            return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
          } else {
            return this.blob().then(readBlobAsArrayBuffer);
          }
        };
      }

      this.text = function () {
        var rejected = consumed(this);

        if (rejected) {
          return rejected;
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text');
        } else {
          return Promise.resolve(this._bodyText);
        }
      };

      if (support.formData) {
        this.formData = function () {
          return this.text().then(decode);
        };
      }

      this.json = function () {
        return this.text().then(JSON.parse);
      };

      return this;
    } // HTTP methods whose capitalization should be normalized


    var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

    function normalizeMethod(method) {
      var upcased = method.toUpperCase();
      return methods.indexOf(upcased) > -1 ? upcased : method;
    }

    function Request(input, options) {
      options = options || {};
      var body = options.body;

      if (input instanceof Request) {
        if (input.bodyUsed) {
          throw new TypeError('Already read');
        }

        this.url = input.url;
        this.credentials = input.credentials;

        if (!options.headers) {
          this.headers = new Headers(input.headers);
        }

        this.method = input.method;
        this.mode = input.mode;
        this.signal = input.signal;

        if (!body && input._bodyInit != null) {
          body = input._bodyInit;
          input.bodyUsed = true;
        }
      } else {
        this.url = String(input);
      }

      this.credentials = options.credentials || this.credentials || 'same-origin';

      if (options.headers || !this.headers) {
        this.headers = new Headers(options.headers);
      }

      this.method = normalizeMethod(options.method || this.method || 'GET');
      this.mode = options.mode || this.mode || null;
      this.signal = options.signal || this.signal;
      this.referrer = null;

      if ((this.method === 'GET' || this.method === 'HEAD') && body) {
        throw new TypeError('Body not allowed for GET or HEAD requests');
      }

      this._initBody(body);
    }

    Request.prototype.clone = function () {
      return new Request(this, {
        body: this._bodyInit
      });
    };

    function decode(body) {
      var form = new FormData();
      body.trim().split('&').forEach(function (bytes) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
      return form;
    }

    function parseHeaders(rawHeaders) {
      var headers = new Headers(); // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
      // https://tools.ietf.org/html/rfc7230#section-3.2

      var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
      preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
        var parts = line.split(':');
        var key = parts.shift().trim();

        if (key) {
          var value = parts.join(':').trim();
          headers.append(key, value);
        }
      });
      return headers;
    }

    Body.call(Request.prototype);

    function Response(bodyInit, options) {
      if (!options) {
        options = {};
      }

      this.type = 'default';
      this.status = options.status === undefined ? 200 : options.status;
      this.ok = this.status >= 200 && this.status < 300;
      this.statusText = 'statusText' in options ? options.statusText : 'OK';
      this.headers = new Headers(options.headers);
      this.url = options.url || '';

      this._initBody(bodyInit);
    }

    Body.call(Response.prototype);

    Response.prototype.clone = function () {
      return new Response(this._bodyInit, {
        status: this.status,
        statusText: this.statusText,
        headers: new Headers(this.headers),
        url: this.url
      });
    };

    Response.error = function () {
      var response = new Response(null, {
        status: 0,
        statusText: ''
      });
      response.type = 'error';
      return response;
    };

    var redirectStatuses = [301, 302, 303, 307, 308];

    Response.redirect = function (url, status) {
      if (redirectStatuses.indexOf(status) === -1) {
        throw new RangeError('Invalid status code');
      }

      return new Response(null, {
        status: status,
        headers: {
          location: url
        }
      });
    };

    exports.DOMException = self.DOMException;

    try {
      new exports.DOMException();
    } catch (err) {
      exports.DOMException = function (message, name) {
        this.message = message;
        this.name = name;
        var error = Error(message);
        this.stack = error.stack;
      };

      exports.DOMException.prototype = Object.create(Error.prototype);
      exports.DOMException.prototype.constructor = exports.DOMException;
    }

    function fetch(input, init) {
      return new Promise(function (resolve, reject) {
        var request = new Request(input, init);

        if (request.signal && request.signal.aborted) {
          return reject(new exports.DOMException('Aborted', 'AbortError'));
        }

        var xhr = new XMLHttpRequest();

        function abortXhr() {
          xhr.abort();
        }

        xhr.onload = function () {
          var options = {
            status: xhr.status,
            statusText: xhr.statusText,
            headers: parseHeaders(xhr.getAllResponseHeaders() || '')
          };
          options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
          var body = 'response' in xhr ? xhr.response : xhr.responseText;
          resolve(new Response(body, options));
        };

        xhr.onerror = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.ontimeout = function () {
          reject(new TypeError('Network request failed'));
        };

        xhr.onabort = function () {
          reject(new exports.DOMException('Aborted', 'AbortError'));
        };

        xhr.open(request.method, request.url, true);

        if (request.credentials === 'include') {
          xhr.withCredentials = true;
        } else if (request.credentials === 'omit') {
          xhr.withCredentials = false;
        }

        if ('responseType' in xhr && support.blob) {
          xhr.responseType = 'blob';
        }

        request.headers.forEach(function (value, name) {
          xhr.setRequestHeader(name, value);
        });

        if (request.signal) {
          request.signal.addEventListener('abort', abortXhr);

          xhr.onreadystatechange = function () {
            // DONE (success or failure)
            if (xhr.readyState === 4) {
              request.signal.removeEventListener('abort', abortXhr);
            }
          };
        }

        xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
      });
    }

    fetch.polyfill = true;

    if (!self.fetch) {
      self.fetch = fetch;
      self.Headers = Headers;
      self.Request = Request;
      self.Response = Response;
    }

    exports.Headers = Headers;
    exports.Request = Request;
    exports.Response = Response;
    exports.fetch = fetch;
    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    return exports;
  }({});
})(__self__);

__self__.fetch.ponyfill = true; // Remove "polyfill" property added by whatwg-fetch

delete __self__.fetch.polyfill; // Choose between native implementation (global) or custom implementation (__self__)
// var ctx = global.fetch ? global : __self__;

var ctx = __self__; // this line disable service worker support temporarily

exports = ctx.fetch; // To enable: import fetch from 'cross-fetch'

exports.default = ctx.fetch; // For TypeScript consumers without esModuleInterop.

exports.fetch = ctx.fetch; // To enable: import {fetch} from 'cross-fetch'

exports.Headers = ctx.Headers;
exports.Request = ctx.Request;
exports.Response = ctx.Response;
module.exports = exports;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function ReactNativeFile(_ref) {
  var uri = _ref.uri,
      name = _ref.name,
      type = _ref.type;
  this.uri = uri;
  this.name = name;
  this.type = type;
};

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ReactNativeFile = __webpack_require__(32);

module.exports = function isExtractableFile(value) {
  return typeof File !== 'undefined' && value instanceof File || typeof Blob !== 'undefined' && value instanceof Blob || value instanceof ReactNativeFile;
};

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table

var ALPHABET_MAP = {};

for (var z = 0; z < ALPHABET.length; z++) {
  var x = ALPHABET.charAt(z);
  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');
  ALPHABET_MAP[x] = z;
}

function polymodStep(pre) {
  var b = pre >> 25;
  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;
}

function prefixChk(prefix) {
  var chk = 1;

  for (var i = 0; i < prefix.length; ++i) {
    var c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')';
    chk = polymodStep(chk) ^ c >> 5;
  }

  chk = polymodStep(chk);

  for (i = 0; i < prefix.length; ++i) {
    var v = prefix.charCodeAt(i);
    chk = polymodStep(chk) ^ v & 0x1f;
  }

  return chk;
}

function encode(prefix, words, LIMIT) {
  LIMIT = LIMIT || 90;
  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');
  prefix = prefix.toLowerCase(); // determine chk mod

  var chk = prefixChk(prefix);
  if (typeof chk === 'string') throw new Error(chk);
  var result = prefix + '1';

  for (var i = 0; i < words.length; ++i) {
    var x = words[i];
    if (x >> 5 !== 0) throw new Error('Non 5-bit word');
    chk = polymodStep(chk) ^ x;
    result += ALPHABET.charAt(x);
  }

  for (i = 0; i < 6; ++i) {
    chk = polymodStep(chk);
  }

  chk ^= 1;

  for (i = 0; i < 6; ++i) {
    var v = chk >> (5 - i) * 5 & 0x1f;
    result += ALPHABET.charAt(v);
  }

  return result;
}

function __decode(str, LIMIT) {
  LIMIT = LIMIT || 90;
  if (str.length < 8) return str + ' too short';
  if (str.length > LIMIT) return 'Exceeds length limit'; // don't allow mixed case

  var lowered = str.toLowerCase();
  var uppered = str.toUpperCase();
  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str;
  str = lowered;
  var split = str.lastIndexOf('1');
  if (split === -1) return 'No separator character for ' + str;
  if (split === 0) return 'Missing prefix for ' + str;
  var prefix = str.slice(0, split);
  var wordChars = str.slice(split + 1);
  if (wordChars.length < 6) return 'Data too short';
  var chk = prefixChk(prefix);
  if (typeof chk === 'string') return chk;
  var words = [];

  for (var i = 0; i < wordChars.length; ++i) {
    var c = wordChars.charAt(i);
    var v = ALPHABET_MAP[c];
    if (v === undefined) return 'Unknown character ' + c;
    chk = polymodStep(chk) ^ v; // not in the checksum?

    if (i + 6 >= wordChars.length) continue;
    words.push(v);
  }

  if (chk !== 1) return 'Invalid checksum for ' + str;
  return {
    prefix: prefix,
    words: words
  };
}

function decodeUnsafe() {
  var res = __decode.apply(null, arguments);

  if (typeof res === 'object') return res;
}

function decode(str) {
  var res = __decode.apply(null, arguments);

  if (typeof res === 'object') return res;
  throw new Error(res);
}

function convert(data, inBits, outBits, pad) {
  var value = 0;
  var bits = 0;
  var maxV = (1 << outBits) - 1;
  var result = [];

  for (var i = 0; i < data.length; ++i) {
    value = value << inBits | data[i];
    bits += inBits;

    while (bits >= outBits) {
      bits -= outBits;
      result.push(value >> bits & maxV);
    }
  }

  if (pad) {
    if (bits > 0) {
      result.push(value << outBits - bits & maxV);
    }
  } else {
    if (bits >= inBits) return 'Excess padding';
    if (value << outBits - bits & maxV) return 'Non-zero padding';
  }

  return result;
}

function toWordsUnsafe(bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res)) return res;
}

function toWords(bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res)) return res;
  throw new Error(res);
}

function fromWordsUnsafe(words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res)) return res;
}

function fromWords(words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res)) return res;
  throw new Error(res);
}

module.exports = {
  decodeUnsafe: decodeUnsafe,
  decode: decode,
  encode: encode,
  toWordsUnsafe: toWordsUnsafe,
  toWords: toWords,
  fromWordsUnsafe: fromWordsUnsafe,
  fromWords: fromWords
};

/***/ }),
/* 35 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter;
module.exports.once = once; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function get() {
    return defaultMaxListeners;
  },
  set: function set(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) {
    args.push(arguments[i]);
  }

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) {
      ReflectApply(listeners[i], this, args);
    }
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) {
    copy[i] = arr[i];
  }

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) {
    list[index] = list[index + 1];
  }

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }

      resolve([].slice.call(arguments));
    }

    ;
    eventTargetAgnosticAddListener(emitter, name, resolver, {
      once: true
    });

    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, {
        once: true
      });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }

      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

/***/ }),
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var defaultIsExtractableFile = __webpack_require__(33);

module.exports = function extractFiles(value, path, isExtractableFile) {
  if (path === void 0) {
    path = '';
  }

  if (isExtractableFile === void 0) {
    isExtractableFile = defaultIsExtractableFile;
  }

  var clone;
  var files = new Map();

  function addFile(paths, file) {
    var storedPaths = files.get(file);
    if (storedPaths) storedPaths.push.apply(storedPaths, paths);else files.set(file, paths);
  }

  if (isExtractableFile(value)) {
    clone = null;
    addFile([path], value);
  } else {
    var prefix = path ? path + '.' : '';
    if (typeof FileList !== 'undefined' && value instanceof FileList) clone = Array.prototype.map.call(value, function (file, i) {
      addFile(['' + prefix + i], file);
      return null;
    });else if (Array.isArray(value)) clone = value.map(function (child, i) {
      var result = extractFiles(child, '' + prefix + i, isExtractableFile);
      result.files.forEach(addFile);
      return result.clone;
    });else if (value && value.constructor === Object) {
      clone = {};

      for (var i in value) {
        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);
        result.files.forEach(addFile);
        clone[i] = result.clone;
      }
    } else clone = value;
  }

  return {
    clone: clone,
    files: files
  };
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClientError = void 0;

var ClientError =
/** @class */
function (_super) {
  __extends(ClientError, _super);

  function ClientError(response, request) {
    var _this = this;

    var message = ClientError.extractMessage(response) + ": " + JSON.stringify({
      response: response,
      request: request
    });
    _this = _super.call(this, message) || this;
    Object.setPrototypeOf(_this, ClientError.prototype);
    _this.response = response;
    _this.request = request; // this is needed as Safari doesn't support .captureStackTrace

    if (typeof Error.captureStackTrace === 'function') {
      Error.captureStackTrace(_this, ClientError);
    }

    return _this;
  }

  ClientError.extractMessage = function (response) {
    try {
      return response.errors[0].message;
    } catch (e) {
      return "GraphQL Error (Code: " + response.status + ")";
    }
  };

  return ClientError;
}(Error);

exports.ClientError = ClientError;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */

/*jslint bitwise: true */
(function () {
  'use strict';

  var INPUT_ERROR = 'input is invalid type';
  var FINALIZE_ERROR = 'finalize already called';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};

  if (root.JS_SHA3_NO_WINDOW) {
    WINDOW = false;
  }

  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;

  if (NODE_JS) {
    root = global;
  } else if (WEB_WORKER) {
    root = self;
  }

  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;
  var AMD =  true && __webpack_require__(70);
  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
  var BITS = [224, 256, 384, 512];
  var SHAKE_BITS = [128, 256];
  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
  var CSHAKE_BYTEPAD = {
    '128': 168,
    '256': 136
  };

  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function createOutputMethod(bits, padding, outputType) {
    return function (message) {
      return new Keccak(bits, padding, bits).update(message)[outputType]();
    };
  };

  var createShakeOutputMethod = function createShakeOutputMethod(bits, padding, outputType) {
    return function (message, outputBits) {
      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
    };
  };

  var createCshakeOutputMethod = function createCshakeOutputMethod(bits, padding, outputType) {
    return function (message, outputBits, n, s) {
      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
    };
  };

  var createKmacOutputMethod = function createKmacOutputMethod(bits, padding, outputType) {
    return function (key, message, outputBits, s) {
      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
    };
  };

  var createOutputMethods = function createOutputMethods(method, createMethod, bits, padding) {
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createMethod(bits, padding, type);
    }

    return method;
  };

  var createMethod = function createMethod(bits, padding) {
    var method = createOutputMethod(bits, padding, 'hex');

    method.create = function () {
      return new Keccak(bits, padding, bits);
    };

    method.update = function (message) {
      return method.create().update(message);
    };

    return createOutputMethods(method, createOutputMethod, bits, padding);
  };

  var createShakeMethod = function createShakeMethod(bits, padding) {
    var method = createShakeOutputMethod(bits, padding, 'hex');

    method.create = function (outputBits) {
      return new Keccak(bits, padding, outputBits);
    };

    method.update = function (message, outputBits) {
      return method.create(outputBits).update(message);
    };

    return createOutputMethods(method, createShakeOutputMethod, bits, padding);
  };

  var createCshakeMethod = function createCshakeMethod(bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createCshakeOutputMethod(bits, padding, 'hex');

    method.create = function (outputBits, n, s) {
      if (!n && !s) {
        return methods['shake' + bits].create(outputBits);
      } else {
        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
      }
    };

    method.update = function (message, outputBits, n, s) {
      return method.create(outputBits, n, s).update(message);
    };

    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
  };

  var createKmacMethod = function createKmacMethod(bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createKmacOutputMethod(bits, padding, 'hex');

    method.create = function (key, outputBits, s) {
      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
    };

    method.update = function (key, message, outputBits, s) {
      return method.create(key, outputBits, s).update(message);
    };

    return createOutputMethods(method, createKmacOutputMethod, bits, padding);
  };

  var algorithms = [{
    name: 'keccak',
    padding: KECCAK_PADDING,
    bits: BITS,
    createMethod: createMethod
  }, {
    name: 'sha3',
    padding: PADDING,
    bits: BITS,
    createMethod: createMethod
  }, {
    name: 'shake',
    padding: SHAKE_PADDING,
    bits: SHAKE_BITS,
    createMethod: createShakeMethod
  }, {
    name: 'cshake',
    padding: CSHAKE_PADDING,
    bits: SHAKE_BITS,
    createMethod: createCshakeMethod
  }, {
    name: 'kmac',
    padding: CSHAKE_PADDING,
    bits: SHAKE_BITS,
    createMethod: createKmacMethod
  }];
  var methods = {},
      methodNames = [];

  for (var i = 0; i < algorithms.length; ++i) {
    var algorithm = algorithms[i];
    var bits = algorithm.bits;

    for (var j = 0; j < bits.length; ++j) {
      var methodName = algorithm.name + '_' + bits[j];
      methodNames.push(methodName);
      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);

      if (algorithm.name !== 'sha3') {
        var newMethodName = algorithm.name + bits[j];
        methodNames.push(newMethodName);
        methods[newMethodName] = methods[methodName];
      }
    }
  }

  function Keccak(bits, padding, outputBits) {
    this.blocks = [];
    this.s = [];
    this.padding = padding;
    this.outputBits = outputBits;
    this.reset = true;
    this.finalized = false;
    this.block = 0;
    this.start = 0;
    this.blockCount = 1600 - (bits << 1) >> 5;
    this.byteCount = this.blockCount << 2;
    this.outputBlocks = outputBits >> 5;
    this.extraBytes = (outputBits & 31) >> 3;

    for (var i = 0; i < 50; ++i) {
      this.s[i] = 0;
    }
  }

  Keccak.prototype.update = function (message) {
    if (this.finalized) {
      throw new Error(FINALIZE_ERROR);
    }

    var notString,
        type = typeof message;

    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }

      notString = true;
    }

    var blocks = this.blocks,
        byteCount = this.byteCount,
        length = message.length,
        blockCount = this.blockCount,
        index = 0,
        s = this.s,
        i,
        code;

    while (index < length) {
      if (this.reset) {
        this.reset = false;
        blocks[0] = this.block;

        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }

      if (notString) {
        for (i = this.start; index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);

          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);
            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];
          }
        }
      }

      this.lastByteIndex = i;

      if (i >= byteCount) {
        this.start = i - byteCount;
        this.block = blocks[blockCount];

        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }

        f(s);
        this.reset = true;
      } else {
        this.start = i;
      }
    }

    return this;
  };

  Keccak.prototype.encode = function (x, right) {
    var o = x & 255,
        n = 1;
    var bytes = [o];
    x = x >> 8;
    o = x & 255;

    while (o > 0) {
      bytes.unshift(o);
      x = x >> 8;
      o = x & 255;
      ++n;
    }

    if (right) {
      bytes.push(n);
    } else {
      bytes.unshift(n);
    }

    this.update(bytes);
    return bytes.length;
  };

  Keccak.prototype.encodeString = function (str) {
    var notString,
        type = typeof str;

    if (type !== 'string') {
      if (type === 'object') {
        if (str === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
          str = new Uint8Array(str);
        } else if (!Array.isArray(str)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }

      notString = true;
    }

    var bytes = 0,
        length = str.length;

    if (notString) {
      bytes = length;
    } else {
      for (var i = 0; i < str.length; ++i) {
        var code = str.charCodeAt(i);

        if (code < 0x80) {
          bytes += 1;
        } else if (code < 0x800) {
          bytes += 2;
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes += 3;
        } else {
          code = 0x10000 + ((code & 0x3ff) << 10 | str.charCodeAt(++i) & 0x3ff);
          bytes += 4;
        }
      }
    }

    bytes += this.encode(bytes * 8);
    this.update(str);
    return bytes;
  };

  Keccak.prototype.bytepad = function (strs, w) {
    var bytes = this.encode(w);

    for (var i = 0; i < strs.length; ++i) {
      bytes += this.encodeString(strs[i]);
    }

    var paddingBytes = w - bytes % w;
    var zeros = [];
    zeros.length = paddingBytes;
    this.update(zeros);
    return this;
  };

  Keccak.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }

    this.finalized = true;
    var blocks = this.blocks,
        i = this.lastByteIndex,
        blockCount = this.blockCount,
        s = this.s;
    blocks[i >> 2] |= this.padding[i & 3];

    if (this.lastByteIndex === this.byteCount) {
      blocks[0] = blocks[blockCount];

      for (i = 1; i < blockCount + 1; ++i) {
        blocks[i] = 0;
      }
    }

    blocks[blockCount - 1] |= 0x80000000;

    for (i = 0; i < blockCount; ++i) {
      s[i] ^= blocks[i];
    }

    f(s);
  };

  Keccak.prototype.toString = Keccak.prototype.hex = function () {
    this.finalize();
    var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
    var hex = '',
        block;

    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        block = s[i];
        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];
      }

      if (j % blockCount === 0) {
        f(s);
        i = 0;
      }
    }

    if (extraBytes) {
      block = s[i];
      hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];

      if (extraBytes > 1) {
        hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];
      }

      if (extraBytes > 2) {
        hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];
      }
    }

    return hex;
  };

  Keccak.prototype.arrayBuffer = function () {
    this.finalize();
    var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
    var bytes = this.outputBits >> 3;
    var buffer;

    if (extraBytes) {
      buffer = new ArrayBuffer(outputBlocks + 1 << 2);
    } else {
      buffer = new ArrayBuffer(bytes);
    }

    var array = new Uint32Array(buffer);

    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        array[j] = s[i];
      }

      if (j % blockCount === 0) {
        f(s);
      }
    }

    if (extraBytes) {
      array[i] = s[i];
      buffer = buffer.slice(0, bytes);
    }

    return buffer;
  };

  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

  Keccak.prototype.digest = Keccak.prototype.array = function () {
    this.finalize();
    var blockCount = this.blockCount,
        s = this.s,
        outputBlocks = this.outputBlocks,
        extraBytes = this.extraBytes,
        i = 0,
        j = 0;
    var array = [],
        offset,
        block;

    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        array[offset + 1] = block >> 8 & 0xFF;
        array[offset + 2] = block >> 16 & 0xFF;
        array[offset + 3] = block >> 24 & 0xFF;
      }

      if (j % blockCount === 0) {
        f(s);
      }
    }

    if (extraBytes) {
      offset = j << 2;
      block = s[i];
      array[offset] = block & 0xFF;

      if (extraBytes > 1) {
        array[offset + 1] = block >> 8 & 0xFF;
      }

      if (extraBytes > 2) {
        array[offset + 2] = block >> 16 & 0xFF;
      }
    }

    return array;
  };

  function Kmac(bits, padding, outputBits) {
    Keccak.call(this, bits, padding, outputBits);
  }

  Kmac.prototype = new Keccak();

  Kmac.prototype.finalize = function () {
    this.encode(this.outputBits, true);
    return Keccak.prototype.finalize.call(this);
  };

  var f = function f(s) {
    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;

    for (n = 0; n < 48; n += 2) {
      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
      h = c8 ^ (c2 << 1 | c3 >>> 31);
      l = c9 ^ (c3 << 1 | c2 >>> 31);
      s[0] ^= h;
      s[1] ^= l;
      s[10] ^= h;
      s[11] ^= l;
      s[20] ^= h;
      s[21] ^= l;
      s[30] ^= h;
      s[31] ^= l;
      s[40] ^= h;
      s[41] ^= l;
      h = c0 ^ (c4 << 1 | c5 >>> 31);
      l = c1 ^ (c5 << 1 | c4 >>> 31);
      s[2] ^= h;
      s[3] ^= l;
      s[12] ^= h;
      s[13] ^= l;
      s[22] ^= h;
      s[23] ^= l;
      s[32] ^= h;
      s[33] ^= l;
      s[42] ^= h;
      s[43] ^= l;
      h = c2 ^ (c6 << 1 | c7 >>> 31);
      l = c3 ^ (c7 << 1 | c6 >>> 31);
      s[4] ^= h;
      s[5] ^= l;
      s[14] ^= h;
      s[15] ^= l;
      s[24] ^= h;
      s[25] ^= l;
      s[34] ^= h;
      s[35] ^= l;
      s[44] ^= h;
      s[45] ^= l;
      h = c4 ^ (c8 << 1 | c9 >>> 31);
      l = c5 ^ (c9 << 1 | c8 >>> 31);
      s[6] ^= h;
      s[7] ^= l;
      s[16] ^= h;
      s[17] ^= l;
      s[26] ^= h;
      s[27] ^= l;
      s[36] ^= h;
      s[37] ^= l;
      s[46] ^= h;
      s[47] ^= l;
      h = c6 ^ (c0 << 1 | c1 >>> 31);
      l = c7 ^ (c1 << 1 | c0 >>> 31);
      s[8] ^= h;
      s[9] ^= l;
      s[18] ^= h;
      s[19] ^= l;
      s[28] ^= h;
      s[29] ^= l;
      s[38] ^= h;
      s[39] ^= l;
      s[48] ^= h;
      s[49] ^= l;
      b0 = s[0];
      b1 = s[1];
      b32 = s[11] << 4 | s[10] >>> 28;
      b33 = s[10] << 4 | s[11] >>> 28;
      b14 = s[20] << 3 | s[21] >>> 29;
      b15 = s[21] << 3 | s[20] >>> 29;
      b46 = s[31] << 9 | s[30] >>> 23;
      b47 = s[30] << 9 | s[31] >>> 23;
      b28 = s[40] << 18 | s[41] >>> 14;
      b29 = s[41] << 18 | s[40] >>> 14;
      b20 = s[2] << 1 | s[3] >>> 31;
      b21 = s[3] << 1 | s[2] >>> 31;
      b2 = s[13] << 12 | s[12] >>> 20;
      b3 = s[12] << 12 | s[13] >>> 20;
      b34 = s[22] << 10 | s[23] >>> 22;
      b35 = s[23] << 10 | s[22] >>> 22;
      b16 = s[33] << 13 | s[32] >>> 19;
      b17 = s[32] << 13 | s[33] >>> 19;
      b48 = s[42] << 2 | s[43] >>> 30;
      b49 = s[43] << 2 | s[42] >>> 30;
      b40 = s[5] << 30 | s[4] >>> 2;
      b41 = s[4] << 30 | s[5] >>> 2;
      b22 = s[14] << 6 | s[15] >>> 26;
      b23 = s[15] << 6 | s[14] >>> 26;
      b4 = s[25] << 11 | s[24] >>> 21;
      b5 = s[24] << 11 | s[25] >>> 21;
      b36 = s[34] << 15 | s[35] >>> 17;
      b37 = s[35] << 15 | s[34] >>> 17;
      b18 = s[45] << 29 | s[44] >>> 3;
      b19 = s[44] << 29 | s[45] >>> 3;
      b10 = s[6] << 28 | s[7] >>> 4;
      b11 = s[7] << 28 | s[6] >>> 4;
      b42 = s[17] << 23 | s[16] >>> 9;
      b43 = s[16] << 23 | s[17] >>> 9;
      b24 = s[26] << 25 | s[27] >>> 7;
      b25 = s[27] << 25 | s[26] >>> 7;
      b6 = s[36] << 21 | s[37] >>> 11;
      b7 = s[37] << 21 | s[36] >>> 11;
      b38 = s[47] << 24 | s[46] >>> 8;
      b39 = s[46] << 24 | s[47] >>> 8;
      b30 = s[8] << 27 | s[9] >>> 5;
      b31 = s[9] << 27 | s[8] >>> 5;
      b12 = s[18] << 20 | s[19] >>> 12;
      b13 = s[19] << 20 | s[18] >>> 12;
      b44 = s[29] << 7 | s[28] >>> 25;
      b45 = s[28] << 7 | s[29] >>> 25;
      b26 = s[38] << 8 | s[39] >>> 24;
      b27 = s[39] << 8 | s[38] >>> 24;
      b8 = s[48] << 14 | s[49] >>> 18;
      b9 = s[49] << 14 | s[48] >>> 18;
      s[0] = b0 ^ ~b2 & b4;
      s[1] = b1 ^ ~b3 & b5;
      s[10] = b10 ^ ~b12 & b14;
      s[11] = b11 ^ ~b13 & b15;
      s[20] = b20 ^ ~b22 & b24;
      s[21] = b21 ^ ~b23 & b25;
      s[30] = b30 ^ ~b32 & b34;
      s[31] = b31 ^ ~b33 & b35;
      s[40] = b40 ^ ~b42 & b44;
      s[41] = b41 ^ ~b43 & b45;
      s[2] = b2 ^ ~b4 & b6;
      s[3] = b3 ^ ~b5 & b7;
      s[12] = b12 ^ ~b14 & b16;
      s[13] = b13 ^ ~b15 & b17;
      s[22] = b22 ^ ~b24 & b26;
      s[23] = b23 ^ ~b25 & b27;
      s[32] = b32 ^ ~b34 & b36;
      s[33] = b33 ^ ~b35 & b37;
      s[42] = b42 ^ ~b44 & b46;
      s[43] = b43 ^ ~b45 & b47;
      s[4] = b4 ^ ~b6 & b8;
      s[5] = b5 ^ ~b7 & b9;
      s[14] = b14 ^ ~b16 & b18;
      s[15] = b15 ^ ~b17 & b19;
      s[24] = b24 ^ ~b26 & b28;
      s[25] = b25 ^ ~b27 & b29;
      s[34] = b34 ^ ~b36 & b38;
      s[35] = b35 ^ ~b37 & b39;
      s[44] = b44 ^ ~b46 & b48;
      s[45] = b45 ^ ~b47 & b49;
      s[6] = b6 ^ ~b8 & b0;
      s[7] = b7 ^ ~b9 & b1;
      s[16] = b16 ^ ~b18 & b10;
      s[17] = b17 ^ ~b19 & b11;
      s[26] = b26 ^ ~b28 & b20;
      s[27] = b27 ^ ~b29 & b21;
      s[36] = b36 ^ ~b38 & b30;
      s[37] = b37 ^ ~b39 & b31;
      s[46] = b46 ^ ~b48 & b40;
      s[47] = b47 ^ ~b49 & b41;
      s[8] = b8 ^ ~b0 & b2;
      s[9] = b9 ^ ~b1 & b3;
      s[18] = b18 ^ ~b10 & b12;
      s[19] = b19 ^ ~b11 & b13;
      s[28] = b28 ^ ~b20 & b22;
      s[29] = b29 ^ ~b21 & b23;
      s[38] = b38 ^ ~b30 & b32;
      s[39] = b39 ^ ~b31 & b33;
      s[48] = b48 ^ ~b40 & b42;
      s[49] = b49 ^ ~b41 & b43;
      s[0] ^= RC[n];
      s[1] ^= RC[n + 1];
    }
  };

  if (COMMON_JS) {
    module.exports = methods;
  } else {
    for (i = 0; i < methodNames.length; ++i) {
      root[methodNames[i]] = methods[methodNames[i]];
    }

    if (AMD) {
      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
        return methods;
      }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
  }
})();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(35), __webpack_require__(23)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0) return ch32(x, y, z);
  if (s === 1 || s === 3) return p32(x, y, z);
  if (s === 2) return maj32(x, y, z);
}

exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return x & y ^ ~x & z;
}

exports.ch32 = ch32;

function maj32(x, y, z) {
  return x & y ^ x & z ^ y & z;
}

exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}

exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}

exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}

exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
}

exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
}

exports.g1_256 = g1_256;

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var common = __webpack_require__(25);

var shaCommon = __webpack_require__(44);

var assert = __webpack_require__(24);

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;
var BlockHash = common.BlockHash;
var sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];

function SHA256() {
  if (!(this instanceof SHA256)) return new SHA256();
  BlockHash.call(this);
  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];
  this.k = sha256_K;
  this.W = new Array(64);
}

utils.inherits(SHA256, BlockHash);
module.exports = SHA256;
SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++) {
    W[i] = msg[start + i];
  }

  for (; i < W.length; i++) {
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
  }

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];
  assert(this.k.length === W.length);

  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');
};

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var common = __webpack_require__(25);

var assert = __webpack_require__(24);

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;
var BlockHash = common.BlockHash;
var sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];

function SHA512() {
  if (!(this instanceof SHA512)) return new SHA512();
  BlockHash.call(this);
  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];
  this.k = sha512_K;
  this.W = new Array(160);
}

utils.inherits(SHA512, BlockHash);
module.exports = SHA512;
SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W; // 32 x 32bit words

  for (var i = 0; i < 32; i++) {
    W[i] = msg[start + i];
  }

  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2

    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14]; // i - 7

    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15

    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32]; // i - 16

    var c3_lo = W[i - 31];
    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;
  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];
  assert(this.k.length === W.length);

  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];
    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
    hh = gh;
    hl = gl;
    gh = fh;
    gl = fl;
    fh = eh;
    fl = el;
    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);
    dh = ch;
    dl = cl;
    ch = bh;
    cl = bl;
    bh = ah;
    bl = al;
    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = xh & yh ^ ~xh & zh;
  if (r < 0) r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = xl & yl ^ ~xl & zl;
  if (r < 0) r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = xh & yh ^ xh & zh ^ yh & zh;
  if (r < 0) r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = xl & yl ^ xl & zl ^ yl & zl;
  if (r < 0) r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2); // 34

  var c2_hi = rotr64_hi(xl, xh, 7); // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2); // 34

  var c2_lo = rotr64_lo(xl, xh, 7); // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9); // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9); // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);
  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);
  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29); // 61

  var c2_hi = shr64_hi(xh, xl, 6);
  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0) r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29); // 61

  var c2_lo = shr64_lo(xh, xl, 6);
  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0) r += 0x100000000;
  return r;
}

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 49 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ _toConsumableArray; });

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
var arrayLikeToArray = __webpack_require__(26);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return Object(arrayLikeToArray["a" /* default */])(arr);
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(22);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || Object(unsupportedIterableToArray["a" /* default */])(arr) || _nonIterableSpread();
}

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if (false) {}

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (true) {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(59);
} else {}

/***/ }),
/* 51 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EC$1; });
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(10);
/* harmony import */ var bn_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bn_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(15);
/* harmony import */ var hash_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(hash_js__WEBPACK_IMPORTED_MODULE_1__);


var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function require(path, base) {
      return commonjsRequire(path, base === undefined || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}

function getDefaultExportFromNamespaceIfPresent(n) {
  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}

function getDefaultExportFromNamespaceIfNotNamed(n) {
  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}

function getAugmentedNamespace(n) {
  if (n.__esModule) return n;
  var a = Object.defineProperty({}, '__esModule', {
    value: true
  });
  Object.keys(n).forEach(function (k) {
    var d = Object.getOwnPropertyDescriptor(n, k);
    Object.defineProperty(a, k, d.get ? d : {
      enumerable: true,
      get: function get() {
        return n[k];
      }
    });
  });
  return a;
}

function commonjsRequire() {
  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var minimalisticAssert = assert;

function assert(val, msg) {
  if (!val) throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);
};

var utils_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var utils = exports;

  function toArray(msg, enc) {
    if (Array.isArray(msg)) return msg.slice();
    if (!msg) return [];
    var res = [];

    if (typeof msg !== 'string') {
      for (var i = 0; i < msg.length; i++) {
        res[i] = msg[i] | 0;
      }

      return res;
    }

    if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0) msg = '0' + msg;

      for (var i = 0; i < msg.length; i += 2) {
        res.push(parseInt(msg[i] + msg[i + 1], 16));
      }
    } else {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi) res.push(hi, lo);else res.push(lo);
      }
    }

    return res;
  }

  utils.toArray = toArray;

  function zero2(word) {
    if (word.length === 1) return '0' + word;else return word;
  }

  utils.zero2 = zero2;

  function toHex(msg) {
    var res = '';

    for (var i = 0; i < msg.length; i++) {
      res += zero2(msg[i].toString(16));
    }

    return res;
  }

  utils.toHex = toHex;

  utils.encode = function encode(arr, enc) {
    if (enc === 'hex') return toHex(arr);else return arr;
  };
});
var utils_1$1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var utils = exports;
  utils.assert = minimalisticAssert;
  utils.toArray = utils_1.toArray;
  utils.zero2 = utils_1.zero2;
  utils.toHex = utils_1.toHex;
  utils.encode = utils_1.encode; // Represent num in a w-NAF form

  function getNAF(num, w, bits) {
    var naf = new Array(Math.max(num.bitLength(), bits) + 1);
    naf.fill(0);
    var ws = 1 << w + 1;
    var k = num.clone();

    for (var i = 0; i < naf.length; i++) {
      var z;
      var mod = k.andln(ws - 1);

      if (k.isOdd()) {
        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;
        k.isubn(z);
      } else {
        z = 0;
      }

      naf[i] = z;
      k.iushrn(1);
    }

    return naf;
  }

  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form

  function getJSF(k1, k2) {
    var jsf = [[], []];
    k1 = k1.clone();
    k2 = k2.clone();
    var d1 = 0;
    var d2 = 0;
    var m8;

    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
      // First phase
      var m14 = k1.andln(3) + d1 & 3;
      var m24 = k2.andln(3) + d2 & 3;
      if (m14 === 3) m14 = -1;
      if (m24 === 3) m24 = -1;
      var u1;

      if ((m14 & 1) === 0) {
        u1 = 0;
      } else {
        m8 = k1.andln(7) + d1 & 7;
        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;
      }

      jsf[0].push(u1);
      var u2;

      if ((m24 & 1) === 0) {
        u2 = 0;
      } else {
        m8 = k2.andln(7) + d2 & 7;
        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;
      }

      jsf[1].push(u2); // Second phase

      if (2 * d1 === u1 + 1) d1 = 1 - d1;
      if (2 * d2 === u2 + 1) d2 = 1 - d2;
      k1.iushrn(1);
      k2.iushrn(1);
    }

    return jsf;
  }

  utils.getJSF = getJSF;

  function cachedProperty(obj, name, computer) {
    var key = '_' + name;

    obj.prototype[name] = function cachedProperty() {
      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);
    };
  }

  utils.cachedProperty = cachedProperty;

  function parseBytes(bytes) {
    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;
  }

  utils.parseBytes = parseBytes;

  function intFromLE(bytes) {
    return new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(bytes, 'hex', 'le');
  }

  utils.intFromLE = intFromLE;
});
'use strict';

var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime

  this.red = conf.prime ? bn_js__WEBPACK_IMPORTED_MODULE_0___default.a.red(conf.prime) : bn_js__WEBPACK_IMPORTED_MODULE_0___default.a.mont(this.p); // Useful for many curves

  this.zero = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(0).toRed(this.red);
  this.one = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(1).toRed(this.red);
  this.two = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(2).toRed(this.red); // Curve configuration, optional

  this.n = conf.n && new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays

  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);
  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick

  var adjustCount = this.n && this.p.div(this.n);

  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}

var base = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1(p.precomputed);

  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3; // Translate into more windowed form

  var repr = [];
  var j;
  var nafW;

  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;

    for (var l = j + doubles.step - 1; l >= j; l--) {
      nafW = (nafW << 1) + naf[l];
    }

    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);

  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());
    }

    a = a.add(b);
  }

  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4; // Precompute window

  var nafPoints = p._getNAFPoints(w);

  w = nafPoints.wnd;
  var wnd = nafPoints.points; // Get NAF form

  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index

  var acc = this.jpoint(null, null, null);

  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--) {
      l++;
    }

    if (i >= 0) l++;
    acc = acc.dblp(l);
    if (i < 0) break;
    var z = naf[i];
    assert$1(z !== 0);

    if (p.type === 'affine') {
      // J +- P
      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
    } else {
      // J +- J
      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());
    }
  }

  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3; // Fill all arrays

  var max = 0;
  var i;
  var j;
  var p;

  for (i = 0; i < len; i++) {
    p = points[i];

    var nafPoints = p._getNAFPoints(defW);

    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  } // Comb small window NAFs


  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;

    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [points[a],
    /* 1 */
    null,
    /* 3 */
    null,
    /* 5 */
    points[b]
    /* 7 */
    ]; // Try to avoid Projective points, if possible

    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [-3,
    /* -1 -1 */
    -1,
    /* -1 0 */
    -5,
    /* -1 1 */
    -7,
    /* 0 -1 */
    0,
    /* 0 0 */
    7,
    /* 0 1 */
    5,
    /* 1 -1 */
    1,
    /* 1 0 */
    3
    /* 1 1 */
    ];
    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);

    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;
      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;

  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;

      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0) zero = false;
      }

      if (!zero) break;
      k++;
      i--;
    }

    if (i >= 0) k++;
    acc = acc.dblp(k);
    if (i < 0) break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      p;
      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();
      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);
    }
  } // Zeroify references


  for (i = 0; i < len; i++) {
    wnd[i] = null;
  }

  if (jacobianResult) return acc;else return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}

BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function
  /*other*/
eq() {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);
  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even

  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);
    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }

  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);
  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);
  return [0x04].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed) return this;
  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;
  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed) return false;
  var doubles = this.precomputed.doubles;
  if (!doubles) return false;
  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
  var doubles = [this];
  var acc = this;

  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++) {
      acc = acc.dbl();
    }

    doubles.push(acc);
  }

  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
  var res = [this];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();

  for (var i = 1; i < max; i++) {
    res[i] = res[i - 1].add(dbl);
  }

  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;

  for (var i = 0; i < k; i++) {
    r = r.dbl();
  }

  return r;
};

var inherits_browser = createCommonjsModule(function (module) {
  if (typeof Object.create === 'function') {
    // implementation from standard node.js 'util' module
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    };
  } else {
    // old school shim for old browsers
    module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;

        var TempCtor = function TempCtor() {};

        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }
});
'use strict';

var assert$2 = utils_1$1.assert;

function ShortCurve(conf) {
  base.call(this, 'short', conf);
  this.a = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.a, 16).toRed(this.red);
  this.b = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();
  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda

  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}

inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)

  var beta;
  var lambda;

  if (conf.beta) {
    beta = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p); // Choose the smallest beta


    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }

  if (conf.lambda) {
    lambda = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);

    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  } // Get basis vectors, used for balanced length-two representation


  var basis;

  if (conf.basis) {
    basis = conf.basis.map(function (vec) {
      return {
        a: new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(vec.a, 16),
        b: new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : bn_js__WEBPACK_IMPORTED_MODULE_0___default.a.mont(num);
  var tinv = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();
  var s = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(3).toRed(red).redNeg().redSqrt().redMul(tinv);
  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [l1, l2];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt

  var u = lambda;
  var v = this.n.clone();
  var x1 = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(1);
  var y1 = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(0);
  var x2 = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(0);
  var y2 = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)

  var a0;
  var b0; // First vector

  var a1;
  var b1; // Second vector

  var a2;
  var b2;
  var prevR;
  var i = 0;
  var r;
  var x;

  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }

    prevR = r;
    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }

  a2 = r.neg();
  b2 = x;
  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());

  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  } // Normalize signs


  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }

  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [{
    a: a1,
    b: b1
  }, {
    a: a2,
    b: b2
  }];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];
  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);
  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b); // Calculate answer

  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return {
    k1: k1,
    k2: k2
  };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(x, 16);
  if (!x.red) x = x.toRed(this.red);
  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();
  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf) return true;
  var x = point.x;
  var y = point.y;
  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;

  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);

    var p = points[i];

    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }

    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }

  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients


  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }

  return res;
};

function Point(curve, x, y, isRed) {
  base.BasePoint.call(this, curve, 'affine');

  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(x, 16);
    this.y = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(y, 16); // Force redgomery representation when loading from JSON

    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }

    if (!this.x.red) this.x = this.x.toRed(this.curve.red);
    if (!this.y.red) this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}

inherits_browser(Point, base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo) return;
  var pre = this.precomputed;
  if (pre && pre.beta) return pre.beta;
  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);

  if (pre) {
    var curve = this.curve;

    var endoMul = function endoMul(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };

    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }

  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed) return [this.x, this.y];
  return [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string') obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2]) return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [res].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [res].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf) return p; // P + O = P

  if (p.inf) return this; // P + P = 2P

  if (this.eq(p)) return this.dbl(); // P + (-P) = O

  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O

  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);
  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf) return this; // 2P = O

  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);
  var a = this.curve.a;
  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(k, 16);
  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [this, p2];
  var coeffs = [k1, k2];
  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf) return this;
  var res = this.curve.point(this.x, this.y.redNeg());

  if (_precompute && this.precomputed) {
    var pre = this.precomputed;

    var negate = function negate(p) {
      return p.neg();
    };

    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }

  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf) return this.curve.jpoint(null, null, null);
  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  base.BasePoint.call(this, curve, 'jacobian');

  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(0);
  } else {
    this.x = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(x, 16);
    this.y = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(y, 16);
    this.z = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(z, 16);
  }

  if (!this.x.red) this.x = this.x.toRed(this.curve.red);
  if (!this.y.red) this.y = this.y.toRed(this.curve.red);
  if (!this.z.red) this.z = this.z.toRed(this.curve.red);
  this.zOne = this.z === this.curve.one;
}

inherits_browser(JPoint, base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity()) return this.curve.point(null, null);
  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);
  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity()) return p; // P + O = P

  if (p.isInfinity()) return this; // 12M + 4S + 7A

  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);

  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity()) return p.toJ(); // P + O = P

  if (p.isInfinity()) return this; // 8M + 3S + 7A

  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);
  var h = u1.redSub(u2);
  var r = s1.redSub(s2);

  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);
  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);
  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0) return this;
  if (this.isInfinity()) return this;
  if (!pow) return this.dbl();
  var i;

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;

    for (i = 0; i < pow; i++) {
      r = r.dbl();
    }

    return r;
  } // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A


  var a = this.curve.a;
  var tinv = this.curve.tinv;
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr(); // Reuse results

  var jyd = jy.redAdd(jy);

  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);
    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity()) return this;
  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz; // Z = 1

  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A
    // XX = X1^2
    var xx = this.x.redSqr(); // YY = Y1^2

    var yy = this.y.redSqr(); // YYYY = YY^2

    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)

    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s); // M = 3 * XX + a; a = 0

    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S

    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY

    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T

    nx = t; // Y3 = M * (S - T) - 8 * YYYY

    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1

    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A
    // A = X1^2
    var a = this.x.redSqr(); // B = Y1^2

    var b = this.y.redSqr(); // C = B^2

    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)

    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d); // E = 3 * A

    var e = a.redAdd(a).redIAdd(a); // F = E^2

    var f = e.redSqr(); // 8 * C

    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8); // X3 = F - 2 * D

    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C

    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1

    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz; // Z = 1

  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A
    // XX = X1^2
    var xx = this.x.redSqr(); // YY = Y1^2

    var yy = this.y.redSqr(); // YYYY = YY^2

    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)

    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s); // M = 3 * XX + a

    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S

    var t = m.redSqr().redISub(s).redISub(s); // X3 = T

    nx = t; // Y3 = M * (S - T) - 8 * YYYY

    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1

    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S
    // delta = Z1^2
    var delta = this.z.redSqr(); // gamma = Y1^2

    var gamma = this.y.redSqr(); // beta = X1 * gamma

    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)

    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta

    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta

    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2

    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a; // 4M + 6S + 10A

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();
  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();
  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);
  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);
  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...
  // XX = X1^2

  var xx = this.x.redSqr(); // YY = Y1^2

  var yy = this.y.redSqr(); // ZZ = Z1^2

  var zz = this.z.redSqr(); // YYYY = YY^2

  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0

  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2

  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM

  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm); // EE = E^2

  var ee = e.redSqr(); // T = 16*YYYY

  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T

  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)

  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)

  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE

  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(k, kbase);
  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine') return this.eq(p.toJ());
  if (this === p) return true; // x1 * z2^2 == x2 * z1^2

  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3

  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0) return true;
  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);

  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0) return false;
    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0) return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity()) return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

var curve_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var curve = exports;
  curve.base = base;
  curve.short = short_1;
  curve.mont =
  /*RicMoo:ethers:require(./mont)*/
  null;
  curve.edwards =
  /*RicMoo:ethers:require(./edwards)*/
  null;
});
var curves_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var curves = exports;
  var assert = utils_1$1.assert;

  function PresetCurve(options) {
    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);
    this.g = this.curve.g;
    this.n = this.curve.n;
    this.hash = options.hash;
    assert(this.g.validate(), 'Invalid curve');
    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
  }

  curves.PresetCurve = PresetCurve;

  function defineCurve(name, options) {
    Object.defineProperty(curves, name, {
      configurable: true,
      enumerable: true,
      get: function get() {
        var curve = new PresetCurve(options);
        Object.defineProperty(curves, name, {
          configurable: true,
          enumerable: true,
          value: curve
        });
        return curve;
      }
    });
  }

  defineCurve('p192', {
    type: 'short',
    prime: 'p192',
    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    gRed: false,
    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']
  });
  defineCurve('p224', {
    type: 'short',
    prime: 'p224',
    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    gRed: false,
    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']
  });
  defineCurve('p256', {
    type: 'short',
    prime: null,
    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    gRed: false,
    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']
  });
  defineCurve('p384', {
    type: 'short',
    prime: null,
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',
    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',
    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha384,
    gRed: false,
    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']
  });
  defineCurve('p521', {
    type: 'short',
    prime: null,
    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',
    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',
    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha512,
    gRed: false,
    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']
  });
  defineCurve('curve25519', {
    type: 'mont',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '76d06',
    b: '1',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    gRed: false,
    g: ['9']
  });
  defineCurve('ed25519', {
    type: 'edwards',
    prime: 'p25519',
    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
    a: '-1',
    c: '1',
    // -121665 * (121666^(-1)) (mod P)
    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    gRed: false,
    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658']
  });
  var pre;

  try {
    pre =
    /*RicMoo:ethers:require(./precomputed/secp256k1)*/
    null.crash();
  } catch (e) {
    pre = undefined;
  }

  defineCurve('secp256k1', {
    type: 'short',
    prime: 'k256',
    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
    a: '0',
    b: '7',
    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
    h: '1',
    hash: hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.sha256,
    // Precomputed endomorphism
    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
    basis: [{
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    }, {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }],
    gRed: false,
    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]
  });
});
'use strict';

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;
  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;
  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;
  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._init(entropy, nonce, pers);
}

var hmacDrbg = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);
  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);

  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);

  this._reseed = 1;
  this.reseedInterval = 0x1000000000000; // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash_js__WEBPACK_IMPORTED_MODULE_1___default.a.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac().update(this.V).update([0x00]);

  if (seed) kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed) return;
  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils_1.toArray(entropy, entropyEnc);
  add = utils_1.toArray(add, addEnc);
  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));

  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding

  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  } // Optional additional data


  if (add) {
    add = utils_1.toArray(add, addEnc || 'hex');

    this._update(add);
  }

  var temp = [];

  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);

  this._update(add);

  this._reseed++;
  return utils_1.encode(res, enc);
};

'use strict';

var assert$3 = utils_1$1.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })

  if (options.priv) this._importPrivate(options.priv, options.privEnc);
  if (options.pub) this._importPublic(options.pub, options.pubEnc);
}

var key = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair) return pub;
  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair) return priv;
  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();
  if (pub.isInfinity()) return {
    result: false,
    reason: 'Invalid public key'
  };
  if (!pub.validate()) return {
    result: false,
    reason: 'Public key is not a point'
  };
  if (!pub.mul(this.ec.curve.n).isInfinity()) return {
    result: false,
    reason: 'Public key * N != O'
  };
  return {
    result: true,
    reason: null
  };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub) this.pub = this.ec.g.mul(this.priv);
  if (!enc) return this.pub;
  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method

  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$3(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {
      assert$3(key.x && key.y, 'Need both x and y coordinate');
    }

    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }

  this.pub = this.ec.curve.decodePoint(key, enc);
}; // ECDH


KeyPair.prototype.derive = function derive(pub) {
  if (!pub.validate()) {
    assert$3(pub.validate(), 'public point not validated');
  }

  return pub.mul(this.priv).getX();
}; // ECDSA


KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};

'use strict';

var assert$4 = utils_1$1.assert;

function Signature(options, enc) {
  if (options instanceof Signature) return options;
  if (this._importDER(options, enc)) return;
  assert$4(options.r && options.s, 'Signature without r or s');
  this.r = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(options.r, 16);
  this.s = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(options.s, 16);
  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;
}

var signature = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];

  if (!(initial & 0x80)) {
    return initial;
  }

  var octetLen = initial & 0xf; // Indefinite length or overflow

  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;

  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  } // Leading zeroes


  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;

  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }

  if (i === 0) {
    return buf;
  }

  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position();

  if (data[p.place++] !== 0x30) {
    return false;
  }

  var len = getLength(data, p);

  if (len === false) {
    return false;
  }

  if (len + p.place !== data.length) {
    return false;
  }

  if (data[p.place++] !== 0x02) {
    return false;
  }

  var rlen = getLength(data, p);

  if (rlen === false) {
    return false;
  }

  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;

  if (data[p.place++] !== 0x02) {
    return false;
  }

  var slen = getLength(data, p);

  if (slen === false) {
    return false;
  }

  if (data.length !== slen + p.place) {
    return false;
  }

  var s = data.slice(p.place, slen + p.place);

  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(r);
  this.s = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(s);
  this.recoveryParam = null;
  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }

  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);

  while (--octets) {
    arr.push(len >>> (octets << 3) & 0xff);
  }

  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray(); // Pad values

  if (r[0] & 0x80) r = [0].concat(r); // Pad values

  if (s[0] & 0x80) s = [0].concat(s);
  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }

  var arr = [0x02];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [0x30];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};

'use strict';

var rand =
/*RicMoo:ethers:require(brorand)*/
function rand() {
  throw new Error('unsupported');
};

var assert$5 = utils_1$1.assert;

function EC(options) {
  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`

  if (typeof options === 'string') {
    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);
    options = curves_1[options];
  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`


  if (options instanceof curves_1.PresetCurve) options = {
    curve: options
  };
  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g; // Point on curve

  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG

  this.hash = options.hash || options.curve.hash;
}

var ec = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new key(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options) options = {}; // Instantiate Hmac_DRBG

  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });
  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(2));

  for (;;) {
    var priv = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0) continue;
    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0) msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }

  if (!options) options = {};
  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(msg, 16)); // Zero-extend key to provide enough entropy

  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N

  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG

  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  }); // Number of bytes to generate

  var ns1 = this.n.sub(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(1));

  for (var iter = 0;; iter++) {
    var k = options.k ? options.k(iter) : new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
    var kp = this.g.mul(k);
    if (kp.isInfinity()) continue;
    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0) continue;
    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0) continue;
    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`

    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new signature({
      r: r,
      s: s,
      recoveryParam: recoveryParam
    });
  }
};

EC.prototype.verify = function verify(msg, signature$1, key, enc) {
  msg = this._truncateToN(new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation

  var r = signature$1.r;
  var s = signature$1.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature

  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity()) return false;
    return p.getX().umod(this.n).cmp(r) === 0;
  } // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K


  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`

  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {
  assert$5((3 & j) === j, 'The recovery param is more than two bits');
  signature$1 = new signature(signature$1, enc);
  var n = this.n;
  var e = new bn_js__WEBPACK_IMPORTED_MODULE_0___default.a(msg);
  var r = signature$1.r;
  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd

  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.

  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);
  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)

  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;

    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q)) return i;
  }

  throw new Error('Unable to find valid recovery factor');
};

var elliptic_1 = createCommonjsModule(function (module, exports) {
  'use strict';

  var elliptic = exports;
  elliptic.version =
  /*RicMoo:ethers*/
  {
    version: "6.5.4"
  }.version;
  elliptic.utils = utils_1$1;

  elliptic.rand =
  /*RicMoo:ethers:require(brorand)*/
  function () {
    throw new Error('unsupported');
  };

  elliptic.curve = curve_1;
  elliptic.curves = curves_1; // Protocols

  elliptic.ec = ec;
  elliptic.eddsa =
  /*RicMoo:ethers:require(./elliptic/eddsa)*/
  null;
});
var EC$1 = elliptic_1.ec;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(23)))

/***/ }),
/* 52 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return version; });
var version = "random/5.5.0";

/***/ }),
/* 53 */
/***/ (function(module, exports) {

module.exports = function (md, options) {
  options = options || {};
  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;
  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;
  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;
  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;
  var output = md || ''; // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)

  output = output.replace(/^(-\s*?|\*\s*?|_\s*?){3,}\s*$/gm, '');

  try {
    if (options.stripListLeaders) {
      if (options.listUnicodeChar) output = output.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm, options.listUnicodeChar + ' $1');else output = output.replace(/^([\s\t]*)([\*\-\+]|\d+\.)\s+/gm, '$1');
    }

    if (options.gfm) {
      output = output // Header
      .replace(/\n={2,}/g, '\n') // Fenced codeblocks
      .replace(/~{3}.*\n/g, '') // Strikethrough
      .replace(/~~/g, '') // Fenced codeblocks
      .replace(/`{3}.*\n/g, '');
    }

    output = output // Remove HTML tags
    .replace(/<[^>]*>/g, '') // Remove setext-style headers
    .replace(/^[=\-]{2,}\s*$/g, '') // Remove footnotes?
    .replace(/\[\^.+?\](\: .*?$)?/g, '').replace(/\s{0,2}\[.*?\]: .*?$/g, '') // Remove images
    .replace(/\!\[(.*?)\][\[\(].*?[\]\)]/g, options.useImgAltText ? '$1' : '') // Remove inline links
    .replace(/\[(.*?)\][\[\(].*?[\]\)]/g, '$1') // Remove blockquotes
    .replace(/^\s{0,3}>\s?/g, '') // Remove reference-style links?
    .replace(/^\s{1,2}\[(.*?)\]: (\S+)( ".*?")?\s*$/g, '') // Remove atx-style headers
    .replace(/^(\n)?\s{0,}#{1,6}\s+| {0,}(\n)?\s{0,}#{0,} {0,}(\n)?\s{0,}$/gm, '$1$2$3') // Remove emphasis (repeat the line to remove double emphasis)
    .replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g, '$2').replace(/([\*_]{1,3})(\S.*?\S{0,1})\1/g, '$2') // Remove code blocks
    .replace(/(`{3,})(.*?)\1/gm, '$2') // Remove inline code
    .replace(/`(.+?)`/g, '$1') // Replace two or more newlines with exactly two? Not entirely sure this belongs here...
    .replace(/\n{2,}/g, '\n\n');
  } catch (e) {
    console.error(e);
    return md;
  }

  return output;
};

/***/ }),
/* 54 */
/***/ (function(module) {

module.exports = JSON.parse("{\"1\":{\"key\":\"1\",\"name\":\"Ethereum Mainnet\",\"chainId\":1,\"network\":\"homestead\",\"multicall\":\"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\"ensResolver\":\"0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41\",\"rpc\":[{\"url\":\"https://api-geth-archive.ankr.com\",\"user\":\"balancer_user\",\"password\":\"balancerAnkr20201015\"},\"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/eth/mainnet/archive\",\"https://apis.ankr.com/e62bc219f9c9462b8749defe472d2dc5/6106d4a3ec1d1bcc87ec72158f8fd089/eth/archive/main\",\"https://eth-archival.gateway.pokt.network/v1/5f76124fb90218002e9ce985\",\"https://eth-mainnet.alchemyapi.io/v2/4bdDVB5QAaorY2UE-GBUbM2yQB3QJqzv\",\"https://cloudflare-eth.com\"],\"ws\":[\"wss://eth-mainnet.ws.alchemyapi.io/v2/4bdDVB5QAaorY2UE-GBUbM2yQB3QJqzv\"],\"explorer\":\"https://etherscan.io\"},\"3\":{\"key\":\"3\",\"name\":\"Ethereum Testnet Ropsten\",\"shortName\":\"Ropsten\",\"chainId\":3,\"network\":\"ropsten\",\"testnet\":true,\"multicall\":\"0x53c43764255c17bd724f74c4ef150724ac50a3ed\",\"rpc\":[\"https://eth-ropsten.alchemyapi.io/v2/QzGz6gdkpTyDzebi3PjxIaKO7bDTGnSy\"],\"explorer\":\"https://ropsten.etherscan.io\"},\"4\":{\"key\":\"4\",\"name\":\"Ethereum Testnet Rinkeby\",\"shortName\":\"Rinkeby\",\"chainId\":4,\"network\":\"rinkeby\",\"testnet\":true,\"multicall\":\"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821\",\"ensResolver\":\"0xf6305c19e814d2a75429fd637d01f7ee0e77d615\",\"rpc\":[\"https://eth-rinkeby.alchemyapi.io/v2/ugiPEBqMebLQbjro42kalZ1h4StpW_fR\",\"https://eth-rinkeby.gateway.pokt.network/v1/5f76124fb90218002e9ce985\"],\"ws\":[\"wss://eth-rinkeby.ws.alchemyapi.io/v2/twReQE9Px03E-E_N_Fbb3OVF7YgHxoGq\"],\"explorer\":\"https://rinkeby.etherscan.io\"},\"5\":{\"key\":\"5\",\"name\":\"Ethereum Testnet Görli\",\"shortName\":\"Görli\",\"chainId\":5,\"network\":\"goerli\",\"testnet\":true,\"multicall\":\"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e\",\"rpc\":[\"https://eth-goerli.alchemyapi.io/v2/v4nqH_J-J3STit45Mm07TxuYexMHQsYZ\"],\"explorer\":\"https://goerli.etherscan.io\"},\"7\":{\"key\":\"7\",\"name\":\"ThaiChain\",\"chainId\":7,\"network\":\"mainnet\",\"multicall\":\"0xB9cb900E526e7Ad32A2f26f1fF6Dee63350fcDc5\",\"rpc\":[\"https://rpc.dome.cloud\"],\"ws\":[\"wss://ws.dome.cloud\"],\"explorer\":\"https://exp.tch.in.th\"},\"8\":{\"key\":\"8\",\"name\":\"Ubiq Mainnet\",\"chainId\":8,\"network\":\"Ubiq mainnet\",\"multicall\":\"0x6668750957e4083725926B71C41bDF1434C73262\",\"rpc\":[\"https://rpc.octano.dev\"],\"ws\":[\"wss://ws.octano.dev\"],\"explorer\":\"https://ubiqscan.io\"},\"20\":{\"key\":\"20\",\"name\":\"Elastos Smart Chain\",\"shortName\":\"ESC\",\"chainId\":20,\"network\":\"mainnet\",\"multicall\":\"0x20205D3b6008bea1411bd4CaEA2D923FE231B6E5\",\"rpc\":[\"https://rpc.glidefinance.io\",\"https://escrpc.elaphant.app\"],\"explorer\":\"https://esc.elastos.io\"},\"25\":{\"key\":\"25\",\"name\":\"Cronos Mainnet\",\"shortName\":\"Cronos\",\"chainId\":25,\"network\":\"mainnet\",\"multicall\":\"0x6F522a3982e8F9A50A2EDc9E46ed1A3aE2B3FD3a\",\"rpc\":[\"https://evm-cronos.crypto.org\"],\"explorer\":\"https://cronos.crypto.org/explorer\"},\"30\":{\"key\":\"30\",\"name\":\"RSK Mainnet\",\"chainId\":30,\"network\":\"rsk mainnet\",\"multicall\":\"0x4eeebb5580769ba6d26bfd07be636300076d1831\",\"rpc\":[\"https://public-node.rsk.co\"],\"explorer\":\"https://explorer.rsk.co\"},\"31\":{\"key\":\"31\",\"name\":\"RSK Testnet\",\"chainId\":31,\"network\":\"rsk testnet\",\"testnet\":true,\"multicall\":\"0x4eeebb5580769ba6d26bfd07be636300076d1831\",\"rpc\":[\"https://public-node.testnet.rsk.co\"],\"explorer\":\"https://explorer.testnet.rsk.co\"},\"42\":{\"key\":\"42\",\"name\":\"Ethereum Testnet Kovan\",\"shortName\":\"Kovan\",\"chainId\":42,\"network\":\"kovan\",\"testnet\":true,\"multicall\":\"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a\",\"rpc\":[\"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/eth/kovan/archive\",\"https://eth-kovan.alchemyapi.io/v2/sR9qngOH3w78GAaTtlTe8GwEnij0SnEa\",\"https://eth-kovan.alchemyapi.io/v2/s96TIUFYg0LuddgpmafA040ZyUaZbrpM\",\"https://poa-kovan.gateway.pokt.network/v1/5f76124fb90218002e9ce985\"],\"ws\":[\"wss://eth-kovan.ws.alchemyapi.io/v2/QCsM2iU0bQ49eGDmZ7-Y--Wpu0lVWXSO\"],\"explorer\":\"https://kovan.etherscan.io\"},\"44\":{\"key\":\"44\",\"name\":\"Crab Network\",\"shortName\":\"Crab\",\"chainId\":44,\"network\":\"mainnet\",\"multicall\":\"0x4617D470F847Ce166019d19a7944049ebB017400\",\"rpc\":[\"https://crab-rpc.darwinia.network\"],\"explorer\":\"https://crab.subscan.io/\"},\"50\":{\"key\":\"50\",\"name\":\"XinFin MainNet\",\"shortName\":\"XDC\",\"chainId\":50,\"network\":\"mainnet\",\"multicall\":\"\",\"rpc\":[\"https://rpc.xinfin.network\"],\"ws\":[\"wss://ws.xinfin.network\"],\"explorer\":\"http://explorer.xinfin.network/\"},\"56\":{\"key\":\"56\",\"name\":\"Binance Smart Chain Mainnet\",\"shortName\":\"BSC\",\"chainId\":56,\"network\":\"mainnet\",\"multicall\":\"0x1ee38d535d541c55c9dae27b12edf090c608e6fb\",\"rpc\":[\"https://apis.ankr.com/c0d871dd3c6d4529b01c9362a9b79e89/6106d4a3ec1d1bcc87ec72158f8fd089/binance/archive/main\",\"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/bsc/mainnet/archive\",\"https://bsc.getblock.io/mainnet/?api_key=91f8195f-bf46-488f-846a-73d6853790e7\",\"https://bsc-private-dataseed1.nariox.org\",\"https://bsc-private-dataseed2.nariox.org\",\"https://bsc-dataseed1.ninicoin.io\",\"https://bsc-dataseed1.binance.org\",\"https://bsc-dataseed2.binance.org\",\"https://bsc-dataseed3.binance.org\"],\"explorer\":\"https://bscscan.com\"},\"61\":{\"key\":\"61\",\"name\":\"Ethereum Classic Mainnet\",\"shortName\":\"Ethereum Classic\",\"chainId\":61,\"network\":\"mainnet\",\"multicall\":\"\",\"rpc\":[\"https://ethereumclassic.network\"],\"explorer\":\"https://blockscout.com/etc/mainnet\"},\"65\":{\"key\":\"65\",\"name\":\"OKExChain Testnet\",\"shortName\":\"OEC Testnet\",\"chainId\":65,\"network\":\"oec testnet\",\"testnet\":true,\"multicall\":\"0x04c68A7fB750ca0Ba232105B3b094926a0f77645\",\"rpc\":[\"https://exchaintestrpc.okex.org\"],\"ws\":[\"wss://exchaintestws.okex.org:8443\"],\"explorer\":\"https://www.oklink.com/okexchain-test\"},\"66\":{\"key\":\"66\",\"name\":\"OKExChain Mainnet\",\"shortName\":\"OEC Mainnet\",\"chainId\":66,\"network\":\"oec mainnet\",\"multicall\":\"0x6EB187d8197Ac265c945b69f3c3064A6f3831866\",\"rpc\":[\"https://exchainrpc.okex.org\"],\"ws\":[\"wss://exchainws.okex.org:8443\"],\"explorer\":\"https://www.oklink.com/okexchain\"},\"70\":{\"key\":\"70\",\"name\":\"Hoo Smart Chain Mainnet\",\"shortName\":\"hsc\",\"chainId\":70,\"network\":\"Mainnet\",\"multicall\":\"0xd4b794b89baccb70ef851830099bee4d69f19ebc\",\"rpc\":[\"https://http-mainnet2.hoosmartchain.com\"],\"ws\":[\"wss://ws-mainnet2.hoosmartchain.com\"],\"explorer\":\"https://hscscan.com\"},\"80\":{\"key\":\"80\",\"name\":\"GeneChain\",\"chainId\":80,\"network\":\"Mainnet\",\"multicall\":\"0x9e6ed491171A0D9089892aA5F14800f9f32038eb\",\"rpc\":[\"https://rpc.genechain.io\"],\"explorer\":\"https://scan.genechain.io\"},\"82\":{\"key\":\"82\",\"name\":\"Meter Mainnet\",\"shortName\":\"Meter\",\"chainId\":82,\"network\":\"mainnet\",\"multicall\":\"0x579De77CAEd0614e3b158cb738fcD5131B9719Ae\",\"rpc\":[\"https://rpc.meter.io\"],\"explorer\":\"https://scan.meter.io\"},\"97\":{\"key\":\"97\",\"name\":\"Binance Smart Chain Testnet\",\"shortName\":\"BSC Testnet\",\"chainId\":97,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0x8b54247c6BAe96A6ccAFa468ebae96c4D7445e46\",\"rpc\":[\"https://speedy-nodes-nyc.moralis.io/f2963e29bec0de5787da3164/bsc/testnet/archive\",\"https://data-seed-prebsc-1-s1.binance.org:8545\"],\"explorer\":\"https://testnet.bscscan.com\"},\"99\":{\"key\":\"99\",\"name\":\"POA Core\",\"shortName\":\"POA\",\"chainId\":99,\"network\":\"mainnet\",\"multicall\":\"\",\"rpc\":[\"https://core.poa.network\"],\"explorer\":\"https://blockscout.com/poa/core/\"},\"100\":{\"key\":\"100\",\"name\":\"xDAI Chain\",\"shortName\":\"xDAI\",\"chainId\":100,\"network\":\"mainnet\",\"multicall\":\"0xb5b692a88bdfc81ca69dcb1d924f59f0413a602a\",\"rpc\":[\"https://xdai-archive.blockscout.com\",\"https://poa-xdai.gateway.pokt.network/v1/5f76124fb90218002e9ce985\"],\"ws\":[\"wss://rpc.xdaichain.com/wss\"],\"explorer\":\"https://blockscout.com/poa/xdai\"},\"106\":{\"key\":\"106\",\"name\":\"Velas EVM Mainnet\",\"shortName\":\"Velas\",\"chainId\":106,\"network\":\"mainnet\",\"multicall\":\"0x597Cc7c49a8e0041d3A43ec8D7dc651b47879108\",\"rpc\":[\"https://evmexplorer.velas.com/rpc\",\"https://explorer.velas.com/rpc\"],\"ws\":[\"wss://api.velas.com\"],\"explorer\":\"https://evmexplorer.velas.com\"},\"108\":{\"key\":\"108\",\"name\":\"Thundercore Mainnet\",\"chainId\":108,\"network\":\"mainnet\",\"multicall\":\"\",\"rpc\":[\"https://mainnet-rpc.thundercore.com\"],\"explorer\":\"https://scan.thundercore.com\"},\"111\":{\"key\":\"111\",\"name\":\"Velas EVM Testnet\",\"shortName\":\"Velas Testnet\",\"chainId\":111,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0x55a827538FbF41b7334Dd49001220597898Ad954\",\"rpc\":[\"https://evmexplorer.testnet.velas.com/rpc\",\"https://explorer.testnet.velas.com/rpc\"],\"ws\":[\"wss://api.testnet.velas.com\"],\"explorer\":\"https://evmexplorer.testnet.velas.com\"},\"122\":{\"key\":\"122\",\"name\":\"Fuse Mainnet\",\"shortName\":\"Fuse\",\"chainId\":122,\"network\":\"mainnet\",\"multicall\":\"0x7a59441fb06666F6d2D766393d876945D06a169c\",\"rpc\":[\"https://oefusefull1.liquify.info/\"],\"explorer\":\"https://explorer.fuse.io\"},\"128\":{\"key\":\"128\",\"name\":\"Huobi Eco Chain Mainnet\",\"shortName\":\"heco\",\"chainId\":128,\"network\":\"Mainnet\",\"multicall\":\"0x37ab26db3df780e7026f3e767f65efb739f48d8e\",\"rpc\":[\"https://pub001.hg.network/rpc\"],\"ws\":[\"wss://pub001.hg.network/ws\"],\"explorer\":\"https://hecoinfo.com\"},\"137\":{\"key\":\"137\",\"name\":\"Polygon Mainnet\",\"shortName\":\"Polygon\",\"chainId\":137,\"network\":\"mainnet\",\"multicall\":\"0xCBca837161be50EfA5925bB9Cc77406468e76751\",\"rpc\":[\"https://speedy-nodes-nyc.moralis.io/f2963e29bec0de5787da3164/polygon/mainnet/archive\",\"https://rpc-mainnet.maticvigil.com/v1/1cfd7598e5ba6dcf0b4db58e8be484badc6ea08e\",\"https://speedy-nodes-nyc.moralis.io/b9aed21e7bb7bdeb35972c9a/polygon/mainnet/archive\"],\"ws\":[\"wss://ws-mainnet.matic.network\"],\"explorer\":\"https://polygonscan.com\"},\"246\":{\"key\":\"246\",\"name\":\"Energy Web Chain\",\"shortName\":\"EWC\",\"chainId\":246,\"network\":\"mainnet\",\"multicall\":\"0x0767F26d0D568aB61A98b279C0b28a4164A6f05e\",\"rpc\":[\"https://voting-rpc.carbonswap.exchange\"],\"explorer\":\"https://explorer.energyweb.org\"},\"250\":{\"key\":\"250\",\"name\":\"Fantom Opera\",\"shortName\":\"fantom\",\"chainId\":250,\"network\":\"Mainnet\",\"multicall\":\"0x7f6A10218264a22B4309F3896745687E712962a0\",\"rpc\":[\"https://rpc.ftm.tools\",\"https://rpcapi.fantom.network\"],\"explorer\":\"https://ftmscan.com\"},\"256\":{\"key\":\"256\",\"name\":\"Huobi Eco Chain Testnet\",\"shortName\":\"heco\",\"chainId\":256,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0xC33994Eb943c61a8a59a918E2de65e03e4e385E0\",\"rpc\":[\"https://http-testnet.hecochain.com\"],\"ws\":[\"wss://ws-testnet.hecochain.com\"],\"explorer\":\"https://testnet.hecoinfo.com\"},\"321\":{\"key\":\"321\",\"name\":\"KCC Mainnet\",\"shortName\":\"KCC\",\"chainId\":321,\"network\":\"mainnet\",\"multicall\":\"0xa64D6AFb48225BDA3259246cfb418c0b91de6D7a\",\"rpc\":[\"https://rpc-mainnet.kcc.network\"],\"ws\":[\"wss://rpc-ws-mainnet.kcc.network\"],\"explorer\":\"https://explorer.kcc.io\"},\"499\":{\"key\":\"499\",\"name\":\"Rupaya\",\"shortName\":\"RUPX\",\"chainId\":499,\"network\":\"mainnet\",\"multicall\":\"0x7955FF653FfDBf13056FeAe227f655CfF5C194D5\",\"rpc\":[\"https://rpc.rupx.io\"],\"ws\":[\"wss://ws.rupx.io\"],\"explorer\":\"http://scan.rupx.io\"},\"888\":{\"key\":\"888\",\"name\":\"Wanchain\",\"chainId\":888,\"network\":\"mainnet\",\"multicall\":\"0xba5934ab3056fca1fa458d30fbb3810c3eb5145f\",\"rpc\":[\"https://gwan-ssl.wandevs.org:56891\"],\"ws\":[\"wss://api.wanchain.org:8443/ws/v3/ddd16770c68f30350a21114802d5418eafe039b722de52b488e7eee1ee2cd73f\"],\"explorer\":\"https://www.wanscan.org\"},\"1285\":{\"key\":\"1285\",\"name\":\"Moonriver (Kusama)\",\"shortName\":\"Moonriver\",\"chainId\":1285,\"network\":\"mainnet\",\"multicall\":\"0x537004440ffFE1D4AE9F009031Fc2b0385FCA9F1\",\"rpc\":[\"https://rpc.moonriver.moonbeam.network\"],\"explorer\":\"https://blockscout.moonriver.moonbeam.network/\"},\"1287\":{\"key\":\"1287\",\"name\":\"Moonbase Alpha TestNet\",\"shortName\":\"Moonbase\",\"chainId\":1287,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0xf09FD6B6FF3f41614b9d6be2166A0D07045A3A97\",\"rpc\":[\"https://rpc.testnet.moonbeam.network\"],\"explorer\":\"https://moonbase-blockscout.testnet.moonbeam.network/\"},\"4689\":{\"key\":\"4689\",\"name\":\"IoTeX Mainnet\",\"shortName\":\"IoTeX\",\"chainId\":4689,\"network\":\"mainnet\",\"multicall\":\"0x9c8B105c94282CDB0F3ecF27e3cfA96A35c07be6\",\"rpc\":[\"https://babel-api.mainnet.iotex.io\"],\"explorer\":\"https://iotexscan.io\"},\"4690\":{\"key\":\"4690\",\"name\":\"IoTeX Testnet\",\"shortName\":\"IoTeX\",\"chainId\":4690,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0x30aE8783d26aBE7Fbb9d83549CCb7430AE4A301F\",\"rpc\":[\"https://babel-api.testnet.iotex.io\"],\"explorer\":\"https://testnet.iotexscan.io\"},\"32659\":{\"key\":\"32659\",\"name\":\"Fusion Mainnet\",\"chainId\":32659,\"network\":\"mainnet\",\"multicall\":\"\",\"rpc\":[\"https://vote.anyswap.exchange/mainnet\"],\"ws\":[\"wss://mainnetpublicgateway1.fusionnetwork.io:10001\"],\"explorer\":\"https://fsnex.com\"},\"42161\":{\"key\":\"42161\",\"name\":\"Arbitrum One\",\"chainId\":42161,\"network\":\"Arbitrum mainnet\",\"multicall\":\"0x7A7443F8c577d537f1d8cD4a629d40a3148Dd7ee\",\"rpc\":[\"https://arb-mainnet.g.alchemy.com/v2/JDvtNGwnHhTltIwfnxQocKwKkCTKA1DL\"],\"explorer\":\"https://arbiscan.io\"},\"42220\":{\"key\":\"42220\",\"name\":\"Celo Mainnet\",\"shortName\":\"Celo\",\"chainId\":42220,\"network\":\"mainnet\",\"multicall\":\"0xb8d0d2C1391eeB350d2Cd39EfABBaaEC297368D9\",\"rpc\":[\"https://celo-mainnet--rpc.datahub.figment.io/apikey/e892a66dc36e4d2d98a5d6406d609796/\"],\"explorer\":\"https://explorer.celo.org\"},\"43114\":{\"key\":\"43114\",\"name\":\"Avalanche\",\"chainId\":43114,\"network\":\"mainnet\",\"multicall\":\"0x7E9985aE4C8248fdB07607648406a48C76e9e7eD\",\"rpc\":[\"https://api.avax.network/ext/bc/C/rpc\"],\"explorer\":\"https://cchain.explorer.avax.network\"},\"80001\":{\"key\":\"80001\",\"name\":\"Matic Mumbai\",\"chainId\":80001,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc\",\"rpc\":[\"https://speedy-nodes-nyc.moralis.io/f2963e29bec0de5787da3164/polygon/mumbai/archive\",\"https://rpc-mumbai.matic.today\"],\"ws\":[\"wss://ws-mumbai.matic.today\"],\"explorer\":\"\"},\"333888\":{\"key\":\"333888\",\"name\":\"Polis Sparta\",\"shortName\":\"Sparta\",\"chainId\":333888,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0xA4c03972023d5f684d35eF1C541752490975383e\",\"rpc\":[\"https://sparta-rpc.polis.tech\"],\"explorer\":\"https://sparta-explorer.polis.tech\"},\"333999\":{\"key\":\"333999\",\"name\":\"Polis Olympus\",\"shortName\":\"Olympus\",\"chainId\":333999,\"network\":\"mainnet\",\"multicall\":\"0x34b99C2a4a4620F10ac779c36b8c61F90FD61732\",\"rpc\":[\"https://rpc.polis.tech\"],\"explorer\":\"https://explorer.polis.tech\"},\"1666600000\":{\"key\":\"1666600000\",\"name\":\"Harmony Mainnet\",\"shortName\":\"HarmonyMainnet\",\"chainId\":1666600000,\"network\":\"mainnet\",\"multicall\":\"0x9c31392D2e0229dC4Aa250F043d46B9E82074BF8\",\"rpc\":[\"https://a.api.s0.t.hmny.io\"],\"ws\":[\"wss://ws.s0.t.hmny.io\"],\"explorer\":\"https://explorer.harmony.one\"},\"1666700000\":{\"key\":\"1666700000\",\"name\":\"Harmony Testnet\",\"shortName\":\"HarmonyTestnet\",\"chainId\":1666700000,\"network\":\"testnet\",\"testnet\":true,\"multicall\":\"0x9923589503Fd205feE3d367DDFF2378f0F7dD2d4\",\"rpc\":[\"https://api.s0.b.hmny.io\"],\"ws\":[\"wss://ws.s0.b.hmny.io\"],\"explorer\":\"https://explorer.pops.one\"},\"11297108109\":{\"key\":\"11297108109\",\"name\":\"Palm Mainnet\",\"shortName\":\"Palm\",\"chainId\":11297108109,\"network\":\"mainnet\",\"multicall\":\"0xfFE2FF36c5b8D948f788a34f867784828aa7415D\",\"rpc\":[\"https://palm-mainnet.infura.io/v3/3a961d6501e54add9a41aa53f15de99b\"],\"explorer\":\"https://explorer.palm.io\"}}");

/***/ }),
/* 55 */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function get() {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function get() {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ }),
/* 56 */,
/* 57 */,
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var l = __webpack_require__(30),
    n = 60103,
    p = 60106;

exports.Fragment = 60107;
exports.StrictMode = 60108;
exports.Profiler = 60114;
var q = 60109,
    r = 60110,
    t = 60112;
exports.Suspense = 60113;
var u = 60115,
    v = 60116;

if ("function" === typeof Symbol && Symbol.for) {
  var w = Symbol.for;
  n = w("react.element");
  p = w("react.portal");
  exports.Fragment = w("react.fragment");
  exports.StrictMode = w("react.strict_mode");
  exports.Profiler = w("react.profiler");
  q = w("react.provider");
  r = w("react.context");
  t = w("react.forward_ref");
  exports.Suspense = w("react.suspense");
  u = w("react.memo");
  v = w("react.lazy");
}

var x = "function" === typeof Symbol && Symbol.iterator;

function y(a) {
  if (null === a || "object" !== typeof a) return null;
  a = x && a[x] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

function z(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) {
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  }

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

var A = {
  isMounted: function isMounted() {
    return !1;
  },
  enqueueForceUpdate: function enqueueForceUpdate() {},
  enqueueReplaceState: function enqueueReplaceState() {},
  enqueueSetState: function enqueueSetState() {}
},
    B = {};

function C(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

C.prototype.isReactComponent = {};

C.prototype.setState = function (a, b) {
  if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error(z(85));
  this.updater.enqueueSetState(this, a, b, "setState");
};

C.prototype.forceUpdate = function (a) {
  this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};

function D() {}

D.prototype = C.prototype;

function E(a, b, c) {
  this.props = a;
  this.context = b;
  this.refs = B;
  this.updater = c || A;
}

var F = E.prototype = new D();
F.constructor = E;
l(F, C.prototype);
F.isPureReactComponent = !0;
var G = {
  current: null
},
    H = Object.prototype.hasOwnProperty,
    I = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function J(a, b, c) {
  var e,
      d = {},
      k = null,
      h = null;
  if (null != b) for (e in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b) {
    H.call(b, e) && !I.hasOwnProperty(e) && (d[e] = b[e]);
  }
  var g = arguments.length - 2;
  if (1 === g) d.children = c;else if (1 < g) {
    for (var f = Array(g), m = 0; m < g; m++) {
      f[m] = arguments[m + 2];
    }

    d.children = f;
  }
  if (a && a.defaultProps) for (e in g = a.defaultProps, g) {
    void 0 === d[e] && (d[e] = g[e]);
  }
  return {
    $$typeof: n,
    type: a,
    key: k,
    ref: h,
    props: d,
    _owner: G.current
  };
}

function K(a, b) {
  return {
    $$typeof: n,
    type: a.type,
    key: b,
    ref: a.ref,
    props: a.props,
    _owner: a._owner
  };
}

function L(a) {
  return "object" === typeof a && null !== a && a.$$typeof === n;
}

function escape(a) {
  var b = {
    "=": "=0",
    ":": "=2"
  };
  return "$" + a.replace(/[=:]/g, function (a) {
    return b[a];
  });
}

var M = /\/+/g;

function N(a, b) {
  return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
}

function O(a, b, c, e, d) {
  var k = typeof a;
  if ("undefined" === k || "boolean" === k) a = null;
  var h = !1;
  if (null === a) h = !0;else switch (k) {
    case "string":
    case "number":
      h = !0;
      break;

    case "object":
      switch (a.$$typeof) {
        case n:
        case p:
          h = !0;
      }

  }
  if (h) return h = a, d = d(h), a = "" === e ? "." + N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace(M, "$&/") + "/"), O(d, b, c, "", function (a) {
    return a;
  })) : null != d && (L(d) && (d = K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace(M, "$&/") + "/") + a)), b.push(d)), 1;
  h = 0;
  e = "" === e ? "." : e + ":";
  if (Array.isArray(a)) for (var g = 0; g < a.length; g++) {
    k = a[g];
    var f = e + N(k, g);
    h += O(k, b, c, f, d);
  } else if (f = y(a), "function" === typeof f) for (a = f.call(a), g = 0; !(k = a.next()).done;) {
    k = k.value, f = e + N(k, g++), h += O(k, b, c, f, d);
  } else if ("object" === k) throw b = "" + a, Error(z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
  return h;
}

function P(a, b, c) {
  if (null == a) return a;
  var e = [],
      d = 0;
  O(a, e, "", "", function (a) {
    return b.call(c, a, d++);
  });
  return e;
}

function Q(a) {
  if (-1 === a._status) {
    var b = a._result;
    b = b();
    a._status = 0;
    a._result = b;
    b.then(function (b) {
      0 === a._status && (b = b.default, a._status = 1, a._result = b);
    }, function (b) {
      0 === a._status && (a._status = 2, a._result = b);
    });
  }

  if (1 === a._status) return a._result;
  throw a._result;
}

var R = {
  current: null
};

function S() {
  var a = R.current;
  if (null === a) throw Error(z(321));
  return a;
}

var T = {
  ReactCurrentDispatcher: R,
  ReactCurrentBatchConfig: {
    transition: 0
  },
  ReactCurrentOwner: G,
  IsSomeRendererActing: {
    current: !1
  },
  assign: l
};
exports.Children = {
  map: P,
  forEach: function forEach(a, b, c) {
    P(a, function () {
      b.apply(this, arguments);
    }, c);
  },
  count: function count(a) {
    var b = 0;
    P(a, function () {
      b++;
    });
    return b;
  },
  toArray: function toArray(a) {
    return P(a, function (a) {
      return a;
    }) || [];
  },
  only: function only(a) {
    if (!L(a)) throw Error(z(143));
    return a;
  }
};
exports.Component = C;
exports.PureComponent = E;
exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = T;

exports.cloneElement = function (a, b, c) {
  if (null === a || void 0 === a) throw Error(z(267, a));
  var e = l({}, a.props),
      d = a.key,
      k = a.ref,
      h = a._owner;

  if (null != b) {
    void 0 !== b.ref && (k = b.ref, h = G.current);
    void 0 !== b.key && (d = "" + b.key);
    if (a.type && a.type.defaultProps) var g = a.type.defaultProps;

    for (f in b) {
      H.call(b, f) && !I.hasOwnProperty(f) && (e[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
    }
  }

  var f = arguments.length - 2;
  if (1 === f) e.children = c;else if (1 < f) {
    g = Array(f);

    for (var m = 0; m < f; m++) {
      g[m] = arguments[m + 2];
    }

    e.children = g;
  }
  return {
    $$typeof: n,
    type: a.type,
    key: d,
    ref: k,
    props: e,
    _owner: h
  };
};

exports.createContext = function (a, b) {
  void 0 === b && (b = null);
  a = {
    $$typeof: r,
    _calculateChangedBits: b,
    _currentValue: a,
    _currentValue2: a,
    _threadCount: 0,
    Provider: null,
    Consumer: null
  };
  a.Provider = {
    $$typeof: q,
    _context: a
  };
  return a.Consumer = a;
};

exports.createElement = J;

exports.createFactory = function (a) {
  var b = J.bind(null, a);
  b.type = a;
  return b;
};

exports.createRef = function () {
  return {
    current: null
  };
};

exports.forwardRef = function (a) {
  return {
    $$typeof: t,
    render: a
  };
};

exports.isValidElement = L;

exports.lazy = function (a) {
  return {
    $$typeof: v,
    _payload: {
      _status: -1,
      _result: a
    },
    _init: Q
  };
};

exports.memo = function (a, b) {
  return {
    $$typeof: u,
    type: a,
    compare: void 0 === b ? null : b
  };
};

exports.useCallback = function (a, b) {
  return S().useCallback(a, b);
};

exports.useContext = function (a, b) {
  return S().useContext(a, b);
};

exports.useDebugValue = function () {};

exports.useEffect = function (a, b) {
  return S().useEffect(a, b);
};

exports.useImperativeHandle = function (a, b, c) {
  return S().useImperativeHandle(a, b, c);
};

exports.useLayoutEffect = function (a, b) {
  return S().useLayoutEffect(a, b);
};

exports.useMemo = function (a, b) {
  return S().useMemo(a, b);
};

exports.useReducer = function (a, b, c) {
  return S().useReducer(a, b, c);
};

exports.useRef = function (a) {
  return S().useRef(a);
};

exports.useState = function (a) {
  return S().useState(a);
};

exports.version = "17.0.2";

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/


var aa = __webpack_require__(3),
    m = __webpack_require__(30),
    r = __webpack_require__(60);

function y(a) {
  for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) {
    b += "&args[]=" + encodeURIComponent(arguments[c]);
  }

  return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}

if (!aa) throw Error(y(227));
var ba = new Set(),
    ca = {};

function da(a, b) {
  ea(a, b);
  ea(a + "Capture", b);
}

function ea(a, b) {
  ca[a] = b;

  for (a = 0; a < b.length; a++) {
    ba.add(b[a]);
  }
}

var fa = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement),
    ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    ia = Object.prototype.hasOwnProperty,
    ja = {},
    ka = {};

function la(a) {
  if (ia.call(ka, a)) return !0;
  if (ia.call(ja, a)) return !1;
  if (ha.test(a)) return ka[a] = !0;
  ja[a] = !0;
  return !1;
}

function ma(a, b, c, d) {
  if (null !== c && 0 === c.type) return !1;

  switch (typeof b) {
    case "function":
    case "symbol":
      return !0;

    case "boolean":
      if (d) return !1;
      if (null !== c) return !c.acceptsBooleans;
      a = a.toLowerCase().slice(0, 5);
      return "data-" !== a && "aria-" !== a;

    default:
      return !1;
  }
}

function na(a, b, c, d) {
  if (null === b || "undefined" === typeof b || ma(a, b, c, d)) return !0;
  if (d) return !1;
  if (null !== c) switch (c.type) {
    case 3:
      return !b;

    case 4:
      return !1 === b;

    case 5:
      return isNaN(b);

    case 6:
      return isNaN(b) || 1 > b;
  }
  return !1;
}

function B(a, b, c, d, e, f, g) {
  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
  this.attributeName = d;
  this.attributeNamespace = e;
  this.mustUseProperty = c;
  this.propertyName = a;
  this.type = b;
  this.sanitizeURL = f;
  this.removeEmptyString = g;
}

var D = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function (a) {
  D[a] = new B(a, 0, !1, a, null, !1, !1);
});
[["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function (a) {
  var b = a[0];
  D[b] = new B(b, 1, !1, a[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (a) {
  D[a] = new B(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function (a) {
  D[a] = new B(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function (a) {
  D[a] = new B(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
["checked", "multiple", "muted", "selected"].forEach(function (a) {
  D[a] = new B(a, 3, !0, a, null, !1, !1);
});
["capture", "download"].forEach(function (a) {
  D[a] = new B(a, 4, !1, a, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (a) {
  D[a] = new B(a, 6, !1, a, null, !1, !1);
});
["rowSpan", "start"].forEach(function (a) {
  D[a] = new B(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var oa = /[\-:]([a-z])/g;

function pa(a) {
  return a[1].toUpperCase();
}

"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
["xml:base", "xml:lang", "xml:space"].forEach(function (a) {
  var b = a.replace(oa, pa);
  D[b] = new B(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (a) {
  D[a] = new B(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
D.xlinkHref = new B("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
["src", "href", "action", "formAction"].forEach(function (a) {
  D[a] = new B(a, 1, !1, a.toLowerCase(), null, !0, !0);
});

function qa(a, b, c, d) {
  var e = D.hasOwnProperty(b) ? D[b] : null;
  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
  f || (na(b, c, e, d) && (c = null), d || null === e ? la(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
}

var ra = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    sa = 60103,
    ta = 60106,
    ua = 60107,
    wa = 60108,
    xa = 60114,
    ya = 60109,
    za = 60110,
    Aa = 60112,
    Ba = 60113,
    Ca = 60120,
    Da = 60115,
    Ea = 60116,
    Fa = 60121,
    Ga = 60128,
    Ha = 60129,
    Ia = 60130,
    Ja = 60131;

if ("function" === typeof Symbol && Symbol.for) {
  var E = Symbol.for;
  sa = E("react.element");
  ta = E("react.portal");
  ua = E("react.fragment");
  wa = E("react.strict_mode");
  xa = E("react.profiler");
  ya = E("react.provider");
  za = E("react.context");
  Aa = E("react.forward_ref");
  Ba = E("react.suspense");
  Ca = E("react.suspense_list");
  Da = E("react.memo");
  Ea = E("react.lazy");
  Fa = E("react.block");
  E("react.scope");
  Ga = E("react.opaque.id");
  Ha = E("react.debug_trace_mode");
  Ia = E("react.offscreen");
  Ja = E("react.legacy_hidden");
}

var Ka = "function" === typeof Symbol && Symbol.iterator;

function La(a) {
  if (null === a || "object" !== typeof a) return null;
  a = Ka && a[Ka] || a["@@iterator"];
  return "function" === typeof a ? a : null;
}

var Ma;

function Na(a) {
  if (void 0 === Ma) try {
    throw Error();
  } catch (c) {
    var b = c.stack.trim().match(/\n( *(at )?)/);
    Ma = b && b[1] || "";
  }
  return "\n" + Ma + a;
}

var Oa = !1;

function Pa(a, b) {
  if (!a || Oa) return "";
  Oa = !0;
  var c = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;

  try {
    if (b) {
      if (b = function b() {
        throw Error();
      }, Object.defineProperty(b.prototype, "props", {
        set: function set() {
          throw Error();
        }
      }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b, []);
        } catch (k) {
          var d = k;
        }

        Reflect.construct(a, [], b);
      } else {
        try {
          b.call();
        } catch (k) {
          d = k;
        }

        a.call(b.prototype);
      }
    } else {
      try {
        throw Error();
      } catch (k) {
        d = k;
      }

      a();
    }
  } catch (k) {
    if (k && d && "string" === typeof k.stack) {
      for (var e = k.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];) {
        h--;
      }

      for (; 1 <= g && 0 <= h; g--, h--) {
        if (e[g] !== f[h]) {
          if (1 !== g || 1 !== h) {
            do {
              if (g--, h--, 0 > h || e[g] !== f[h]) return "\n" + e[g].replace(" at new ", " at ");
            } while (1 <= g && 0 <= h);
          }

          break;
        }
      }
    }
  } finally {
    Oa = !1, Error.prepareStackTrace = c;
  }

  return (a = a ? a.displayName || a.name : "") ? Na(a) : "";
}

function Qa(a) {
  switch (a.tag) {
    case 5:
      return Na(a.type);

    case 16:
      return Na("Lazy");

    case 13:
      return Na("Suspense");

    case 19:
      return Na("SuspenseList");

    case 0:
    case 2:
    case 15:
      return a = Pa(a.type, !1), a;

    case 11:
      return a = Pa(a.type.render, !1), a;

    case 22:
      return a = Pa(a.type._render, !1), a;

    case 1:
      return a = Pa(a.type, !0), a;

    default:
      return "";
  }
}

function Ra(a) {
  if (null == a) return null;
  if ("function" === typeof a) return a.displayName || a.name || null;
  if ("string" === typeof a) return a;

  switch (a) {
    case ua:
      return "Fragment";

    case ta:
      return "Portal";

    case xa:
      return "Profiler";

    case wa:
      return "StrictMode";

    case Ba:
      return "Suspense";

    case Ca:
      return "SuspenseList";
  }

  if ("object" === typeof a) switch (a.$$typeof) {
    case za:
      return (a.displayName || "Context") + ".Consumer";

    case ya:
      return (a._context.displayName || "Context") + ".Provider";

    case Aa:
      var b = a.render;
      b = b.displayName || b.name || "";
      return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

    case Da:
      return Ra(a.type);

    case Fa:
      return Ra(a._render);

    case Ea:
      b = a._payload;
      a = a._init;

      try {
        return Ra(a(b));
      } catch (c) {}

  }
  return null;
}

function Sa(a) {
  switch (typeof a) {
    case "boolean":
    case "number":
    case "object":
    case "string":
    case "undefined":
      return a;

    default:
      return "";
  }
}

function Ta(a) {
  var b = a.type;
  return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}

function Ua(a) {
  var b = Ta(a) ? "checked" : "value",
      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
      d = "" + a[b];

  if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
    var e = c.get,
        f = c.set;
    Object.defineProperty(a, b, {
      configurable: !0,
      get: function get() {
        return e.call(this);
      },
      set: function set(a) {
        d = "" + a;
        f.call(this, a);
      }
    });
    Object.defineProperty(a, b, {
      enumerable: c.enumerable
    });
    return {
      getValue: function getValue() {
        return d;
      },
      setValue: function setValue(a) {
        d = "" + a;
      },
      stopTracking: function stopTracking() {
        a._valueTracker = null;
        delete a[b];
      }
    };
  }
}

function Va(a) {
  a._valueTracker || (a._valueTracker = Ua(a));
}

function Wa(a) {
  if (!a) return !1;
  var b = a._valueTracker;
  if (!b) return !0;
  var c = b.getValue();
  var d = "";
  a && (d = Ta(a) ? a.checked ? "true" : "false" : a.value);
  a = d;
  return a !== c ? (b.setValue(a), !0) : !1;
}

function Xa(a) {
  a = a || ("undefined" !== typeof document ? document : void 0);
  if ("undefined" === typeof a) return null;

  try {
    return a.activeElement || a.body;
  } catch (b) {
    return a.body;
  }
}

function Ya(a, b) {
  var c = b.checked;
  return m({}, b, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: null != c ? c : a._wrapperState.initialChecked
  });
}

function Za(a, b) {
  var c = null == b.defaultValue ? "" : b.defaultValue,
      d = null != b.checked ? b.checked : b.defaultChecked;
  c = Sa(null != b.value ? b.value : c);
  a._wrapperState = {
    initialChecked: d,
    initialValue: c,
    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
  };
}

function $a(a, b) {
  b = b.checked;
  null != b && qa(a, "checked", b, !1);
}

function ab(a, b) {
  $a(a, b);
  var c = Sa(b.value),
      d = b.type;
  if (null != c) {
    if ("number" === d) {
      if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
    } else a.value !== "" + c && (a.value = "" + c);
  } else if ("submit" === d || "reset" === d) {
    a.removeAttribute("value");
    return;
  }
  b.hasOwnProperty("value") ? bb(a, b.type, c) : b.hasOwnProperty("defaultValue") && bb(a, b.type, Sa(b.defaultValue));
  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}

function cb(a, b, c) {
  if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
    var d = b.type;
    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
    b = "" + a._wrapperState.initialValue;
    c || b === a.value || (a.value = b);
    a.defaultValue = b;
  }

  c = a.name;
  "" !== c && (a.name = "");
  a.defaultChecked = !!a._wrapperState.initialChecked;
  "" !== c && (a.name = c);
}

function bb(a, b, c) {
  if ("number" !== b || Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}

function db(a) {
  var b = "";
  aa.Children.forEach(a, function (a) {
    null != a && (b += a);
  });
  return b;
}

function eb(a, b) {
  a = m({
    children: void 0
  }, b);
  if (b = db(b.children)) a.children = b;
  return a;
}

function fb(a, b, c, d) {
  a = a.options;

  if (b) {
    b = {};

    for (var e = 0; e < c.length; e++) {
      b["$" + c[e]] = !0;
    }

    for (c = 0; c < a.length; c++) {
      e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    }
  } else {
    c = "" + Sa(c);
    b = null;

    for (e = 0; e < a.length; e++) {
      if (a[e].value === c) {
        a[e].selected = !0;
        d && (a[e].defaultSelected = !0);
        return;
      }

      null !== b || a[e].disabled || (b = a[e]);
    }

    null !== b && (b.selected = !0);
  }
}

function gb(a, b) {
  if (null != b.dangerouslySetInnerHTML) throw Error(y(91));
  return m({}, b, {
    value: void 0,
    defaultValue: void 0,
    children: "" + a._wrapperState.initialValue
  });
}

function hb(a, b) {
  var c = b.value;

  if (null == c) {
    c = b.children;
    b = b.defaultValue;

    if (null != c) {
      if (null != b) throw Error(y(92));

      if (Array.isArray(c)) {
        if (!(1 >= c.length)) throw Error(y(93));
        c = c[0];
      }

      b = c;
    }

    null == b && (b = "");
    c = b;
  }

  a._wrapperState = {
    initialValue: Sa(c)
  };
}

function ib(a, b) {
  var c = Sa(b.value),
      d = Sa(b.defaultValue);
  null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
  null != d && (a.defaultValue = "" + d);
}

function jb(a) {
  var b = a.textContent;
  b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}

var kb = {
  html: "http://www.w3.org/1999/xhtml",
  mathml: "http://www.w3.org/1998/Math/MathML",
  svg: "http://www.w3.org/2000/svg"
};

function lb(a) {
  switch (a) {
    case "svg":
      return "http://www.w3.org/2000/svg";

    case "math":
      return "http://www.w3.org/1998/Math/MathML";

    default:
      return "http://www.w3.org/1999/xhtml";
  }
}

function mb(a, b) {
  return null == a || "http://www.w3.org/1999/xhtml" === a ? lb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}

var nb,
    ob = function (a) {
  return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
    MSApp.execUnsafeLocalFunction(function () {
      return a(b, c, d, e);
    });
  } : a;
}(function (a, b) {
  if (a.namespaceURI !== kb.svg || "innerHTML" in a) a.innerHTML = b;else {
    nb = nb || document.createElement("div");
    nb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";

    for (b = nb.firstChild; a.firstChild;) {
      a.removeChild(a.firstChild);
    }

    for (; b.firstChild;) {
      a.appendChild(b.firstChild);
    }
  }
});

function pb(a, b) {
  if (b) {
    var c = a.firstChild;

    if (c && c === a.lastChild && 3 === c.nodeType) {
      c.nodeValue = b;
      return;
    }
  }

  a.textContent = b;
}

var qb = {
  animationIterationCount: !0,
  borderImageOutset: !0,
  borderImageSlice: !0,
  borderImageWidth: !0,
  boxFlex: !0,
  boxFlexGroup: !0,
  boxOrdinalGroup: !0,
  columnCount: !0,
  columns: !0,
  flex: !0,
  flexGrow: !0,
  flexPositive: !0,
  flexShrink: !0,
  flexNegative: !0,
  flexOrder: !0,
  gridArea: !0,
  gridRow: !0,
  gridRowEnd: !0,
  gridRowSpan: !0,
  gridRowStart: !0,
  gridColumn: !0,
  gridColumnEnd: !0,
  gridColumnSpan: !0,
  gridColumnStart: !0,
  fontWeight: !0,
  lineClamp: !0,
  lineHeight: !0,
  opacity: !0,
  order: !0,
  orphans: !0,
  tabSize: !0,
  widows: !0,
  zIndex: !0,
  zoom: !0,
  fillOpacity: !0,
  floodOpacity: !0,
  stopOpacity: !0,
  strokeDasharray: !0,
  strokeDashoffset: !0,
  strokeMiterlimit: !0,
  strokeOpacity: !0,
  strokeWidth: !0
},
    rb = ["Webkit", "ms", "Moz", "O"];
Object.keys(qb).forEach(function (a) {
  rb.forEach(function (b) {
    b = b + a.charAt(0).toUpperCase() + a.substring(1);
    qb[b] = qb[a];
  });
});

function sb(a, b, c) {
  return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || qb.hasOwnProperty(a) && qb[a] ? ("" + b).trim() : b + "px";
}

function tb(a, b) {
  a = a.style;

  for (var c in b) {
    if (b.hasOwnProperty(c)) {
      var d = 0 === c.indexOf("--"),
          e = sb(c, b[c], d);
      "float" === c && (c = "cssFloat");
      d ? a.setProperty(c, e) : a[c] = e;
    }
  }
}

var ub = m({
  menuitem: !0
}, {
  area: !0,
  base: !0,
  br: !0,
  col: !0,
  embed: !0,
  hr: !0,
  img: !0,
  input: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
});

function vb(a, b) {
  if (b) {
    if (ub[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(y(137, a));

    if (null != b.dangerouslySetInnerHTML) {
      if (null != b.children) throw Error(y(60));
      if (!("object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML)) throw Error(y(61));
    }

    if (null != b.style && "object" !== typeof b.style) throw Error(y(62));
  }
}

function wb(a, b) {
  if (-1 === a.indexOf("-")) return "string" === typeof b.is;

  switch (a) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;

    default:
      return !0;
  }
}

function xb(a) {
  a = a.target || a.srcElement || window;
  a.correspondingUseElement && (a = a.correspondingUseElement);
  return 3 === a.nodeType ? a.parentNode : a;
}

var yb = null,
    zb = null,
    Ab = null;

function Bb(a) {
  if (a = Cb(a)) {
    if ("function" !== typeof yb) throw Error(y(280));
    var b = a.stateNode;
    b && (b = Db(b), yb(a.stateNode, a.type, b));
  }
}

function Eb(a) {
  zb ? Ab ? Ab.push(a) : Ab = [a] : zb = a;
}

function Fb() {
  if (zb) {
    var a = zb,
        b = Ab;
    Ab = zb = null;
    Bb(a);
    if (b) for (a = 0; a < b.length; a++) {
      Bb(b[a]);
    }
  }
}

function Gb(a, b) {
  return a(b);
}

function Hb(a, b, c, d, e) {
  return a(b, c, d, e);
}

function Ib() {}

var Jb = Gb,
    Kb = !1,
    Lb = !1;

function Mb() {
  if (null !== zb || null !== Ab) Ib(), Fb();
}

function Nb(a, b, c) {
  if (Lb) return a(b, c);
  Lb = !0;

  try {
    return Jb(a, b, c);
  } finally {
    Lb = !1, Mb();
  }
}

function Ob(a, b) {
  var c = a.stateNode;
  if (null === c) return null;
  var d = Db(c);
  if (null === d) return null;
  c = d[b];

  a: switch (b) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
      a = !d;
      break a;

    default:
      a = !1;
  }

  if (a) return null;
  if (c && "function" !== typeof c) throw Error(y(231, b, typeof c));
  return c;
}

var Pb = !1;
if (fa) try {
  var Qb = {};
  Object.defineProperty(Qb, "passive", {
    get: function get() {
      Pb = !0;
    }
  });
  window.addEventListener("test", Qb, Qb);
  window.removeEventListener("test", Qb, Qb);
} catch (a) {
  Pb = !1;
}

function Rb(a, b, c, d, e, f, g, h, k) {
  var l = Array.prototype.slice.call(arguments, 3);

  try {
    b.apply(c, l);
  } catch (n) {
    this.onError(n);
  }
}

var Sb = !1,
    Tb = null,
    Ub = !1,
    Vb = null,
    Wb = {
  onError: function onError(a) {
    Sb = !0;
    Tb = a;
  }
};

function Xb(a, b, c, d, e, f, g, h, k) {
  Sb = !1;
  Tb = null;
  Rb.apply(Wb, arguments);
}

function Yb(a, b, c, d, e, f, g, h, k) {
  Xb.apply(this, arguments);

  if (Sb) {
    if (Sb) {
      var l = Tb;
      Sb = !1;
      Tb = null;
    } else throw Error(y(198));

    Ub || (Ub = !0, Vb = l);
  }
}

function Zb(a) {
  var b = a,
      c = a;
  if (a.alternate) for (; b.return;) {
    b = b.return;
  } else {
    a = b;

    do {
      b = a, 0 !== (b.flags & 1026) && (c = b.return), a = b.return;
    } while (a);
  }
  return 3 === b.tag ? c : null;
}

function $b(a) {
  if (13 === a.tag) {
    var b = a.memoizedState;
    null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
    if (null !== b) return b.dehydrated;
  }

  return null;
}

function ac(a) {
  if (Zb(a) !== a) throw Error(y(188));
}

function bc(a) {
  var b = a.alternate;

  if (!b) {
    b = Zb(a);
    if (null === b) throw Error(y(188));
    return b !== a ? null : a;
  }

  for (var c = a, d = b;;) {
    var e = c.return;
    if (null === e) break;
    var f = e.alternate;

    if (null === f) {
      d = e.return;

      if (null !== d) {
        c = d;
        continue;
      }

      break;
    }

    if (e.child === f.child) {
      for (f = e.child; f;) {
        if (f === c) return ac(e), a;
        if (f === d) return ac(e), b;
        f = f.sibling;
      }

      throw Error(y(188));
    }

    if (c.return !== d.return) c = e, d = f;else {
      for (var g = !1, h = e.child; h;) {
        if (h === c) {
          g = !0;
          c = e;
          d = f;
          break;
        }

        if (h === d) {
          g = !0;
          d = e;
          c = f;
          break;
        }

        h = h.sibling;
      }

      if (!g) {
        for (h = f.child; h;) {
          if (h === c) {
            g = !0;
            c = f;
            d = e;
            break;
          }

          if (h === d) {
            g = !0;
            d = f;
            c = e;
            break;
          }

          h = h.sibling;
        }

        if (!g) throw Error(y(189));
      }
    }
    if (c.alternate !== d) throw Error(y(190));
  }

  if (3 !== c.tag) throw Error(y(188));
  return c.stateNode.current === c ? a : b;
}

function cc(a) {
  a = bc(a);
  if (!a) return null;

  for (var b = a;;) {
    if (5 === b.tag || 6 === b.tag) return b;
    if (b.child) b.child.return = b, b = b.child;else {
      if (b === a) break;

      for (; !b.sibling;) {
        if (!b.return || b.return === a) return null;
        b = b.return;
      }

      b.sibling.return = b.return;
      b = b.sibling;
    }
  }

  return null;
}

function dc(a, b) {
  for (var c = a.alternate; null !== b;) {
    if (b === a || b === c) return !0;
    b = b.return;
  }

  return !1;
}

var ec,
    fc,
    gc,
    hc,
    ic = !1,
    jc = [],
    kc = null,
    lc = null,
    mc = null,
    nc = new Map(),
    oc = new Map(),
    pc = [],
    qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

function rc(a, b, c, d, e) {
  return {
    blockedOn: a,
    domEventName: b,
    eventSystemFlags: c | 16,
    nativeEvent: e,
    targetContainers: [d]
  };
}

function sc(a, b) {
  switch (a) {
    case "focusin":
    case "focusout":
      kc = null;
      break;

    case "dragenter":
    case "dragleave":
      lc = null;
      break;

    case "mouseover":
    case "mouseout":
      mc = null;
      break;

    case "pointerover":
    case "pointerout":
      nc.delete(b.pointerId);
      break;

    case "gotpointercapture":
    case "lostpointercapture":
      oc.delete(b.pointerId);
  }
}

function tc(a, b, c, d, e, f) {
  if (null === a || a.nativeEvent !== f) return a = rc(b, c, d, e, f), null !== b && (b = Cb(b), null !== b && fc(b)), a;
  a.eventSystemFlags |= d;
  b = a.targetContainers;
  null !== e && -1 === b.indexOf(e) && b.push(e);
  return a;
}

function uc(a, b, c, d, e) {
  switch (b) {
    case "focusin":
      return kc = tc(kc, a, b, c, d, e), !0;

    case "dragenter":
      return lc = tc(lc, a, b, c, d, e), !0;

    case "mouseover":
      return mc = tc(mc, a, b, c, d, e), !0;

    case "pointerover":
      var f = e.pointerId;
      nc.set(f, tc(nc.get(f) || null, a, b, c, d, e));
      return !0;

    case "gotpointercapture":
      return f = e.pointerId, oc.set(f, tc(oc.get(f) || null, a, b, c, d, e)), !0;
  }

  return !1;
}

function vc(a) {
  var b = wc(a.target);

  if (null !== b) {
    var c = Zb(b);
    if (null !== c) if (b = c.tag, 13 === b) {
      if (b = $b(c), null !== b) {
        a.blockedOn = b;
        hc(a.lanePriority, function () {
          r.unstable_runWithPriority(a.priority, function () {
            gc(c);
          });
        });
        return;
      }
    } else if (3 === b && c.stateNode.hydrate) {
      a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
      return;
    }
  }

  a.blockedOn = null;
}

function xc(a) {
  if (null !== a.blockedOn) return !1;

  for (var b = a.targetContainers; 0 < b.length;) {
    var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
    if (null !== c) return b = Cb(c), null !== b && fc(b), a.blockedOn = c, !1;
    b.shift();
  }

  return !0;
}

function zc(a, b, c) {
  xc(a) && c.delete(b);
}

function Ac() {
  for (ic = !1; 0 < jc.length;) {
    var a = jc[0];

    if (null !== a.blockedOn) {
      a = Cb(a.blockedOn);
      null !== a && ec(a);
      break;
    }

    for (var b = a.targetContainers; 0 < b.length;) {
      var c = yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);

      if (null !== c) {
        a.blockedOn = c;
        break;
      }

      b.shift();
    }

    null === a.blockedOn && jc.shift();
  }

  null !== kc && xc(kc) && (kc = null);
  null !== lc && xc(lc) && (lc = null);
  null !== mc && xc(mc) && (mc = null);
  nc.forEach(zc);
  oc.forEach(zc);
}

function Bc(a, b) {
  a.blockedOn === b && (a.blockedOn = null, ic || (ic = !0, r.unstable_scheduleCallback(r.unstable_NormalPriority, Ac)));
}

function Cc(a) {
  function b(b) {
    return Bc(b, a);
  }

  if (0 < jc.length) {
    Bc(jc[0], a);

    for (var c = 1; c < jc.length; c++) {
      var d = jc[c];
      d.blockedOn === a && (d.blockedOn = null);
    }
  }

  null !== kc && Bc(kc, a);
  null !== lc && Bc(lc, a);
  null !== mc && Bc(mc, a);
  nc.forEach(b);
  oc.forEach(b);

  for (c = 0; c < pc.length; c++) {
    d = pc[c], d.blockedOn === a && (d.blockedOn = null);
  }

  for (; 0 < pc.length && (c = pc[0], null === c.blockedOn);) {
    vc(c), null === c.blockedOn && pc.shift();
  }
}

function Dc(a, b) {
  var c = {};
  c[a.toLowerCase()] = b.toLowerCase();
  c["Webkit" + a] = "webkit" + b;
  c["Moz" + a] = "moz" + b;
  return c;
}

var Ec = {
  animationend: Dc("Animation", "AnimationEnd"),
  animationiteration: Dc("Animation", "AnimationIteration"),
  animationstart: Dc("Animation", "AnimationStart"),
  transitionend: Dc("Transition", "TransitionEnd")
},
    Fc = {},
    Gc = {};
fa && (Gc = document.createElement("div").style, "AnimationEvent" in window || (delete Ec.animationend.animation, delete Ec.animationiteration.animation, delete Ec.animationstart.animation), "TransitionEvent" in window || delete Ec.transitionend.transition);

function Hc(a) {
  if (Fc[a]) return Fc[a];
  if (!Ec[a]) return a;
  var b = Ec[a],
      c;

  for (c in b) {
    if (b.hasOwnProperty(c) && c in Gc) return Fc[a] = b[c];
  }

  return a;
}

var Ic = Hc("animationend"),
    Jc = Hc("animationiteration"),
    Kc = Hc("animationstart"),
    Lc = Hc("transitionend"),
    Mc = new Map(),
    Nc = new Map(),
    Oc = ["abort", "abort", Ic, "animationEnd", Jc, "animationIteration", Kc, "animationStart", "canplay", "canPlay", "canplaythrough", "canPlayThrough", "durationchange", "durationChange", "emptied", "emptied", "encrypted", "encrypted", "ended", "ended", "error", "error", "gotpointercapture", "gotPointerCapture", "load", "load", "loadeddata", "loadedData", "loadedmetadata", "loadedMetadata", "loadstart", "loadStart", "lostpointercapture", "lostPointerCapture", "playing", "playing", "progress", "progress", "seeking", "seeking", "stalled", "stalled", "suspend", "suspend", "timeupdate", "timeUpdate", Lc, "transitionEnd", "waiting", "waiting"];

function Pc(a, b) {
  for (var c = 0; c < a.length; c += 2) {
    var d = a[c],
        e = a[c + 1];
    e = "on" + (e[0].toUpperCase() + e.slice(1));
    Nc.set(d, b);
    Mc.set(d, e);
    da(e, [d]);
  }
}

var Qc = r.unstable_now;
Qc();
var F = 8;

function Rc(a) {
  if (0 !== (1 & a)) return F = 15, 1;
  if (0 !== (2 & a)) return F = 14, 2;
  if (0 !== (4 & a)) return F = 13, 4;
  var b = 24 & a;
  if (0 !== b) return F = 12, b;
  if (0 !== (a & 32)) return F = 11, 32;
  b = 192 & a;
  if (0 !== b) return F = 10, b;
  if (0 !== (a & 256)) return F = 9, 256;
  b = 3584 & a;
  if (0 !== b) return F = 8, b;
  if (0 !== (a & 4096)) return F = 7, 4096;
  b = 4186112 & a;
  if (0 !== b) return F = 6, b;
  b = 62914560 & a;
  if (0 !== b) return F = 5, b;
  if (a & 67108864) return F = 4, 67108864;
  if (0 !== (a & 134217728)) return F = 3, 134217728;
  b = 805306368 & a;
  if (0 !== b) return F = 2, b;
  if (0 !== (1073741824 & a)) return F = 1, 1073741824;
  F = 8;
  return a;
}

function Sc(a) {
  switch (a) {
    case 99:
      return 15;

    case 98:
      return 10;

    case 97:
    case 96:
      return 8;

    case 95:
      return 2;

    default:
      return 0;
  }
}

function Tc(a) {
  switch (a) {
    case 15:
    case 14:
      return 99;

    case 13:
    case 12:
    case 11:
    case 10:
      return 98;

    case 9:
    case 8:
    case 7:
    case 6:
    case 4:
    case 5:
      return 97;

    case 3:
    case 2:
    case 1:
      return 95;

    case 0:
      return 90;

    default:
      throw Error(y(358, a));
  }
}

function Uc(a, b) {
  var c = a.pendingLanes;
  if (0 === c) return F = 0;
  var d = 0,
      e = 0,
      f = a.expiredLanes,
      g = a.suspendedLanes,
      h = a.pingedLanes;
  if (0 !== f) d = f, e = F = 15;else if (f = c & 134217727, 0 !== f) {
    var k = f & ~g;
    0 !== k ? (d = Rc(k), e = F) : (h &= f, 0 !== h && (d = Rc(h), e = F));
  } else f = c & ~g, 0 !== f ? (d = Rc(f), e = F) : 0 !== h && (d = Rc(h), e = F);
  if (0 === d) return 0;
  d = 31 - Vc(d);
  d = c & ((0 > d ? 0 : 1 << d) << 1) - 1;

  if (0 !== b && b !== d && 0 === (b & g)) {
    Rc(b);
    if (e <= F) return b;
    F = e;
  }

  b = a.entangledLanes;
  if (0 !== b) for (a = a.entanglements, b &= d; 0 < b;) {
    c = 31 - Vc(b), e = 1 << c, d |= a[c], b &= ~e;
  }
  return d;
}

function Wc(a) {
  a = a.pendingLanes & -1073741825;
  return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}

function Xc(a, b) {
  switch (a) {
    case 15:
      return 1;

    case 14:
      return 2;

    case 12:
      return a = Yc(24 & ~b), 0 === a ? Xc(10, b) : a;

    case 10:
      return a = Yc(192 & ~b), 0 === a ? Xc(8, b) : a;

    case 8:
      return a = Yc(3584 & ~b), 0 === a && (a = Yc(4186112 & ~b), 0 === a && (a = 512)), a;

    case 2:
      return b = Yc(805306368 & ~b), 0 === b && (b = 268435456), b;
  }

  throw Error(y(358, a));
}

function Yc(a) {
  return a & -a;
}

function Zc(a) {
  for (var b = [], c = 0; 31 > c; c++) {
    b.push(a);
  }

  return b;
}

function $c(a, b, c) {
  a.pendingLanes |= b;
  var d = b - 1;
  a.suspendedLanes &= d;
  a.pingedLanes &= d;
  a = a.eventTimes;
  b = 31 - Vc(b);
  a[b] = c;
}

var Vc = Math.clz32 ? Math.clz32 : ad,
    bd = Math.log,
    cd = Math.LN2;

function ad(a) {
  return 0 === a ? 32 : 31 - (bd(a) / cd | 0) | 0;
}

var dd = r.unstable_UserBlockingPriority,
    ed = r.unstable_runWithPriority,
    fd = !0;

function gd(a, b, c, d) {
  Kb || Ib();
  var e = hd,
      f = Kb;
  Kb = !0;

  try {
    Hb(e, a, b, c, d);
  } finally {
    (Kb = f) || Mb();
  }
}

function id(a, b, c, d) {
  ed(dd, hd.bind(null, a, b, c, d));
}

function hd(a, b, c, d) {
  if (fd) {
    var e;
    if ((e = 0 === (b & 4)) && 0 < jc.length && -1 < qc.indexOf(a)) a = rc(null, a, b, c, d), jc.push(a);else {
      var f = yc(a, b, c, d);
      if (null === f) e && sc(a, d);else {
        if (e) {
          if (-1 < qc.indexOf(a)) {
            a = rc(f, a, b, c, d);
            jc.push(a);
            return;
          }

          if (uc(f, a, b, c, d)) return;
          sc(a, d);
        }

        jd(a, b, d, null, c);
      }
    }
  }
}

function yc(a, b, c, d) {
  var e = xb(d);
  e = wc(e);

  if (null !== e) {
    var f = Zb(e);
    if (null === f) e = null;else {
      var g = f.tag;

      if (13 === g) {
        e = $b(f);
        if (null !== e) return e;
        e = null;
      } else if (3 === g) {
        if (f.stateNode.hydrate) return 3 === f.tag ? f.stateNode.containerInfo : null;
        e = null;
      } else f !== e && (e = null);
    }
  }

  jd(a, b, d, e, c);
  return null;
}

var kd = null,
    ld = null,
    md = null;

function nd() {
  if (md) return md;
  var a,
      b = ld,
      c = b.length,
      d,
      e = "value" in kd ? kd.value : kd.textContent,
      f = e.length;

  for (a = 0; a < c && b[a] === e[a]; a++) {
    ;
  }

  var g = c - a;

  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {
    ;
  }

  return md = e.slice(a, 1 < d ? 1 - d : void 0);
}

function od(a) {
  var b = a.keyCode;
  "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
  10 === a && (a = 13);
  return 32 <= a || 13 === a ? a : 0;
}

function pd() {
  return !0;
}

function qd() {
  return !1;
}

function rd(a) {
  function b(b, d, e, f, g) {
    this._reactName = b;
    this._targetInst = e;
    this.type = d;
    this.nativeEvent = f;
    this.target = g;
    this.currentTarget = null;

    for (var c in a) {
      a.hasOwnProperty(c) && (b = a[c], this[c] = b ? b(f) : f[c]);
    }

    this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd;
    this.isPropagationStopped = qd;
    return this;
  }

  m(b.prototype, {
    preventDefault: function preventDefault() {
      this.defaultPrevented = !0;
      var a = this.nativeEvent;
      a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = pd);
    },
    stopPropagation: function stopPropagation() {
      var a = this.nativeEvent;
      a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = pd);
    },
    persist: function persist() {},
    isPersistent: pd
  });
  return b;
}

var sd = {
  eventPhase: 0,
  bubbles: 0,
  cancelable: 0,
  timeStamp: function timeStamp(a) {
    return a.timeStamp || Date.now();
  },
  defaultPrevented: 0,
  isTrusted: 0
},
    td = rd(sd),
    ud = m({}, sd, {
  view: 0,
  detail: 0
}),
    vd = rd(ud),
    wd,
    xd,
    yd,
    Ad = m({}, ud, {
  screenX: 0,
  screenY: 0,
  clientX: 0,
  clientY: 0,
  pageX: 0,
  pageY: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  getModifierState: zd,
  button: 0,
  buttons: 0,
  relatedTarget: function relatedTarget(a) {
    return void 0 === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
  },
  movementX: function movementX(a) {
    if ("movementX" in a) return a.movementX;
    a !== yd && (yd && "mousemove" === a.type ? (wd = a.screenX - yd.screenX, xd = a.screenY - yd.screenY) : xd = wd = 0, yd = a);
    return wd;
  },
  movementY: function movementY(a) {
    return "movementY" in a ? a.movementY : xd;
  }
}),
    Bd = rd(Ad),
    Cd = m({}, Ad, {
  dataTransfer: 0
}),
    Dd = rd(Cd),
    Ed = m({}, ud, {
  relatedTarget: 0
}),
    Fd = rd(Ed),
    Gd = m({}, sd, {
  animationName: 0,
  elapsedTime: 0,
  pseudoElement: 0
}),
    Hd = rd(Gd),
    Id = m({}, sd, {
  clipboardData: function clipboardData(a) {
    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
  }
}),
    Jd = rd(Id),
    Kd = m({}, sd, {
  data: 0
}),
    Ld = rd(Kd),
    Md = {
  Esc: "Escape",
  Spacebar: " ",
  Left: "ArrowLeft",
  Up: "ArrowUp",
  Right: "ArrowRight",
  Down: "ArrowDown",
  Del: "Delete",
  Win: "OS",
  Menu: "ContextMenu",
  Apps: "ContextMenu",
  Scroll: "ScrollLock",
  MozPrintableKey: "Unidentified"
},
    Nd = {
  8: "Backspace",
  9: "Tab",
  12: "Clear",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  19: "Pause",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  45: "Insert",
  46: "Delete",
  112: "F1",
  113: "F2",
  114: "F3",
  115: "F4",
  116: "F5",
  117: "F6",
  118: "F7",
  119: "F8",
  120: "F9",
  121: "F10",
  122: "F11",
  123: "F12",
  144: "NumLock",
  145: "ScrollLock",
  224: "Meta"
},
    Od = {
  Alt: "altKey",
  Control: "ctrlKey",
  Meta: "metaKey",
  Shift: "shiftKey"
};

function Pd(a) {
  var b = this.nativeEvent;
  return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1;
}

function zd() {
  return Pd;
}

var Qd = m({}, ud, {
  key: function key(a) {
    if (a.key) {
      var b = Md[a.key] || a.key;
      if ("Unidentified" !== b) return b;
    }

    return "keypress" === a.type ? (a = od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? Nd[a.keyCode] || "Unidentified" : "";
  },
  code: 0,
  location: 0,
  ctrlKey: 0,
  shiftKey: 0,
  altKey: 0,
  metaKey: 0,
  repeat: 0,
  locale: 0,
  getModifierState: zd,
  charCode: function charCode(a) {
    return "keypress" === a.type ? od(a) : 0;
  },
  keyCode: function keyCode(a) {
    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  },
  which: function which(a) {
    return "keypress" === a.type ? od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
  }
}),
    Rd = rd(Qd),
    Sd = m({}, Ad, {
  pointerId: 0,
  width: 0,
  height: 0,
  pressure: 0,
  tangentialPressure: 0,
  tiltX: 0,
  tiltY: 0,
  twist: 0,
  pointerType: 0,
  isPrimary: 0
}),
    Td = rd(Sd),
    Ud = m({}, ud, {
  touches: 0,
  targetTouches: 0,
  changedTouches: 0,
  altKey: 0,
  metaKey: 0,
  ctrlKey: 0,
  shiftKey: 0,
  getModifierState: zd
}),
    Vd = rd(Ud),
    Wd = m({}, sd, {
  propertyName: 0,
  elapsedTime: 0,
  pseudoElement: 0
}),
    Xd = rd(Wd),
    Yd = m({}, Ad, {
  deltaX: function deltaX(a) {
    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
  },
  deltaY: function deltaY(a) {
    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
  },
  deltaZ: 0,
  deltaMode: 0
}),
    Zd = rd(Yd),
    $d = [9, 13, 27, 32],
    ae = fa && "CompositionEvent" in window,
    be = null;
fa && "documentMode" in document && (be = document.documentMode);
var ce = fa && "TextEvent" in window && !be,
    de = fa && (!ae || be && 8 < be && 11 >= be),
    ee = String.fromCharCode(32),
    fe = !1;

function ge(a, b) {
  switch (a) {
    case "keyup":
      return -1 !== $d.indexOf(b.keyCode);

    case "keydown":
      return 229 !== b.keyCode;

    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;

    default:
      return !1;
  }
}

function he(a) {
  a = a.detail;
  return "object" === typeof a && "data" in a ? a.data : null;
}

var ie = !1;

function je(a, b) {
  switch (a) {
    case "compositionend":
      return he(b);

    case "keypress":
      if (32 !== b.which) return null;
      fe = !0;
      return ee;

    case "textInput":
      return a = b.data, a === ee && fe ? null : a;

    default:
      return null;
  }
}

function ke(a, b) {
  if (ie) return "compositionend" === a || !ae && ge(a, b) ? (a = nd(), md = ld = kd = null, ie = !1, a) : null;

  switch (a) {
    case "paste":
      return null;

    case "keypress":
      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
        if (b.char && 1 < b.char.length) return b.char;
        if (b.which) return String.fromCharCode(b.which);
      }

      return null;

    case "compositionend":
      return de && "ko" !== b.locale ? null : b.data;

    default:
      return null;
  }
}

var le = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0
};

function me(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return "input" === b ? !!le[a.type] : "textarea" === b ? !0 : !1;
}

function ne(a, b, c, d) {
  Eb(d);
  b = oe(b, "onChange");
  0 < b.length && (c = new td("onChange", "change", null, c, d), a.push({
    event: c,
    listeners: b
  }));
}

var pe = null,
    qe = null;

function re(a) {
  se(a, 0);
}

function te(a) {
  var b = ue(a);
  if (Wa(b)) return a;
}

function ve(a, b) {
  if ("change" === a) return b;
}

var we = !1;

if (fa) {
  var xe;

  if (fa) {
    var ye = ("oninput" in document);

    if (!ye) {
      var ze = document.createElement("div");
      ze.setAttribute("oninput", "return;");
      ye = "function" === typeof ze.oninput;
    }

    xe = ye;
  } else xe = !1;

  we = xe && (!document.documentMode || 9 < document.documentMode);
}

function Ae() {
  pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
}

function Be(a) {
  if ("value" === a.propertyName && te(qe)) {
    var b = [];
    ne(b, qe, a, xb(a));
    a = re;
    if (Kb) a(b);else {
      Kb = !0;

      try {
        Gb(a, b);
      } finally {
        Kb = !1, Mb();
      }
    }
  }
}

function Ce(a, b, c) {
  "focusin" === a ? (Ae(), pe = b, qe = c, pe.attachEvent("onpropertychange", Be)) : "focusout" === a && Ae();
}

function De(a) {
  if ("selectionchange" === a || "keyup" === a || "keydown" === a) return te(qe);
}

function Ee(a, b) {
  if ("click" === a) return te(b);
}

function Fe(a, b) {
  if ("input" === a || "change" === a) return te(b);
}

function Ge(a, b) {
  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}

var He = "function" === typeof Object.is ? Object.is : Ge,
    Ie = Object.prototype.hasOwnProperty;

function Je(a, b) {
  if (He(a, b)) return !0;
  if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
  var c = Object.keys(a),
      d = Object.keys(b);
  if (c.length !== d.length) return !1;

  for (d = 0; d < c.length; d++) {
    if (!Ie.call(b, c[d]) || !He(a[c[d]], b[c[d]])) return !1;
  }

  return !0;
}

function Ke(a) {
  for (; a && a.firstChild;) {
    a = a.firstChild;
  }

  return a;
}

function Le(a, b) {
  var c = Ke(a);
  a = 0;

  for (var d; c;) {
    if (3 === c.nodeType) {
      d = a + c.textContent.length;
      if (a <= b && d >= b) return {
        node: c,
        offset: b - a
      };
      a = d;
    }

    a: {
      for (; c;) {
        if (c.nextSibling) {
          c = c.nextSibling;
          break a;
        }

        c = c.parentNode;
      }

      c = void 0;
    }

    c = Ke(c);
  }
}

function Me(a, b) {
  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Me(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}

function Ne() {
  for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement;) {
    try {
      var c = "string" === typeof b.contentWindow.location.href;
    } catch (d) {
      c = !1;
    }

    if (c) a = b.contentWindow;else break;
    b = Xa(a.document);
  }

  return b;
}

function Oe(a) {
  var b = a && a.nodeName && a.nodeName.toLowerCase();
  return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}

var Pe = fa && "documentMode" in document && 11 >= document.documentMode,
    Qe = null,
    Re = null,
    Se = null,
    Te = !1;

function Ue(a, b, c) {
  var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
  Te || null == Qe || Qe !== Xa(d) || (d = Qe, "selectionStart" in d && Oe(d) ? d = {
    start: d.selectionStart,
    end: d.selectionEnd
  } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
    anchorNode: d.anchorNode,
    anchorOffset: d.anchorOffset,
    focusNode: d.focusNode,
    focusOffset: d.focusOffset
  }), Se && Je(Se, d) || (Se = d, d = oe(Re, "onSelect"), 0 < d.length && (b = new td("onSelect", "select", null, b, c), a.push({
    event: b,
    listeners: d
  }), b.target = Qe)));
}

Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
Pc(Oc, 2);

for (var Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), We = 0; We < Ve.length; We++) {
  Nc.set(Ve[We], 0);
}

ea("onMouseEnter", ["mouseout", "mouseover"]);
ea("onMouseLeave", ["mouseout", "mouseover"]);
ea("onPointerEnter", ["pointerout", "pointerover"]);
ea("onPointerLeave", ["pointerout", "pointerover"]);
da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
da("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
    Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat(Xe));

function Ze(a, b, c) {
  var d = a.type || "unknown-event";
  a.currentTarget = c;
  Yb(d, b, void 0, a);
  a.currentTarget = null;
}

function se(a, b) {
  b = 0 !== (b & 4);

  for (var c = 0; c < a.length; c++) {
    var d = a[c],
        e = d.event;
    d = d.listeners;

    a: {
      var f = void 0;
      if (b) for (var g = d.length - 1; 0 <= g; g--) {
        var h = d[g],
            k = h.instance,
            l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        Ze(e, h, l);
        f = k;
      } else for (g = 0; g < d.length; g++) {
        h = d[g];
        k = h.instance;
        l = h.currentTarget;
        h = h.listener;
        if (k !== f && e.isPropagationStopped()) break a;
        Ze(e, h, l);
        f = k;
      }
    }
  }

  if (Ub) throw a = Vb, Ub = !1, Vb = null, a;
}

function G(a, b) {
  var c = $e(b),
      d = a + "__bubble";
  c.has(d) || (af(b, a, 2, !1), c.add(d));
}

var bf = "_reactListening" + Math.random().toString(36).slice(2);

function cf(a) {
  a[bf] || (a[bf] = !0, ba.forEach(function (b) {
    Ye.has(b) || df(b, !1, a, null);
    df(b, !0, a, null);
  }));
}

function df(a, b, c, d) {
  var e = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0,
      f = c;
  "selectionchange" === a && 9 !== c.nodeType && (f = c.ownerDocument);

  if (null !== d && !b && Ye.has(a)) {
    if ("scroll" !== a) return;
    e |= 2;
    f = d;
  }

  var g = $e(f),
      h = a + "__" + (b ? "capture" : "bubble");
  g.has(h) || (b && (e |= 4), af(f, a, e, b), g.add(h));
}

function af(a, b, c, d) {
  var e = Nc.get(b);

  switch (void 0 === e ? 2 : e) {
    case 0:
      e = gd;
      break;

    case 1:
      e = id;
      break;

    default:
      e = hd;
  }

  c = e.bind(null, b, c, a);
  e = void 0;
  !Pb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
  d ? void 0 !== e ? a.addEventListener(b, c, {
    capture: !0,
    passive: e
  }) : a.addEventListener(b, c, !0) : void 0 !== e ? a.addEventListener(b, c, {
    passive: e
  }) : a.addEventListener(b, c, !1);
}

function jd(a, b, c, d, e) {
  var f = d;
  if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for (;;) {
    if (null === d) return;
    var g = d.tag;

    if (3 === g || 4 === g) {
      var h = d.stateNode.containerInfo;
      if (h === e || 8 === h.nodeType && h.parentNode === e) break;
      if (4 === g) for (g = d.return; null !== g;) {
        var k = g.tag;
        if (3 === k || 4 === k) if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
        g = g.return;
      }

      for (; null !== h;) {
        g = wc(h);
        if (null === g) return;
        k = g.tag;

        if (5 === k || 6 === k) {
          d = f = g;
          continue a;
        }

        h = h.parentNode;
      }
    }

    d = d.return;
  }
  Nb(function () {
    var d = f,
        e = xb(c),
        g = [];

    a: {
      var h = Mc.get(a);

      if (void 0 !== h) {
        var k = td,
            x = a;

        switch (a) {
          case "keypress":
            if (0 === od(c)) break a;

          case "keydown":
          case "keyup":
            k = Rd;
            break;

          case "focusin":
            x = "focus";
            k = Fd;
            break;

          case "focusout":
            x = "blur";
            k = Fd;
            break;

          case "beforeblur":
          case "afterblur":
            k = Fd;
            break;

          case "click":
            if (2 === c.button) break a;

          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            k = Bd;
            break;

          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            k = Dd;
            break;

          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            k = Vd;
            break;

          case Ic:
          case Jc:
          case Kc:
            k = Hd;
            break;

          case Lc:
            k = Xd;
            break;

          case "scroll":
            k = vd;
            break;

          case "wheel":
            k = Zd;
            break;

          case "copy":
          case "cut":
          case "paste":
            k = Jd;
            break;

          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            k = Td;
        }

        var w = 0 !== (b & 4),
            z = !w && "scroll" === a,
            u = w ? null !== h ? h + "Capture" : null : h;
        w = [];

        for (var t = d, q; null !== t;) {
          q = t;
          var v = q.stateNode;
          5 === q.tag && null !== v && (q = v, null !== u && (v = Ob(t, u), null != v && w.push(ef(t, v, q))));
          if (z) break;
          t = t.return;
        }

        0 < w.length && (h = new k(h, x, null, c, e), g.push({
          event: h,
          listeners: w
        }));
      }
    }

    if (0 === (b & 7)) {
      a: {
        h = "mouseover" === a || "pointerover" === a;
        k = "mouseout" === a || "pointerout" === a;
        if (h && 0 === (b & 16) && (x = c.relatedTarget || c.fromElement) && (wc(x) || x[ff])) break a;

        if (k || h) {
          h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window;

          if (k) {
            if (x = c.relatedTarget || c.toElement, k = d, x = x ? wc(x) : null, null !== x && (z = Zb(x), x !== z || 5 !== x.tag && 6 !== x.tag)) x = null;
          } else k = null, x = d;

          if (k !== x) {
            w = Bd;
            v = "onMouseLeave";
            u = "onMouseEnter";
            t = "mouse";
            if ("pointerout" === a || "pointerover" === a) w = Td, v = "onPointerLeave", u = "onPointerEnter", t = "pointer";
            z = null == k ? h : ue(k);
            q = null == x ? h : ue(x);
            h = new w(v, t + "leave", k, c, e);
            h.target = z;
            h.relatedTarget = q;
            v = null;
            wc(e) === d && (w = new w(u, t + "enter", x, c, e), w.target = q, w.relatedTarget = z, v = w);
            z = v;
            if (k && x) b: {
              w = k;
              u = x;
              t = 0;

              for (q = w; q; q = gf(q)) {
                t++;
              }

              q = 0;

              for (v = u; v; v = gf(v)) {
                q++;
              }

              for (; 0 < t - q;) {
                w = gf(w), t--;
              }

              for (; 0 < q - t;) {
                u = gf(u), q--;
              }

              for (; t--;) {
                if (w === u || null !== u && w === u.alternate) break b;
                w = gf(w);
                u = gf(u);
              }

              w = null;
            } else w = null;
            null !== k && hf(g, h, k, w, !1);
            null !== x && null !== z && hf(g, z, x, w, !0);
          }
        }
      }

      a: {
        h = d ? ue(d) : window;
        k = h.nodeName && h.nodeName.toLowerCase();
        if ("select" === k || "input" === k && "file" === h.type) var J = ve;else if (me(h)) {
          if (we) J = Fe;else {
            J = De;
            var K = Ce;
          }
        } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (J = Ee);

        if (J && (J = J(a, d))) {
          ne(g, J, c, e);
          break a;
        }

        K && K(a, h, d);
        "focusout" === a && (K = h._wrapperState) && K.controlled && "number" === h.type && bb(h, "number", h.value);
      }

      K = d ? ue(d) : window;

      switch (a) {
        case "focusin":
          if (me(K) || "true" === K.contentEditable) Qe = K, Re = d, Se = null;
          break;

        case "focusout":
          Se = Re = Qe = null;
          break;

        case "mousedown":
          Te = !0;
          break;

        case "contextmenu":
        case "mouseup":
        case "dragend":
          Te = !1;
          Ue(g, c, e);
          break;

        case "selectionchange":
          if (Pe) break;

        case "keydown":
        case "keyup":
          Ue(g, c, e);
      }

      var Q;
      if (ae) b: {
        switch (a) {
          case "compositionstart":
            var L = "onCompositionStart";
            break b;

          case "compositionend":
            L = "onCompositionEnd";
            break b;

          case "compositionupdate":
            L = "onCompositionUpdate";
            break b;
        }

        L = void 0;
      } else ie ? ge(a, c) && (L = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (L = "onCompositionStart");
      L && (de && "ko" !== c.locale && (ie || "onCompositionStart" !== L ? "onCompositionEnd" === L && ie && (Q = nd()) : (kd = e, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), K = oe(d, L), 0 < K.length && (L = new Ld(L, a, null, c, e), g.push({
        event: L,
        listeners: K
      }), Q ? L.data = Q : (Q = he(c), null !== Q && (L.data = Q))));
      if (Q = ce ? je(a, c) : ke(a, c)) d = oe(d, "onBeforeInput"), 0 < d.length && (e = new Ld("onBeforeInput", "beforeinput", null, c, e), g.push({
        event: e,
        listeners: d
      }), e.data = Q);
    }

    se(g, b);
  });
}

function ef(a, b, c) {
  return {
    instance: a,
    listener: b,
    currentTarget: c
  };
}

function oe(a, b) {
  for (var c = b + "Capture", d = []; null !== a;) {
    var e = a,
        f = e.stateNode;
    5 === e.tag && null !== f && (e = f, f = Ob(a, c), null != f && d.unshift(ef(a, f, e)), f = Ob(a, b), null != f && d.push(ef(a, f, e)));
    a = a.return;
  }

  return d;
}

function gf(a) {
  if (null === a) return null;

  do {
    a = a.return;
  } while (a && 5 !== a.tag);

  return a ? a : null;
}

function hf(a, b, c, d, e) {
  for (var f = b._reactName, g = []; null !== c && c !== d;) {
    var h = c,
        k = h.alternate,
        l = h.stateNode;
    if (null !== k && k === d) break;
    5 === h.tag && null !== l && (h = l, e ? (k = Ob(c, f), null != k && g.unshift(ef(c, k, h))) : e || (k = Ob(c, f), null != k && g.push(ef(c, k, h))));
    c = c.return;
  }

  0 !== g.length && a.push({
    event: b,
    listeners: g
  });
}

function jf() {}

var kf = null,
    lf = null;

function mf(a, b) {
  switch (a) {
    case "button":
    case "input":
    case "select":
    case "textarea":
      return !!b.autoFocus;
  }

  return !1;
}

function nf(a, b) {
  return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}

var of = "function" === typeof setTimeout ? setTimeout : void 0,
    pf = "function" === typeof clearTimeout ? clearTimeout : void 0;

function qf(a) {
  1 === a.nodeType ? a.textContent = "" : 9 === a.nodeType && (a = a.body, null != a && (a.textContent = ""));
}

function rf(a) {
  for (; null != a; a = a.nextSibling) {
    var b = a.nodeType;
    if (1 === b || 3 === b) break;
  }

  return a;
}

function sf(a) {
  a = a.previousSibling;

  for (var b = 0; a;) {
    if (8 === a.nodeType) {
      var c = a.data;

      if ("$" === c || "$!" === c || "$?" === c) {
        if (0 === b) return a;
        b--;
      } else "/$" === c && b++;
    }

    a = a.previousSibling;
  }

  return null;
}

var tf = 0;

function uf(a) {
  return {
    $$typeof: Ga,
    toString: a,
    valueOf: a
  };
}

var vf = Math.random().toString(36).slice(2),
    wf = "__reactFiber$" + vf,
    xf = "__reactProps$" + vf,
    ff = "__reactContainer$" + vf,
    yf = "__reactEvents$" + vf;

function wc(a) {
  var b = a[wf];
  if (b) return b;

  for (var c = a.parentNode; c;) {
    if (b = c[ff] || c[wf]) {
      c = b.alternate;
      if (null !== b.child || null !== c && null !== c.child) for (a = sf(a); null !== a;) {
        if (c = a[wf]) return c;
        a = sf(a);
      }
      return b;
    }

    a = c;
    c = a.parentNode;
  }

  return null;
}

function Cb(a) {
  a = a[wf] || a[ff];
  return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}

function ue(a) {
  if (5 === a.tag || 6 === a.tag) return a.stateNode;
  throw Error(y(33));
}

function Db(a) {
  return a[xf] || null;
}

function $e(a) {
  var b = a[yf];
  void 0 === b && (b = a[yf] = new Set());
  return b;
}

var zf = [],
    Af = -1;

function Bf(a) {
  return {
    current: a
  };
}

function H(a) {
  0 > Af || (a.current = zf[Af], zf[Af] = null, Af--);
}

function I(a, b) {
  Af++;
  zf[Af] = a.current;
  a.current = b;
}

var Cf = {},
    M = Bf(Cf),
    N = Bf(!1),
    Df = Cf;

function Ef(a, b) {
  var c = a.type.contextTypes;
  if (!c) return Cf;
  var d = a.stateNode;
  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
  var e = {},
      f;

  for (f in c) {
    e[f] = b[f];
  }

  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
  return e;
}

function Ff(a) {
  a = a.childContextTypes;
  return null !== a && void 0 !== a;
}

function Gf() {
  H(N);
  H(M);
}

function Hf(a, b, c) {
  if (M.current !== Cf) throw Error(y(168));
  I(M, b);
  I(N, c);
}

function If(a, b, c) {
  var d = a.stateNode;
  a = b.childContextTypes;
  if ("function" !== typeof d.getChildContext) return c;
  d = d.getChildContext();

  for (var e in d) {
    if (!(e in a)) throw Error(y(108, Ra(b) || "Unknown", e));
  }

  return m({}, c, d);
}

function Jf(a) {
  a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Cf;
  Df = M.current;
  I(M, a);
  I(N, N.current);
  return !0;
}

function Kf(a, b, c) {
  var d = a.stateNode;
  if (!d) throw Error(y(169));
  c ? (a = If(a, b, Df), d.__reactInternalMemoizedMergedChildContext = a, H(N), H(M), I(M, a)) : H(N);
  I(N, c);
}

var Lf = null,
    Mf = null,
    Nf = r.unstable_runWithPriority,
    Of = r.unstable_scheduleCallback,
    Pf = r.unstable_cancelCallback,
    Qf = r.unstable_shouldYield,
    Rf = r.unstable_requestPaint,
    Sf = r.unstable_now,
    Tf = r.unstable_getCurrentPriorityLevel,
    Uf = r.unstable_ImmediatePriority,
    Vf = r.unstable_UserBlockingPriority,
    Wf = r.unstable_NormalPriority,
    Xf = r.unstable_LowPriority,
    Yf = r.unstable_IdlePriority,
    Zf = {},
    $f = void 0 !== Rf ? Rf : function () {},
    ag = null,
    bg = null,
    cg = !1,
    dg = Sf(),
    O = 1E4 > dg ? Sf : function () {
  return Sf() - dg;
};

function eg() {
  switch (Tf()) {
    case Uf:
      return 99;

    case Vf:
      return 98;

    case Wf:
      return 97;

    case Xf:
      return 96;

    case Yf:
      return 95;

    default:
      throw Error(y(332));
  }
}

function fg(a) {
  switch (a) {
    case 99:
      return Uf;

    case 98:
      return Vf;

    case 97:
      return Wf;

    case 96:
      return Xf;

    case 95:
      return Yf;

    default:
      throw Error(y(332));
  }
}

function gg(a, b) {
  a = fg(a);
  return Nf(a, b);
}

function hg(a, b, c) {
  a = fg(a);
  return Of(a, b, c);
}

function ig() {
  if (null !== bg) {
    var a = bg;
    bg = null;
    Pf(a);
  }

  jg();
}

function jg() {
  if (!cg && null !== ag) {
    cg = !0;
    var a = 0;

    try {
      var b = ag;
      gg(99, function () {
        for (; a < b.length; a++) {
          var c = b[a];

          do {
            c = c(!0);
          } while (null !== c);
        }
      });
      ag = null;
    } catch (c) {
      throw null !== ag && (ag = ag.slice(a + 1)), Of(Uf, ig), c;
    } finally {
      cg = !1;
    }
  }
}

var kg = ra.ReactCurrentBatchConfig;

function lg(a, b) {
  if (a && a.defaultProps) {
    b = m({}, b);
    a = a.defaultProps;

    for (var c in a) {
      void 0 === b[c] && (b[c] = a[c]);
    }

    return b;
  }

  return b;
}

var mg = Bf(null),
    ng = null,
    og = null,
    pg = null;

function qg() {
  pg = og = ng = null;
}

function rg(a) {
  var b = mg.current;
  H(mg);
  a.type._context._currentValue = b;
}

function sg(a, b) {
  for (; null !== a;) {
    var c = a.alternate;
    if ((a.childLanes & b) === b) {
      if (null === c || (c.childLanes & b) === b) break;else c.childLanes |= b;
    } else a.childLanes |= b, null !== c && (c.childLanes |= b);
    a = a.return;
  }
}

function tg(a, b) {
  ng = a;
  pg = og = null;
  a = a.dependencies;
  null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (ug = !0), a.firstContext = null);
}

function vg(a, b) {
  if (pg !== a && !1 !== b && 0 !== b) {
    if ("number" !== typeof b || 1073741823 === b) pg = a, b = 1073741823;
    b = {
      context: a,
      observedBits: b,
      next: null
    };

    if (null === og) {
      if (null === ng) throw Error(y(308));
      og = b;
      ng.dependencies = {
        lanes: 0,
        firstContext: b,
        responders: null
      };
    } else og = og.next = b;
  }

  return a._currentValue;
}

var wg = !1;

function xg(a) {
  a.updateQueue = {
    baseState: a.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: {
      pending: null
    },
    effects: null
  };
}

function yg(a, b) {
  a = a.updateQueue;
  b.updateQueue === a && (b.updateQueue = {
    baseState: a.baseState,
    firstBaseUpdate: a.firstBaseUpdate,
    lastBaseUpdate: a.lastBaseUpdate,
    shared: a.shared,
    effects: a.effects
  });
}

function zg(a, b) {
  return {
    eventTime: a,
    lane: b,
    tag: 0,
    payload: null,
    callback: null,
    next: null
  };
}

function Ag(a, b) {
  a = a.updateQueue;

  if (null !== a) {
    a = a.shared;
    var c = a.pending;
    null === c ? b.next = b : (b.next = c.next, c.next = b);
    a.pending = b;
  }
}

function Bg(a, b) {
  var c = a.updateQueue,
      d = a.alternate;

  if (null !== d && (d = d.updateQueue, c === d)) {
    var e = null,
        f = null;
    c = c.firstBaseUpdate;

    if (null !== c) {
      do {
        var g = {
          eventTime: c.eventTime,
          lane: c.lane,
          tag: c.tag,
          payload: c.payload,
          callback: c.callback,
          next: null
        };
        null === f ? e = f = g : f = f.next = g;
        c = c.next;
      } while (null !== c);

      null === f ? e = f = b : f = f.next = b;
    } else e = f = b;

    c = {
      baseState: d.baseState,
      firstBaseUpdate: e,
      lastBaseUpdate: f,
      shared: d.shared,
      effects: d.effects
    };
    a.updateQueue = c;
    return;
  }

  a = c.lastBaseUpdate;
  null === a ? c.firstBaseUpdate = b : a.next = b;
  c.lastBaseUpdate = b;
}

function Cg(a, b, c, d) {
  var e = a.updateQueue;
  wg = !1;
  var f = e.firstBaseUpdate,
      g = e.lastBaseUpdate,
      h = e.shared.pending;

  if (null !== h) {
    e.shared.pending = null;
    var k = h,
        l = k.next;
    k.next = null;
    null === g ? f = l : g.next = l;
    g = k;
    var n = a.alternate;

    if (null !== n) {
      n = n.updateQueue;
      var A = n.lastBaseUpdate;
      A !== g && (null === A ? n.firstBaseUpdate = l : A.next = l, n.lastBaseUpdate = k);
    }
  }

  if (null !== f) {
    A = e.baseState;
    g = 0;
    n = l = k = null;

    do {
      h = f.lane;
      var p = f.eventTime;

      if ((d & h) === h) {
        null !== n && (n = n.next = {
          eventTime: p,
          lane: 0,
          tag: f.tag,
          payload: f.payload,
          callback: f.callback,
          next: null
        });

        a: {
          var C = a,
              x = f;
          h = b;
          p = c;

          switch (x.tag) {
            case 1:
              C = x.payload;

              if ("function" === typeof C) {
                A = C.call(p, A, h);
                break a;
              }

              A = C;
              break a;

            case 3:
              C.flags = C.flags & -4097 | 64;

            case 0:
              C = x.payload;
              h = "function" === typeof C ? C.call(p, A, h) : C;
              if (null === h || void 0 === h) break a;
              A = m({}, A, h);
              break a;

            case 2:
              wg = !0;
          }
        }

        null !== f.callback && (a.flags |= 32, h = e.effects, null === h ? e.effects = [f] : h.push(f));
      } else p = {
        eventTime: p,
        lane: h,
        tag: f.tag,
        payload: f.payload,
        callback: f.callback,
        next: null
      }, null === n ? (l = n = p, k = A) : n = n.next = p, g |= h;

      f = f.next;
      if (null === f) if (h = e.shared.pending, null === h) break;else f = h.next, h.next = null, e.lastBaseUpdate = h, e.shared.pending = null;
    } while (1);

    null === n && (k = A);
    e.baseState = k;
    e.firstBaseUpdate = l;
    e.lastBaseUpdate = n;
    Dg |= g;
    a.lanes = g;
    a.memoizedState = A;
  }
}

function Eg(a, b, c) {
  a = b.effects;
  b.effects = null;
  if (null !== a) for (b = 0; b < a.length; b++) {
    var d = a[b],
        e = d.callback;

    if (null !== e) {
      d.callback = null;
      d = c;
      if ("function" !== typeof e) throw Error(y(191, e));
      e.call(d);
    }
  }
}

var Fg = new aa.Component().refs;

function Gg(a, b, c, d) {
  b = a.memoizedState;
  c = c(d, b);
  c = null === c || void 0 === c ? b : m({}, b, c);
  a.memoizedState = c;
  0 === a.lanes && (a.updateQueue.baseState = c);
}

var Kg = {
  isMounted: function isMounted(a) {
    return (a = a._reactInternals) ? Zb(a) === a : !1;
  },
  enqueueSetState: function enqueueSetState(a, b, c) {
    a = a._reactInternals;
    var d = Hg(),
        e = Ig(a),
        f = zg(d, e);
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    Ag(a, f);
    Jg(a, e, d);
  },
  enqueueReplaceState: function enqueueReplaceState(a, b, c) {
    a = a._reactInternals;
    var d = Hg(),
        e = Ig(a),
        f = zg(d, e);
    f.tag = 1;
    f.payload = b;
    void 0 !== c && null !== c && (f.callback = c);
    Ag(a, f);
    Jg(a, e, d);
  },
  enqueueForceUpdate: function enqueueForceUpdate(a, b) {
    a = a._reactInternals;
    var c = Hg(),
        d = Ig(a),
        e = zg(c, d);
    e.tag = 2;
    void 0 !== b && null !== b && (e.callback = b);
    Ag(a, e);
    Jg(a, d, c);
  }
};

function Lg(a, b, c, d, e, f, g) {
  a = a.stateNode;
  return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Je(c, d) || !Je(e, f) : !0;
}

function Mg(a, b, c) {
  var d = !1,
      e = Cf;
  var f = b.contextType;
  "object" === typeof f && null !== f ? f = vg(f) : (e = Ff(b) ? Df : M.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Ef(a, e) : Cf);
  b = new b(c, f);
  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
  b.updater = Kg;
  a.stateNode = b;
  b._reactInternals = a;
  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
  return b;
}

function Ng(a, b, c, d) {
  a = b.state;
  "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
  "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
  b.state !== a && Kg.enqueueReplaceState(b, b.state, null);
}

function Og(a, b, c, d) {
  var e = a.stateNode;
  e.props = c;
  e.state = a.memoizedState;
  e.refs = Fg;
  xg(a);
  var f = b.contextType;
  "object" === typeof f && null !== f ? e.context = vg(f) : (f = Ff(b) ? Df : M.current, e.context = Ef(a, f));
  Cg(a, c, e, d);
  e.state = a.memoizedState;
  f = b.getDerivedStateFromProps;
  "function" === typeof f && (Gg(a, b, f, c), e.state = a.memoizedState);
  "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Kg.enqueueReplaceState(e, e.state, null), Cg(a, c, e, d), e.state = a.memoizedState);
  "function" === typeof e.componentDidMount && (a.flags |= 4);
}

var Pg = Array.isArray;

function Qg(a, b, c) {
  a = c.ref;

  if (null !== a && "function" !== typeof a && "object" !== typeof a) {
    if (c._owner) {
      c = c._owner;

      if (c) {
        if (1 !== c.tag) throw Error(y(309));
        var d = c.stateNode;
      }

      if (!d) throw Error(y(147, a));
      var e = "" + a;
      if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;

      b = function b(a) {
        var b = d.refs;
        b === Fg && (b = d.refs = {});
        null === a ? delete b[e] : b[e] = a;
      };

      b._stringRef = e;
      return b;
    }

    if ("string" !== typeof a) throw Error(y(284));
    if (!c._owner) throw Error(y(290, a));
  }

  return a;
}

function Rg(a, b) {
  if ("textarea" !== a.type) throw Error(y(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b));
}

function Sg(a) {
  function b(b, c) {
    if (a) {
      var d = b.lastEffect;
      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;
      c.nextEffect = null;
      c.flags = 8;
    }
  }

  function c(c, d) {
    if (!a) return null;

    for (; null !== d;) {
      b(c, d), d = d.sibling;
    }

    return null;
  }

  function d(a, b) {
    for (a = new Map(); null !== b;) {
      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
    }

    return a;
  }

  function e(a, b) {
    a = Tg(a, b);
    a.index = 0;
    a.sibling = null;
    return a;
  }

  function f(b, c, d) {
    b.index = d;
    if (!a) return c;
    d = b.alternate;
    if (null !== d) return d = d.index, d < c ? (b.flags = 2, c) : d;
    b.flags = 2;
    return c;
  }

  function g(b) {
    a && null === b.alternate && (b.flags = 2);
    return b;
  }

  function h(a, b, c, d) {
    if (null === b || 6 !== b.tag) return b = Ug(c, a.mode, d), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }

  function k(a, b, c, d) {
    if (null !== b && b.elementType === c.type) return d = e(b, c.props), d.ref = Qg(a, b, c), d.return = a, d;
    d = Vg(c.type, c.key, c.props, null, a.mode, d);
    d.ref = Qg(a, b, c);
    d.return = a;
    return d;
  }

  function l(a, b, c, d) {
    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = Wg(c, a.mode, d), b.return = a, b;
    b = e(b, c.children || []);
    b.return = a;
    return b;
  }

  function n(a, b, c, d, f) {
    if (null === b || 7 !== b.tag) return b = Xg(c, a.mode, d, f), b.return = a, b;
    b = e(b, c);
    b.return = a;
    return b;
  }

  function A(a, b, c) {
    if ("string" === typeof b || "number" === typeof b) return b = Ug("" + b, a.mode, c), b.return = a, b;

    if ("object" === typeof b && null !== b) {
      switch (b.$$typeof) {
        case sa:
          return c = Vg(b.type, b.key, b.props, null, a.mode, c), c.ref = Qg(a, null, b), c.return = a, c;

        case ta:
          return b = Wg(b, a.mode, c), b.return = a, b;
      }

      if (Pg(b) || La(b)) return b = Xg(b, a.mode, c, null), b.return = a, b;
      Rg(a, b);
    }

    return null;
  }

  function p(a, b, c, d) {
    var e = null !== b ? b.key : null;
    if ("string" === typeof c || "number" === typeof c) return null !== e ? null : h(a, b, "" + c, d);

    if ("object" === typeof c && null !== c) {
      switch (c.$$typeof) {
        case sa:
          return c.key === e ? c.type === ua ? n(a, b, c.props.children, d, e) : k(a, b, c, d) : null;

        case ta:
          return c.key === e ? l(a, b, c, d) : null;
      }

      if (Pg(c) || La(c)) return null !== e ? null : n(a, b, c, d, null);
      Rg(a, c);
    }

    return null;
  }

  function C(a, b, c, d, e) {
    if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, h(b, a, "" + d, e);

    if ("object" === typeof d && null !== d) {
      switch (d.$$typeof) {
        case sa:
          return a = a.get(null === d.key ? c : d.key) || null, d.type === ua ? n(b, a, d.props.children, e, d.key) : k(b, a, d, e);

        case ta:
          return a = a.get(null === d.key ? c : d.key) || null, l(b, a, d, e);
      }

      if (Pg(d) || La(d)) return a = a.get(c) || null, n(b, a, d, e, null);
      Rg(b, d);
    }

    return null;
  }

  function x(e, g, h, k) {
    for (var l = null, t = null, u = g, z = g = 0, q = null; null !== u && z < h.length; z++) {
      u.index > z ? (q = u, u = null) : q = u.sibling;
      var n = p(e, u, h[z], k);

      if (null === n) {
        null === u && (u = q);
        break;
      }

      a && u && null === n.alternate && b(e, u);
      g = f(n, g, z);
      null === t ? l = n : t.sibling = n;
      t = n;
      u = q;
    }

    if (z === h.length) return c(e, u), l;

    if (null === u) {
      for (; z < h.length; z++) {
        u = A(e, h[z], k), null !== u && (g = f(u, g, z), null === t ? l = u : t.sibling = u, t = u);
      }

      return l;
    }

    for (u = d(e, u); z < h.length; z++) {
      q = C(u, e, z, h[z], k), null !== q && (a && null !== q.alternate && u.delete(null === q.key ? z : q.key), g = f(q, g, z), null === t ? l = q : t.sibling = q, t = q);
    }

    a && u.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  function w(e, g, h, k) {
    var l = La(h);
    if ("function" !== typeof l) throw Error(y(150));
    h = l.call(h);
    if (null == h) throw Error(y(151));

    for (var t = l = null, u = g, z = g = 0, q = null, n = h.next(); null !== u && !n.done; z++, n = h.next()) {
      u.index > z ? (q = u, u = null) : q = u.sibling;
      var w = p(e, u, n.value, k);

      if (null === w) {
        null === u && (u = q);
        break;
      }

      a && u && null === w.alternate && b(e, u);
      g = f(w, g, z);
      null === t ? l = w : t.sibling = w;
      t = w;
      u = q;
    }

    if (n.done) return c(e, u), l;

    if (null === u) {
      for (; !n.done; z++, n = h.next()) {
        n = A(e, n.value, k), null !== n && (g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);
      }

      return l;
    }

    for (u = d(e, u); !n.done; z++, n = h.next()) {
      n = C(u, e, z, n.value, k), null !== n && (a && null !== n.alternate && u.delete(null === n.key ? z : n.key), g = f(n, g, z), null === t ? l = n : t.sibling = n, t = n);
    }

    a && u.forEach(function (a) {
      return b(e, a);
    });
    return l;
  }

  return function (a, d, f, h) {
    var k = "object" === typeof f && null !== f && f.type === ua && null === f.key;
    k && (f = f.props.children);
    var l = "object" === typeof f && null !== f;
    if (l) switch (f.$$typeof) {
      case sa:
        a: {
          l = f.key;

          for (k = d; null !== k;) {
            if (k.key === l) {
              switch (k.tag) {
                case 7:
                  if (f.type === ua) {
                    c(a, k.sibling);
                    d = e(k, f.props.children);
                    d.return = a;
                    a = d;
                    break a;
                  }

                  break;

                default:
                  if (k.elementType === f.type) {
                    c(a, k.sibling);
                    d = e(k, f.props);
                    d.ref = Qg(a, k, f);
                    d.return = a;
                    a = d;
                    break a;
                  }

              }

              c(a, k);
              break;
            } else b(a, k);

            k = k.sibling;
          }

          f.type === ua ? (d = Xg(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Vg(f.type, f.key, f.props, null, a.mode, h), h.ref = Qg(a, d, f), h.return = a, a = h);
        }

        return g(a);

      case ta:
        a: {
          for (k = f.key; null !== d;) {
            if (d.key === k) {
              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                c(a, d.sibling);
                d = e(d, f.children || []);
                d.return = a;
                a = d;
                break a;
              } else {
                c(a, d);
                break;
              }
            } else b(a, d);
            d = d.sibling;
          }

          d = Wg(f, a.mode, h);
          d.return = a;
          a = d;
        }

        return g(a);
    }
    if ("string" === typeof f || "number" === typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f), d.return = a, a = d) : (c(a, d), d = Ug(f, a.mode, h), d.return = a, a = d), g(a);
    if (Pg(f)) return x(a, d, f, h);
    if (La(f)) return w(a, d, f, h);
    l && Rg(a, f);
    if ("undefined" === typeof f && !k) switch (a.tag) {
      case 1:
      case 22:
      case 0:
      case 11:
      case 15:
        throw Error(y(152, Ra(a.type) || "Component"));
    }
    return c(a, d);
  };
}

var Yg = Sg(!0),
    Zg = Sg(!1),
    $g = {},
    ah = Bf($g),
    bh = Bf($g),
    ch = Bf($g);

function dh(a) {
  if (a === $g) throw Error(y(174));
  return a;
}

function eh(a, b) {
  I(ch, b);
  I(bh, a);
  I(ah, $g);
  a = b.nodeType;

  switch (a) {
    case 9:
    case 11:
      b = (b = b.documentElement) ? b.namespaceURI : mb(null, "");
      break;

    default:
      a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = mb(b, a);
  }

  H(ah);
  I(ah, b);
}

function fh() {
  H(ah);
  H(bh);
  H(ch);
}

function gh(a) {
  dh(ch.current);
  var b = dh(ah.current);
  var c = mb(b, a.type);
  b !== c && (I(bh, a), I(ah, c));
}

function hh(a) {
  bh.current === a && (H(ah), H(bh));
}

var P = Bf(0);

function ih(a) {
  for (var b = a; null !== b;) {
    if (13 === b.tag) {
      var c = b.memoizedState;
      if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
      if (0 !== (b.flags & 64)) return b;
    } else if (null !== b.child) {
      b.child.return = b;
      b = b.child;
      continue;
    }

    if (b === a) break;

    for (; null === b.sibling;) {
      if (null === b.return || b.return === a) return null;
      b = b.return;
    }

    b.sibling.return = b.return;
    b = b.sibling;
  }

  return null;
}

var jh = null,
    kh = null,
    lh = !1;

function mh(a, b) {
  var c = nh(5, null, null, 0);
  c.elementType = "DELETED";
  c.type = "DELETED";
  c.stateNode = b;
  c.return = a;
  c.flags = 8;
  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
}

function oh(a, b) {
  switch (a.tag) {
    case 5:
      var c = a.type;
      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
      return null !== b ? (a.stateNode = b, !0) : !1;

    case 6:
      return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;

    case 13:
      return !1;

    default:
      return !1;
  }
}

function ph(a) {
  if (lh) {
    var b = kh;

    if (b) {
      var c = b;

      if (!oh(a, b)) {
        b = rf(c.nextSibling);

        if (!b || !oh(a, b)) {
          a.flags = a.flags & -1025 | 2;
          lh = !1;
          jh = a;
          return;
        }

        mh(jh, c);
      }

      jh = a;
      kh = rf(b.firstChild);
    } else a.flags = a.flags & -1025 | 2, lh = !1, jh = a;
  }
}

function qh(a) {
  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;) {
    a = a.return;
  }

  jh = a;
}

function rh(a) {
  if (a !== jh) return !1;
  if (!lh) return qh(a), lh = !0, !1;
  var b = a.type;
  if (5 !== a.tag || "head" !== b && "body" !== b && !nf(b, a.memoizedProps)) for (b = kh; b;) {
    mh(a, b), b = rf(b.nextSibling);
  }
  qh(a);

  if (13 === a.tag) {
    a = a.memoizedState;
    a = null !== a ? a.dehydrated : null;
    if (!a) throw Error(y(317));

    a: {
      a = a.nextSibling;

      for (b = 0; a;) {
        if (8 === a.nodeType) {
          var c = a.data;

          if ("/$" === c) {
            if (0 === b) {
              kh = rf(a.nextSibling);
              break a;
            }

            b--;
          } else "$" !== c && "$!" !== c && "$?" !== c || b++;
        }

        a = a.nextSibling;
      }

      kh = null;
    }
  } else kh = jh ? rf(a.stateNode.nextSibling) : null;

  return !0;
}

function sh() {
  kh = jh = null;
  lh = !1;
}

var th = [];

function uh() {
  for (var a = 0; a < th.length; a++) {
    th[a]._workInProgressVersionPrimary = null;
  }

  th.length = 0;
}

var vh = ra.ReactCurrentDispatcher,
    wh = ra.ReactCurrentBatchConfig,
    xh = 0,
    R = null,
    S = null,
    T = null,
    yh = !1,
    zh = !1;

function Ah() {
  throw Error(y(321));
}

function Bh(a, b) {
  if (null === b) return !1;

  for (var c = 0; c < b.length && c < a.length; c++) {
    if (!He(a[c], b[c])) return !1;
  }

  return !0;
}

function Ch(a, b, c, d, e, f) {
  xh = f;
  R = b;
  b.memoizedState = null;
  b.updateQueue = null;
  b.lanes = 0;
  vh.current = null === a || null === a.memoizedState ? Dh : Eh;
  a = c(d, e);

  if (zh) {
    f = 0;

    do {
      zh = !1;
      if (!(25 > f)) throw Error(y(301));
      f += 1;
      T = S = null;
      b.updateQueue = null;
      vh.current = Fh;
      a = c(d, e);
    } while (zh);
  }

  vh.current = Gh;
  b = null !== S && null !== S.next;
  xh = 0;
  T = S = R = null;
  yh = !1;
  if (b) throw Error(y(300));
  return a;
}

function Hh() {
  var a = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null
  };
  null === T ? R.memoizedState = T = a : T = T.next = a;
  return T;
}

function Ih() {
  if (null === S) {
    var a = R.alternate;
    a = null !== a ? a.memoizedState : null;
  } else a = S.next;

  var b = null === T ? R.memoizedState : T.next;
  if (null !== b) T = b, S = a;else {
    if (null === a) throw Error(y(310));
    S = a;
    a = {
      memoizedState: S.memoizedState,
      baseState: S.baseState,
      baseQueue: S.baseQueue,
      queue: S.queue,
      next: null
    };
    null === T ? R.memoizedState = T = a : T = T.next = a;
  }
  return T;
}

function Jh(a, b) {
  return "function" === typeof b ? b(a) : b;
}

function Kh(a) {
  var b = Ih(),
      c = b.queue;
  if (null === c) throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = S,
      e = d.baseQueue,
      f = c.pending;

  if (null !== f) {
    if (null !== e) {
      var g = e.next;
      e.next = f.next;
      f.next = g;
    }

    d.baseQueue = e = f;
    c.pending = null;
  }

  if (null !== e) {
    e = e.next;
    d = d.baseState;
    var h = g = f = null,
        k = e;

    do {
      var l = k.lane;
      if ((xh & l) === l) null !== h && (h = h.next = {
        lane: 0,
        action: k.action,
        eagerReducer: k.eagerReducer,
        eagerState: k.eagerState,
        next: null
      }), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);else {
        var n = {
          lane: l,
          action: k.action,
          eagerReducer: k.eagerReducer,
          eagerState: k.eagerState,
          next: null
        };
        null === h ? (g = h = n, f = d) : h = h.next = n;
        R.lanes |= l;
        Dg |= l;
      }
      k = k.next;
    } while (null !== k && k !== e);

    null === h ? f = d : h.next = g;
    He(d, b.memoizedState) || (ug = !0);
    b.memoizedState = d;
    b.baseState = f;
    b.baseQueue = h;
    c.lastRenderedState = d;
  }

  return [b.memoizedState, c.dispatch];
}

function Lh(a) {
  var b = Ih(),
      c = b.queue;
  if (null === c) throw Error(y(311));
  c.lastRenderedReducer = a;
  var d = c.dispatch,
      e = c.pending,
      f = b.memoizedState;

  if (null !== e) {
    c.pending = null;
    var g = e = e.next;

    do {
      f = a(f, g.action), g = g.next;
    } while (g !== e);

    He(f, b.memoizedState) || (ug = !0);
    b.memoizedState = f;
    null === b.baseQueue && (b.baseState = f);
    c.lastRenderedState = f;
  }

  return [f, d];
}

function Mh(a, b, c) {
  var d = b._getVersion;
  d = d(b._source);
  var e = b._workInProgressVersionPrimary;
  if (null !== e) a = e === d;else if (a = a.mutableReadLanes, a = (xh & a) === a) b._workInProgressVersionPrimary = d, th.push(b);
  if (a) return c(b._source);
  th.push(b);
  throw Error(y(350));
}

function Nh(a, b, c, d) {
  var e = U;
  if (null === e) throw Error(y(349));
  var f = b._getVersion,
      g = f(b._source),
      h = vh.current,
      k = h.useState(function () {
    return Mh(e, b, c);
  }),
      l = k[1],
      n = k[0];
  k = T;
  var A = a.memoizedState,
      p = A.refs,
      C = p.getSnapshot,
      x = A.source;
  A = A.subscribe;
  var w = R;
  a.memoizedState = {
    refs: p,
    source: b,
    subscribe: d
  };
  h.useEffect(function () {
    p.getSnapshot = c;
    p.setSnapshot = l;
    var a = f(b._source);

    if (!He(g, a)) {
      a = c(b._source);
      He(n, a) || (l(a), a = Ig(w), e.mutableReadLanes |= a & e.pendingLanes);
      a = e.mutableReadLanes;
      e.entangledLanes |= a;

      for (var d = e.entanglements, h = a; 0 < h;) {
        var k = 31 - Vc(h),
            v = 1 << k;
        d[k] |= a;
        h &= ~v;
      }
    }
  }, [c, b, d]);
  h.useEffect(function () {
    return d(b._source, function () {
      var a = p.getSnapshot,
          c = p.setSnapshot;

      try {
        c(a(b._source));
        var d = Ig(w);
        e.mutableReadLanes |= d & e.pendingLanes;
      } catch (q) {
        c(function () {
          throw q;
        });
      }
    });
  }, [b, d]);
  He(C, c) && He(x, b) && He(A, d) || (a = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: Jh,
    lastRenderedState: n
  }, a.dispatch = l = Oh.bind(null, R, a), k.queue = a, k.baseQueue = null, n = Mh(e, b, c), k.memoizedState = k.baseState = n);
  return n;
}

function Ph(a, b, c) {
  var d = Ih();
  return Nh(d, a, b, c);
}

function Qh(a) {
  var b = Hh();
  "function" === typeof a && (a = a());
  b.memoizedState = b.baseState = a;
  a = b.queue = {
    pending: null,
    dispatch: null,
    lastRenderedReducer: Jh,
    lastRenderedState: a
  };
  a = a.dispatch = Oh.bind(null, R, a);
  return [b.memoizedState, a];
}

function Rh(a, b, c, d) {
  a = {
    tag: a,
    create: b,
    destroy: c,
    deps: d,
    next: null
  };
  b = R.updateQueue;
  null === b ? (b = {
    lastEffect: null
  }, R.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
  return a;
}

function Sh(a) {
  var b = Hh();
  a = {
    current: a
  };
  return b.memoizedState = a;
}

function Th() {
  return Ih().memoizedState;
}

function Uh(a, b, c, d) {
  var e = Hh();
  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, void 0, void 0 === d ? null : d);
}

function Vh(a, b, c, d) {
  var e = Ih();
  d = void 0 === d ? null : d;
  var f = void 0;

  if (null !== S) {
    var g = S.memoizedState;
    f = g.destroy;

    if (null !== d && Bh(d, g.deps)) {
      Rh(b, c, f, d);
      return;
    }
  }

  R.flags |= a;
  e.memoizedState = Rh(1 | b, c, f, d);
}

function Wh(a, b) {
  return Uh(516, 4, a, b);
}

function Xh(a, b) {
  return Vh(516, 4, a, b);
}

function Yh(a, b) {
  return Vh(4, 2, a, b);
}

function Zh(a, b) {
  if ("function" === typeof b) return a = a(), b(a), function () {
    b(null);
  };
  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {
    b.current = null;
  };
}

function $h(a, b, c) {
  c = null !== c && void 0 !== c ? c.concat([a]) : null;
  return Vh(4, 2, Zh.bind(null, b, a), c);
}

function ai() {}

function bi(a, b) {
  var c = Ih();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Bh(b, d[1])) return d[0];
  c.memoizedState = [a, b];
  return a;
}

function ci(a, b) {
  var c = Ih();
  b = void 0 === b ? null : b;
  var d = c.memoizedState;
  if (null !== d && null !== b && Bh(b, d[1])) return d[0];
  a = a();
  c.memoizedState = [a, b];
  return a;
}

function di(a, b) {
  var c = eg();
  gg(98 > c ? 98 : c, function () {
    a(!0);
  });
  gg(97 < c ? 97 : c, function () {
    var c = wh.transition;
    wh.transition = 1;

    try {
      a(!1), b();
    } finally {
      wh.transition = c;
    }
  });
}

function Oh(a, b, c) {
  var d = Hg(),
      e = Ig(a),
      f = {
    lane: e,
    action: c,
    eagerReducer: null,
    eagerState: null,
    next: null
  },
      g = b.pending;
  null === g ? f.next = f : (f.next = g.next, g.next = f);
  b.pending = f;
  g = a.alternate;
  if (a === R || null !== g && g === R) zh = yh = !0;else {
    if (0 === a.lanes && (null === g || 0 === g.lanes) && (g = b.lastRenderedReducer, null !== g)) try {
      var h = b.lastRenderedState,
          k = g(h, c);
      f.eagerReducer = g;
      f.eagerState = k;
      if (He(k, h)) return;
    } catch (l) {} finally {}
    Jg(a, e, d);
  }
}

var Gh = {
  readContext: vg,
  useCallback: Ah,
  useContext: Ah,
  useEffect: Ah,
  useImperativeHandle: Ah,
  useLayoutEffect: Ah,
  useMemo: Ah,
  useReducer: Ah,
  useRef: Ah,
  useState: Ah,
  useDebugValue: Ah,
  useDeferredValue: Ah,
  useTransition: Ah,
  useMutableSource: Ah,
  useOpaqueIdentifier: Ah,
  unstable_isNewReconciler: !1
},
    Dh = {
  readContext: vg,
  useCallback: function useCallback(a, b) {
    Hh().memoizedState = [a, void 0 === b ? null : b];
    return a;
  },
  useContext: vg,
  useEffect: Wh,
  useImperativeHandle: function useImperativeHandle(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null;
    return Uh(4, 2, Zh.bind(null, b, a), c);
  },
  useLayoutEffect: function useLayoutEffect(a, b) {
    return Uh(4, 2, a, b);
  },
  useMemo: function useMemo(a, b) {
    var c = Hh();
    b = void 0 === b ? null : b;
    a = a();
    c.memoizedState = [a, b];
    return a;
  },
  useReducer: function useReducer(a, b, c) {
    var d = Hh();
    b = void 0 !== c ? c(b) : b;
    d.memoizedState = d.baseState = b;
    a = d.queue = {
      pending: null,
      dispatch: null,
      lastRenderedReducer: a,
      lastRenderedState: b
    };
    a = a.dispatch = Oh.bind(null, R, a);
    return [d.memoizedState, a];
  },
  useRef: Sh,
  useState: Qh,
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Qh(a),
        c = b[0],
        d = b[1];
    Wh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Qh(!1),
        b = a[0];
    a = di.bind(null, a[1]);
    Sh(a);
    return [a, b];
  },
  useMutableSource: function useMutableSource(a, b, c) {
    var d = Hh();
    d.memoizedState = {
      refs: {
        getSnapshot: b,
        setSnapshot: null
      },
      source: a,
      subscribe: c
    };
    return Nh(d, a, b, c);
  },
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    if (lh) {
      var a = !1,
          b = uf(function () {
        a || (a = !0, c("r:" + (tf++).toString(36)));
        throw Error(y(355));
      }),
          c = Qh(b)[1];
      0 === (R.mode & 2) && (R.flags |= 516, Rh(5, function () {
        c("r:" + (tf++).toString(36));
      }, void 0, null));
      return b;
    }

    b = "r:" + (tf++).toString(36);
    Qh(b);
    return b;
  },
  unstable_isNewReconciler: !1
},
    Eh = {
  readContext: vg,
  useCallback: bi,
  useContext: vg,
  useEffect: Xh,
  useImperativeHandle: $h,
  useLayoutEffect: Yh,
  useMemo: ci,
  useReducer: Kh,
  useRef: Th,
  useState: function useState() {
    return Kh(Jh);
  },
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Kh(Jh),
        c = b[0],
        d = b[1];
    Xh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Kh(Jh)[0];
    return [Th().current, a];
  },
  useMutableSource: Ph,
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    return Kh(Jh)[0];
  },
  unstable_isNewReconciler: !1
},
    Fh = {
  readContext: vg,
  useCallback: bi,
  useContext: vg,
  useEffect: Xh,
  useImperativeHandle: $h,
  useLayoutEffect: Yh,
  useMemo: ci,
  useReducer: Lh,
  useRef: Th,
  useState: function useState() {
    return Lh(Jh);
  },
  useDebugValue: ai,
  useDeferredValue: function useDeferredValue(a) {
    var b = Lh(Jh),
        c = b[0],
        d = b[1];
    Xh(function () {
      var b = wh.transition;
      wh.transition = 1;

      try {
        d(a);
      } finally {
        wh.transition = b;
      }
    }, [a]);
    return c;
  },
  useTransition: function useTransition() {
    var a = Lh(Jh)[0];
    return [Th().current, a];
  },
  useMutableSource: Ph,
  useOpaqueIdentifier: function useOpaqueIdentifier() {
    return Lh(Jh)[0];
  },
  unstable_isNewReconciler: !1
},
    ei = ra.ReactCurrentOwner,
    ug = !1;

function fi(a, b, c, d) {
  b.child = null === a ? Zg(b, null, c, d) : Yg(b, a.child, c, d);
}

function gi(a, b, c, d, e) {
  c = c.render;
  var f = b.ref;
  tg(b, e);
  d = Ch(a, b, c, d, f, e);
  if (null !== a && !ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, d, e);
  return b.child;
}

function ii(a, b, c, d, e, f) {
  if (null === a) {
    var g = c.type;
    if ("function" === typeof g && !ji(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, ki(a, b, g, d, e, f);
    a = Vg(c.type, null, d, b, b.mode, f);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
  }

  g = a.child;
  if (0 === (e & f) && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : Je, c(e, d) && a.ref === b.ref)) return hi(a, b, f);
  b.flags |= 1;
  a = Tg(g, d);
  a.ref = b.ref;
  a.return = b;
  return b.child = a;
}

function ki(a, b, c, d, e, f) {
  if (null !== a && Je(a.memoizedProps, d) && a.ref === b.ref) if (ug = !1, 0 !== (f & e)) 0 !== (a.flags & 16384) && (ug = !0);else return b.lanes = a.lanes, hi(a, b, f);
  return li(a, b, c, d, f);
}

function mi(a, b, c) {
  var d = b.pendingProps,
      e = d.children,
      f = null !== a ? a.memoizedState : null;
  if ("hidden" === d.mode || "unstable-defer-without-hiding" === d.mode) {
    if (0 === (b.mode & 4)) b.memoizedState = {
      baseLanes: 0
    }, ni(b, c);else if (0 !== (c & 1073741824)) b.memoizedState = {
      baseLanes: 0
    }, ni(b, null !== f ? f.baseLanes : c);else return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
      baseLanes: a
    }, ni(b, a), null;
  } else null !== f ? (d = f.baseLanes | c, b.memoizedState = null) : d = c, ni(b, d);
  fi(a, b, e, c);
  return b.child;
}

function oi(a, b) {
  var c = b.ref;
  if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 128;
}

function li(a, b, c, d, e) {
  var f = Ff(c) ? Df : M.current;
  f = Ef(b, f);
  tg(b, e);
  c = Ch(a, b, c, d, f, e);
  if (null !== a && !ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, hi(a, b, e);
  b.flags |= 1;
  fi(a, b, c, e);
  return b.child;
}

function pi(a, b, c, d, e) {
  if (Ff(c)) {
    var f = !0;
    Jf(b);
  } else f = !1;

  tg(b, e);
  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), Mg(b, c, d), Og(b, c, d, e), d = !0;else if (null === a) {
    var g = b.stateNode,
        h = b.memoizedProps;
    g.props = h;
    var k = g.context,
        l = c.contextType;
    "object" === typeof l && null !== l ? l = vg(l) : (l = Ff(c) ? Df : M.current, l = Ef(b, l));
    var n = c.getDerivedStateFromProps,
        A = "function" === typeof n || "function" === typeof g.getSnapshotBeforeUpdate;
    A || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Ng(b, g, d, l);
    wg = !1;
    var p = b.memoizedState;
    g.state = p;
    Cg(b, d, g, e);
    k = b.memoizedState;
    h !== d || p !== k || N.current || wg ? ("function" === typeof n && (Gg(b, c, n, d), k = b.memoizedState), (h = wg || Lg(b, c, h, d, p, k, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4)) : ("function" === typeof g.componentDidMount && (b.flags |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.flags |= 4), d = !1);
  } else {
    g = b.stateNode;
    yg(a, b);
    h = b.memoizedProps;
    l = b.type === b.elementType ? h : lg(b.type, h);
    g.props = l;
    A = b.pendingProps;
    p = g.context;
    k = c.contextType;
    "object" === typeof k && null !== k ? k = vg(k) : (k = Ff(c) ? Df : M.current, k = Ef(b, k));
    var C = c.getDerivedStateFromProps;
    (n = "function" === typeof C || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== A || p !== k) && Ng(b, g, d, k);
    wg = !1;
    p = b.memoizedState;
    g.state = p;
    Cg(b, d, g, e);
    var x = b.memoizedState;
    h !== A || p !== x || N.current || wg ? ("function" === typeof C && (Gg(b, c, C, d), x = b.memoizedState), (l = wg || Lg(b, c, l, d, p, x, k)) ? (n || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = l) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), d = !1);
  }
  return qi(a, b, c, d, f, e);
}

function qi(a, b, c, d, e, f) {
  oi(a, b);
  var g = 0 !== (b.flags & 64);
  if (!d && !g) return e && Kf(b, c, !1), hi(a, b, f);
  d = b.stateNode;
  ei.current = b;
  var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
  b.flags |= 1;
  null !== a && g ? (b.child = Yg(b, a.child, null, f), b.child = Yg(b, null, h, f)) : fi(a, b, h, f);
  b.memoizedState = d.state;
  e && Kf(b, c, !0);
  return b.child;
}

function ri(a) {
  var b = a.stateNode;
  b.pendingContext ? Hf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Hf(a, b.context, !1);
  eh(a, b.containerInfo);
}

var si = {
  dehydrated: null,
  retryLane: 0
};

function ti(a, b, c) {
  var d = b.pendingProps,
      e = P.current,
      f = !1,
      g;
  (g = 0 !== (b.flags & 64)) || (g = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
  g ? (f = !0, b.flags &= -65) : null !== a && null === a.memoizedState || void 0 === d.fallback || !0 === d.unstable_avoidThisFallback || (e |= 1);
  I(P, e & 1);

  if (null === a) {
    void 0 !== d.fallback && ph(b);
    a = d.children;
    e = d.fallback;
    if (f) return a = ui(b, a, e, c), b.child.memoizedState = {
      baseLanes: c
    }, b.memoizedState = si, a;
    if ("number" === typeof d.unstable_expectedLoadTime) return a = ui(b, a, e, c), b.child.memoizedState = {
      baseLanes: c
    }, b.memoizedState = si, b.lanes = 33554432, a;
    c = vi({
      mode: "visible",
      children: a
    }, b.mode, c, null);
    c.return = b;
    return b.child = c;
  }

  if (null !== a.memoizedState) {
    if (f) return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
      baseLanes: c
    } : {
      baseLanes: e.baseLanes | c
    }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
    c = xi(a, b, d.children, c);
    b.memoizedState = null;
    return c;
  }

  if (f) return d = wi(a, b, d.children, d.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
    baseLanes: c
  } : {
    baseLanes: e.baseLanes | c
  }, f.childLanes = a.childLanes & ~c, b.memoizedState = si, d;
  c = xi(a, b, d.children, c);
  b.memoizedState = null;
  return c;
}

function ui(a, b, c, d) {
  var e = a.mode,
      f = a.child;
  b = {
    mode: "hidden",
    children: b
  };
  0 === (e & 2) && null !== f ? (f.childLanes = 0, f.pendingProps = b) : f = vi(b, e, 0, null);
  c = Xg(c, e, d, null);
  f.return = a;
  c.return = a;
  f.sibling = c;
  a.child = f;
  return c;
}

function xi(a, b, c, d) {
  var e = a.child;
  a = e.sibling;
  c = Tg(e, {
    mode: "visible",
    children: c
  });
  0 === (b.mode & 2) && (c.lanes = d);
  c.return = b;
  c.sibling = null;
  null !== a && (a.nextEffect = null, a.flags = 8, b.firstEffect = b.lastEffect = a);
  return b.child = c;
}

function wi(a, b, c, d, e) {
  var f = b.mode,
      g = a.child;
  a = g.sibling;
  var h = {
    mode: "hidden",
    children: c
  };
  0 === (f & 2) && b.child !== g ? (c = b.child, c.childLanes = 0, c.pendingProps = h, g = c.lastEffect, null !== g ? (b.firstEffect = c.firstEffect, b.lastEffect = g, g.nextEffect = null) : b.firstEffect = b.lastEffect = null) : c = Tg(g, h);
  null !== a ? d = Tg(a, d) : (d = Xg(d, f, e, null), d.flags |= 2);
  d.return = b;
  c.return = b;
  c.sibling = d;
  b.child = c;
  return d;
}

function yi(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  sg(a.return, b);
}

function zi(a, b, c, d, e, f) {
  var g = a.memoizedState;
  null === g ? a.memoizedState = {
    isBackwards: b,
    rendering: null,
    renderingStartTime: 0,
    last: d,
    tail: c,
    tailMode: e,
    lastEffect: f
  } : (g.isBackwards = b, g.rendering = null, g.renderingStartTime = 0, g.last = d, g.tail = c, g.tailMode = e, g.lastEffect = f);
}

function Ai(a, b, c) {
  var d = b.pendingProps,
      e = d.revealOrder,
      f = d.tail;
  fi(a, b, d.children, c);
  d = P.current;
  if (0 !== (d & 2)) d = d & 1 | 2, b.flags |= 64;else {
    if (null !== a && 0 !== (a.flags & 64)) a: for (a = b.child; null !== a;) {
      if (13 === a.tag) null !== a.memoizedState && yi(a, c);else if (19 === a.tag) yi(a, c);else if (null !== a.child) {
        a.child.return = a;
        a = a.child;
        continue;
      }
      if (a === b) break a;

      for (; null === a.sibling;) {
        if (null === a.return || a.return === b) break a;
        a = a.return;
      }

      a.sibling.return = a.return;
      a = a.sibling;
    }
    d &= 1;
  }
  I(P, d);
  if (0 === (b.mode & 2)) b.memoizedState = null;else switch (e) {
    case "forwards":
      c = b.child;

      for (e = null; null !== c;) {
        a = c.alternate, null !== a && null === ih(a) && (e = c), c = c.sibling;
      }

      c = e;
      null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
      zi(b, !1, e, c, f, b.lastEffect);
      break;

    case "backwards":
      c = null;
      e = b.child;

      for (b.child = null; null !== e;) {
        a = e.alternate;

        if (null !== a && null === ih(a)) {
          b.child = e;
          break;
        }

        a = e.sibling;
        e.sibling = c;
        c = e;
        e = a;
      }

      zi(b, !0, c, null, f, b.lastEffect);
      break;

    case "together":
      zi(b, !1, null, null, void 0, b.lastEffect);
      break;

    default:
      b.memoizedState = null;
  }
  return b.child;
}

function hi(a, b, c) {
  null !== a && (b.dependencies = a.dependencies);
  Dg |= b.lanes;

  if (0 !== (c & b.childLanes)) {
    if (null !== a && b.child !== a.child) throw Error(y(153));

    if (null !== b.child) {
      a = b.child;
      c = Tg(a, a.pendingProps);
      b.child = c;

      for (c.return = b; null !== a.sibling;) {
        a = a.sibling, c = c.sibling = Tg(a, a.pendingProps), c.return = b;
      }

      c.sibling = null;
    }

    return b.child;
  }

  return null;
}

var Bi, Ci, Di, Ei;

Bi = function Bi(a, b) {
  for (var c = b.child; null !== c;) {
    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }
    if (c === b) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
};

Ci = function Ci() {};

Di = function Di(a, b, c, d) {
  var e = a.memoizedProps;

  if (e !== d) {
    a = b.stateNode;
    dh(ah.current);
    var f = null;

    switch (c) {
      case "input":
        e = Ya(a, e);
        d = Ya(a, d);
        f = [];
        break;

      case "option":
        e = eb(a, e);
        d = eb(a, d);
        f = [];
        break;

      case "select":
        e = m({}, e, {
          value: void 0
        });
        d = m({}, d, {
          value: void 0
        });
        f = [];
        break;

      case "textarea":
        e = gb(a, e);
        d = gb(a, d);
        f = [];
        break;

      default:
        "function" !== typeof e.onClick && "function" === typeof d.onClick && (a.onclick = jf);
    }

    vb(c, d);
    var g;
    c = null;

    for (l in e) {
      if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) if ("style" === l) {
        var h = e[l];

        for (g in h) {
          h.hasOwnProperty(g) && (c || (c = {}), c[g] = "");
        }
      } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && (ca.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
    }

    for (l in d) {
      var k = d[l];
      h = null != e ? e[l] : void 0;
      if (d.hasOwnProperty(l) && k !== h && (null != k || null != h)) if ("style" === l) {
        if (h) {
          for (g in h) {
            !h.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (c || (c = {}), c[g] = "");
          }

          for (g in k) {
            k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), c[g] = k[g]);
          }
        } else c || (f || (f = []), f.push(l, c)), c = k;
      } else "dangerouslySetInnerHTML" === l ? (k = k ? k.__html : void 0, h = h ? h.__html : void 0, null != k && h !== k && (f = f || []).push(l, k)) : "children" === l ? "string" !== typeof k && "number" !== typeof k || (f = f || []).push(l, "" + k) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && (ca.hasOwnProperty(l) ? (null != k && "onScroll" === l && G("scroll", a), f || h === k || (f = [])) : "object" === typeof k && null !== k && k.$$typeof === Ga ? k.toString() : (f = f || []).push(l, k));
    }

    c && (f = f || []).push("style", c);
    var l = f;
    if (b.updateQueue = l) b.flags |= 4;
  }
};

Ei = function Ei(a, b, c, d) {
  c !== d && (b.flags |= 4);
};

function Fi(a, b) {
  if (!lh) switch (a.tailMode) {
    case "hidden":
      b = a.tail;

      for (var c = null; null !== b;) {
        null !== b.alternate && (c = b), b = b.sibling;
      }

      null === c ? a.tail = null : c.sibling = null;
      break;

    case "collapsed":
      c = a.tail;

      for (var d = null; null !== c;) {
        null !== c.alternate && (d = c), c = c.sibling;
      }

      null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
  }
}

function Gi(a, b, c) {
  var d = b.pendingProps;

  switch (b.tag) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return null;

    case 1:
      return Ff(b.type) && Gf(), null;

    case 3:
      fh();
      H(N);
      H(M);
      uh();
      d = b.stateNode;
      d.pendingContext && (d.context = d.pendingContext, d.pendingContext = null);
      if (null === a || null === a.child) rh(b) ? b.flags |= 4 : d.hydrate || (b.flags |= 256);
      Ci(b);
      return null;

    case 5:
      hh(b);
      var e = dh(ch.current);
      c = b.type;
      if (null !== a && null != b.stateNode) Di(a, b, c, d, e), a.ref !== b.ref && (b.flags |= 128);else {
        if (!d) {
          if (null === b.stateNode) throw Error(y(166));
          return null;
        }

        a = dh(ah.current);

        if (rh(b)) {
          d = b.stateNode;
          c = b.type;
          var f = b.memoizedProps;
          d[wf] = b;
          d[xf] = f;

          switch (c) {
            case "dialog":
              G("cancel", d);
              G("close", d);
              break;

            case "iframe":
            case "object":
            case "embed":
              G("load", d);
              break;

            case "video":
            case "audio":
              for (a = 0; a < Xe.length; a++) {
                G(Xe[a], d);
              }

              break;

            case "source":
              G("error", d);
              break;

            case "img":
            case "image":
            case "link":
              G("error", d);
              G("load", d);
              break;

            case "details":
              G("toggle", d);
              break;

            case "input":
              Za(d, f);
              G("invalid", d);
              break;

            case "select":
              d._wrapperState = {
                wasMultiple: !!f.multiple
              };
              G("invalid", d);
              break;

            case "textarea":
              hb(d, f), G("invalid", d);
          }

          vb(c, f);
          a = null;

          for (var g in f) {
            f.hasOwnProperty(g) && (e = f[g], "children" === g ? "string" === typeof e ? d.textContent !== e && (a = ["children", e]) : "number" === typeof e && d.textContent !== "" + e && (a = ["children", "" + e]) : ca.hasOwnProperty(g) && null != e && "onScroll" === g && G("scroll", d));
          }

          switch (c) {
            case "input":
              Va(d);
              cb(d, f, !0);
              break;

            case "textarea":
              Va(d);
              jb(d);
              break;

            case "select":
            case "option":
              break;

            default:
              "function" === typeof f.onClick && (d.onclick = jf);
          }

          d = a;
          b.updateQueue = d;
          null !== d && (b.flags |= 4);
        } else {
          g = 9 === e.nodeType ? e : e.ownerDocument;
          a === kb.html && (a = lb(c));
          a === kb.html ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d.is ? a = g.createElement(c, {
            is: d.is
          }) : (a = g.createElement(c), "select" === c && (g = a, d.multiple ? g.multiple = !0 : d.size && (g.size = d.size))) : a = g.createElementNS(a, c);
          a[wf] = b;
          a[xf] = d;
          Bi(a, b, !1, !1);
          b.stateNode = a;
          g = wb(c, d);

          switch (c) {
            case "dialog":
              G("cancel", a);
              G("close", a);
              e = d;
              break;

            case "iframe":
            case "object":
            case "embed":
              G("load", a);
              e = d;
              break;

            case "video":
            case "audio":
              for (e = 0; e < Xe.length; e++) {
                G(Xe[e], a);
              }

              e = d;
              break;

            case "source":
              G("error", a);
              e = d;
              break;

            case "img":
            case "image":
            case "link":
              G("error", a);
              G("load", a);
              e = d;
              break;

            case "details":
              G("toggle", a);
              e = d;
              break;

            case "input":
              Za(a, d);
              e = Ya(a, d);
              G("invalid", a);
              break;

            case "option":
              e = eb(a, d);
              break;

            case "select":
              a._wrapperState = {
                wasMultiple: !!d.multiple
              };
              e = m({}, d, {
                value: void 0
              });
              G("invalid", a);
              break;

            case "textarea":
              hb(a, d);
              e = gb(a, d);
              G("invalid", a);
              break;

            default:
              e = d;
          }

          vb(c, e);
          var h = e;

          for (f in h) {
            if (h.hasOwnProperty(f)) {
              var k = h[f];
              "style" === f ? tb(a, k) : "dangerouslySetInnerHTML" === f ? (k = k ? k.__html : void 0, null != k && ob(a, k)) : "children" === f ? "string" === typeof k ? ("textarea" !== c || "" !== k) && pb(a, k) : "number" === typeof k && pb(a, "" + k) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && (ca.hasOwnProperty(f) ? null != k && "onScroll" === f && G("scroll", a) : null != k && qa(a, f, k, g));
            }
          }

          switch (c) {
            case "input":
              Va(a);
              cb(a, d, !1);
              break;

            case "textarea":
              Va(a);
              jb(a);
              break;

            case "option":
              null != d.value && a.setAttribute("value", "" + Sa(d.value));
              break;

            case "select":
              a.multiple = !!d.multiple;
              f = d.value;
              null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0);
              break;

            default:
              "function" === typeof e.onClick && (a.onclick = jf);
          }

          mf(c, d) && (b.flags |= 4);
        }

        null !== b.ref && (b.flags |= 128);
      }
      return null;

    case 6:
      if (a && null != b.stateNode) Ei(a, b, a.memoizedProps, d);else {
        if ("string" !== typeof d && null === b.stateNode) throw Error(y(166));
        c = dh(ch.current);
        dh(ah.current);
        rh(b) ? (d = b.stateNode, c = b.memoizedProps, d[wf] = b, d.nodeValue !== c && (b.flags |= 4)) : (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d), d[wf] = b, b.stateNode = d);
      }
      return null;

    case 13:
      H(P);
      d = b.memoizedState;
      if (0 !== (b.flags & 64)) return b.lanes = c, b;
      d = null !== d;
      c = !1;
      null === a ? void 0 !== b.memoizedProps.fallback && rh(b) : c = null !== a.memoizedState;
      if (d && !c && 0 !== (b.mode & 2)) if (null === a && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (P.current & 1)) 0 === V && (V = 3);else {
        if (0 === V || 3 === V) V = 4;
        null === U || 0 === (Dg & 134217727) && 0 === (Hi & 134217727) || Ii(U, W);
      }
      if (d || c) b.flags |= 4;
      return null;

    case 4:
      return fh(), Ci(b), null === a && cf(b.stateNode.containerInfo), null;

    case 10:
      return rg(b), null;

    case 17:
      return Ff(b.type) && Gf(), null;

    case 19:
      H(P);
      d = b.memoizedState;
      if (null === d) return null;
      f = 0 !== (b.flags & 64);
      g = d.rendering;
      if (null === g) {
        if (f) Fi(d, !1);else {
          if (0 !== V || null !== a && 0 !== (a.flags & 64)) for (a = b.child; null !== a;) {
            g = ih(a);

            if (null !== g) {
              b.flags |= 64;
              Fi(d, !1);
              f = g.updateQueue;
              null !== f && (b.updateQueue = f, b.flags |= 4);
              null === d.lastEffect && (b.firstEffect = null);
              b.lastEffect = d.lastEffect;
              d = c;

              for (c = b.child; null !== c;) {
                f = c, a = d, f.flags &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                  lanes: a.lanes,
                  firstContext: a.firstContext
                }), c = c.sibling;
              }

              I(P, P.current & 1 | 2);
              return b.child;
            }

            a = a.sibling;
          }
          null !== d.tail && O() > Ji && (b.flags |= 64, f = !0, Fi(d, !1), b.lanes = 33554432);
        }
      } else {
        if (!f) if (a = ih(g), null !== a) {
          if (b.flags |= 64, f = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), Fi(d, !0), null === d.tail && "hidden" === d.tailMode && !g.alternate && !lh) return b = b.lastEffect = d.lastEffect, null !== b && (b.nextEffect = null), null;
        } else 2 * O() - d.renderingStartTime > Ji && 1073741824 !== c && (b.flags |= 64, f = !0, Fi(d, !1), b.lanes = 33554432);
        d.isBackwards ? (g.sibling = b.child, b.child = g) : (c = d.last, null !== c ? c.sibling = g : b.child = g, d.last = g);
      }
      return null !== d.tail ? (c = d.tail, d.rendering = c, d.tail = c.sibling, d.lastEffect = b.lastEffect, d.renderingStartTime = O(), c.sibling = null, b = P.current, I(P, f ? b & 1 | 2 : b & 1), c) : null;

    case 23:
    case 24:
      return Ki(), null !== a && null !== a.memoizedState !== (null !== b.memoizedState) && "unstable-defer-without-hiding" !== d.mode && (b.flags |= 4), null;
  }

  throw Error(y(156, b.tag));
}

function Li(a) {
  switch (a.tag) {
    case 1:
      Ff(a.type) && Gf();
      var b = a.flags;
      return b & 4096 ? (a.flags = b & -4097 | 64, a) : null;

    case 3:
      fh();
      H(N);
      H(M);
      uh();
      b = a.flags;
      if (0 !== (b & 64)) throw Error(y(285));
      a.flags = b & -4097 | 64;
      return a;

    case 5:
      return hh(a), null;

    case 13:
      return H(P), b = a.flags, b & 4096 ? (a.flags = b & -4097 | 64, a) : null;

    case 19:
      return H(P), null;

    case 4:
      return fh(), null;

    case 10:
      return rg(a), null;

    case 23:
    case 24:
      return Ki(), null;

    default:
      return null;
  }
}

function Mi(a, b) {
  try {
    var c = "",
        d = b;

    do {
      c += Qa(d), d = d.return;
    } while (d);

    var e = c;
  } catch (f) {
    e = "\nError generating stack: " + f.message + "\n" + f.stack;
  }

  return {
    value: a,
    source: b,
    stack: e
  };
}

function Ni(a, b) {
  try {
    console.error(b.value);
  } catch (c) {
    setTimeout(function () {
      throw c;
    });
  }
}

var Oi = "function" === typeof WeakMap ? WeakMap : Map;

function Pi(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  c.payload = {
    element: null
  };
  var d = b.value;

  c.callback = function () {
    Qi || (Qi = !0, Ri = d);
    Ni(a, b);
  };

  return c;
}

function Si(a, b, c) {
  c = zg(-1, c);
  c.tag = 3;
  var d = a.type.getDerivedStateFromError;

  if ("function" === typeof d) {
    var e = b.value;

    c.payload = function () {
      Ni(a, b);
      return d(e);
    };
  }

  var f = a.stateNode;
  null !== f && "function" === typeof f.componentDidCatch && (c.callback = function () {
    "function" !== typeof d && (null === Ti ? Ti = new Set([this]) : Ti.add(this), Ni(a, b));
    var c = b.stack;
    this.componentDidCatch(b.value, {
      componentStack: null !== c ? c : ""
    });
  });
  return c;
}

var Ui = "function" === typeof WeakSet ? WeakSet : Set;

function Vi(a) {
  var b = a.ref;
  if (null !== b) if ("function" === typeof b) try {
    b(null);
  } catch (c) {
    Wi(a, c);
  } else b.current = null;
}

function Xi(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      return;

    case 1:
      if (b.flags & 256 && null !== a) {
        var c = a.memoizedProps,
            d = a.memoizedState;
        a = b.stateNode;
        b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : lg(b.type, c), d);
        a.__reactInternalSnapshotBeforeUpdate = b;
      }

      return;

    case 3:
      b.flags & 256 && qf(b.stateNode.containerInfo);
      return;

    case 5:
    case 6:
    case 4:
    case 17:
      return;
  }

  throw Error(y(163));
}

function Yi(a, b, c) {
  switch (c.tag) {
    case 0:
    case 11:
    case 15:
    case 22:
      b = c.updateQueue;
      b = null !== b ? b.lastEffect : null;

      if (null !== b) {
        a = b = b.next;

        do {
          if (3 === (a.tag & 3)) {
            var d = a.create;
            a.destroy = d();
          }

          a = a.next;
        } while (a !== b);
      }

      b = c.updateQueue;
      b = null !== b ? b.lastEffect : null;

      if (null !== b) {
        a = b = b.next;

        do {
          var e = a;
          d = e.next;
          e = e.tag;
          0 !== (e & 4) && 0 !== (e & 1) && (Zi(c, a), $i(c, a));
          a = d;
        } while (a !== b);
      }

      return;

    case 1:
      a = c.stateNode;
      c.flags & 4 && (null === b ? a.componentDidMount() : (d = c.elementType === c.type ? b.memoizedProps : lg(c.type, b.memoizedProps), a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));
      b = c.updateQueue;
      null !== b && Eg(c, b, a);
      return;

    case 3:
      b = c.updateQueue;

      if (null !== b) {
        a = null;
        if (null !== c.child) switch (c.child.tag) {
          case 5:
            a = c.child.stateNode;
            break;

          case 1:
            a = c.child.stateNode;
        }
        Eg(c, b, a);
      }

      return;

    case 5:
      a = c.stateNode;
      null === b && c.flags & 4 && mf(c.type, c.memoizedProps) && a.focus();
      return;

    case 6:
      return;

    case 4:
      return;

    case 12:
      return;

    case 13:
      null === c.memoizedState && (c = c.alternate, null !== c && (c = c.memoizedState, null !== c && (c = c.dehydrated, null !== c && Cc(c))));
      return;

    case 19:
    case 17:
    case 20:
    case 21:
    case 23:
    case 24:
      return;
  }

  throw Error(y(163));
}

function aj(a, b) {
  for (var c = a;;) {
    if (5 === c.tag) {
      var d = c.stateNode;
      if (b) d = d.style, "function" === typeof d.setProperty ? d.setProperty("display", "none", "important") : d.display = "none";else {
        d = c.stateNode;
        var e = c.memoizedProps.style;
        e = void 0 !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;
        d.style.display = sb("display", e);
      }
    } else if (6 === c.tag) c.stateNode.nodeValue = b ? "" : c.memoizedProps;else if ((23 !== c.tag && 24 !== c.tag || null === c.memoizedState || c === a) && null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }

    if (c === a) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === a) return;
      c = c.return;
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
}

function bj(a, b) {
  if (Mf && "function" === typeof Mf.onCommitFiberUnmount) try {
    Mf.onCommitFiberUnmount(Lf, b);
  } catch (f) {}

  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      a = b.updateQueue;

      if (null !== a && (a = a.lastEffect, null !== a)) {
        var c = a = a.next;

        do {
          var d = c,
              e = d.destroy;
          d = d.tag;
          if (void 0 !== e) if (0 !== (d & 4)) Zi(b, c);else {
            d = b;

            try {
              e();
            } catch (f) {
              Wi(d, f);
            }
          }
          c = c.next;
        } while (c !== a);
      }

      break;

    case 1:
      Vi(b);
      a = b.stateNode;
      if ("function" === typeof a.componentWillUnmount) try {
        a.props = b.memoizedProps, a.state = b.memoizedState, a.componentWillUnmount();
      } catch (f) {
        Wi(b, f);
      }
      break;

    case 5:
      Vi(b);
      break;

    case 4:
      cj(a, b);
  }
}

function dj(a) {
  a.alternate = null;
  a.child = null;
  a.dependencies = null;
  a.firstEffect = null;
  a.lastEffect = null;
  a.memoizedProps = null;
  a.memoizedState = null;
  a.pendingProps = null;
  a.return = null;
  a.updateQueue = null;
}

function ej(a) {
  return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}

function fj(a) {
  a: {
    for (var b = a.return; null !== b;) {
      if (ej(b)) break a;
      b = b.return;
    }

    throw Error(y(160));
  }

  var c = b;
  b = c.stateNode;

  switch (c.tag) {
    case 5:
      var d = !1;
      break;

    case 3:
      b = b.containerInfo;
      d = !0;
      break;

    case 4:
      b = b.containerInfo;
      d = !0;
      break;

    default:
      throw Error(y(161));
  }

  c.flags & 16 && (pb(b, ""), c.flags &= -17);

  a: b: for (c = a;;) {
    for (; null === c.sibling;) {
      if (null === c.return || ej(c.return)) {
        c = null;
        break a;
      }

      c = c.return;
    }

    c.sibling.return = c.return;

    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {
      if (c.flags & 2) continue b;
      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;
    }

    if (!(c.flags & 2)) {
      c = c.stateNode;
      break a;
    }
  }

  d ? gj(a, c, b) : hj(a, c, b);
}

function gj(a, b, c) {
  var d = a.tag,
      e = 5 === d || 6 === d;
  if (e) a = e ? a.stateNode : a.stateNode.instance, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && void 0 !== c || null !== b.onclick || (b.onclick = jf));else if (4 !== d && (a = a.child, null !== a)) for (gj(a, b, c), a = a.sibling; null !== a;) {
    gj(a, b, c), a = a.sibling;
  }
}

function hj(a, b, c) {
  var d = a.tag,
      e = 5 === d || 6 === d;
  if (e) a = e ? a.stateNode : a.stateNode.instance, b ? c.insertBefore(a, b) : c.appendChild(a);else if (4 !== d && (a = a.child, null !== a)) for (hj(a, b, c), a = a.sibling; null !== a;) {
    hj(a, b, c), a = a.sibling;
  }
}

function cj(a, b) {
  for (var c = b, d = !1, e, f;;) {
    if (!d) {
      d = c.return;

      a: for (;;) {
        if (null === d) throw Error(y(160));
        e = d.stateNode;

        switch (d.tag) {
          case 5:
            f = !1;
            break a;

          case 3:
            e = e.containerInfo;
            f = !0;
            break a;

          case 4:
            e = e.containerInfo;
            f = !0;
            break a;
        }

        d = d.return;
      }

      d = !0;
    }

    if (5 === c.tag || 6 === c.tag) {
      a: for (var g = a, h = c, k = h;;) {
        if (bj(g, k), null !== k.child && 4 !== k.tag) k.child.return = k, k = k.child;else {
          if (k === h) break a;

          for (; null === k.sibling;) {
            if (null === k.return || k.return === h) break a;
            k = k.return;
          }

          k.sibling.return = k.return;
          k = k.sibling;
        }
      }

      f ? (g = e, h = c.stateNode, 8 === g.nodeType ? g.parentNode.removeChild(h) : g.removeChild(h)) : e.removeChild(c.stateNode);
    } else if (4 === c.tag) {
      if (null !== c.child) {
        e = c.stateNode.containerInfo;
        f = !0;
        c.child.return = c;
        c = c.child;
        continue;
      }
    } else if (bj(a, c), null !== c.child) {
      c.child.return = c;
      c = c.child;
      continue;
    }

    if (c === b) break;

    for (; null === c.sibling;) {
      if (null === c.return || c.return === b) return;
      c = c.return;
      4 === c.tag && (d = !1);
    }

    c.sibling.return = c.return;
    c = c.sibling;
  }
}

function ij(a, b) {
  switch (b.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
    case 22:
      var c = b.updateQueue;
      c = null !== c ? c.lastEffect : null;

      if (null !== c) {
        var d = c = c.next;

        do {
          3 === (d.tag & 3) && (a = d.destroy, d.destroy = void 0, void 0 !== a && a()), d = d.next;
        } while (d !== c);
      }

      return;

    case 1:
      return;

    case 5:
      c = b.stateNode;

      if (null != c) {
        d = b.memoizedProps;
        var e = null !== a ? a.memoizedProps : d;
        a = b.type;
        var f = b.updateQueue;
        b.updateQueue = null;

        if (null !== f) {
          c[xf] = d;
          "input" === a && "radio" === d.type && null != d.name && $a(c, d);
          wb(a, e);
          b = wb(a, d);

          for (e = 0; e < f.length; e += 2) {
            var g = f[e],
                h = f[e + 1];
            "style" === g ? tb(c, h) : "dangerouslySetInnerHTML" === g ? ob(c, h) : "children" === g ? pb(c, h) : qa(c, g, h, b);
          }

          switch (a) {
            case "input":
              ab(c, d);
              break;

            case "textarea":
              ib(c, d);
              break;

            case "select":
              a = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, f = d.value, null != f ? fb(c, !!d.multiple, f, !1) : a !== !!d.multiple && (null != d.defaultValue ? fb(c, !!d.multiple, d.defaultValue, !0) : fb(c, !!d.multiple, d.multiple ? [] : "", !1));
          }
        }
      }

      return;

    case 6:
      if (null === b.stateNode) throw Error(y(162));
      b.stateNode.nodeValue = b.memoizedProps;
      return;

    case 3:
      c = b.stateNode;
      c.hydrate && (c.hydrate = !1, Cc(c.containerInfo));
      return;

    case 12:
      return;

    case 13:
      null !== b.memoizedState && (jj = O(), aj(b.child, !0));
      kj(b);
      return;

    case 19:
      kj(b);
      return;

    case 17:
      return;

    case 23:
    case 24:
      aj(b, null !== b.memoizedState);
      return;
  }

  throw Error(y(163));
}

function kj(a) {
  var b = a.updateQueue;

  if (null !== b) {
    a.updateQueue = null;
    var c = a.stateNode;
    null === c && (c = a.stateNode = new Ui());
    b.forEach(function (b) {
      var d = lj.bind(null, a, b);
      c.has(b) || (c.add(b), b.then(d, d));
    });
  }
}

function mj(a, b) {
  return null !== a && (a = a.memoizedState, null === a || null !== a.dehydrated) ? (b = b.memoizedState, null !== b && null === b.dehydrated) : !1;
}

var nj = Math.ceil,
    oj = ra.ReactCurrentDispatcher,
    pj = ra.ReactCurrentOwner,
    X = 0,
    U = null,
    Y = null,
    W = 0,
    qj = 0,
    rj = Bf(0),
    V = 0,
    sj = null,
    tj = 0,
    Dg = 0,
    Hi = 0,
    uj = 0,
    vj = null,
    jj = 0,
    Ji = Infinity;

function wj() {
  Ji = O() + 500;
}

var Z = null,
    Qi = !1,
    Ri = null,
    Ti = null,
    xj = !1,
    yj = null,
    zj = 90,
    Aj = [],
    Bj = [],
    Cj = null,
    Dj = 0,
    Ej = null,
    Fj = -1,
    Gj = 0,
    Hj = 0,
    Ij = null,
    Jj = !1;

function Hg() {
  return 0 !== (X & 48) ? O() : -1 !== Fj ? Fj : Fj = O();
}

function Ig(a) {
  a = a.mode;
  if (0 === (a & 2)) return 1;
  if (0 === (a & 4)) return 99 === eg() ? 1 : 2;
  0 === Gj && (Gj = tj);

  if (0 !== kg.transition) {
    0 !== Hj && (Hj = null !== vj ? vj.pendingLanes : 0);
    a = Gj;
    var b = 4186112 & ~Hj;
    b &= -b;
    0 === b && (a = 4186112 & ~a, b = a & -a, 0 === b && (b = 8192));
    return b;
  }

  a = eg();
  0 !== (X & 4) && 98 === a ? a = Xc(12, Gj) : (a = Sc(a), a = Xc(a, Gj));
  return a;
}

function Jg(a, b, c) {
  if (50 < Dj) throw Dj = 0, Ej = null, Error(y(185));
  a = Kj(a, b);
  if (null === a) return null;
  $c(a, b, c);
  a === U && (Hi |= b, 4 === V && Ii(a, W));
  var d = eg();
  1 === b ? 0 !== (X & 8) && 0 === (X & 48) ? Lj(a) : (Mj(a, c), 0 === X && (wj(), ig())) : (0 === (X & 4) || 98 !== d && 99 !== d || (null === Cj ? Cj = new Set([a]) : Cj.add(a)), Mj(a, c));
  vj = a;
}

function Kj(a, b) {
  a.lanes |= b;
  var c = a.alternate;
  null !== c && (c.lanes |= b);
  c = a;

  for (a = a.return; null !== a;) {
    a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
  }

  return 3 === c.tag ? c.stateNode : null;
}

function Mj(a, b) {
  for (var c = a.callbackNode, d = a.suspendedLanes, e = a.pingedLanes, f = a.expirationTimes, g = a.pendingLanes; 0 < g;) {
    var h = 31 - Vc(g),
        k = 1 << h,
        l = f[h];

    if (-1 === l) {
      if (0 === (k & d) || 0 !== (k & e)) {
        l = b;
        Rc(k);
        var n = F;
        f[h] = 10 <= n ? l + 250 : 6 <= n ? l + 5E3 : -1;
      }
    } else l <= b && (a.expiredLanes |= k);

    g &= ~k;
  }

  d = Uc(a, a === U ? W : 0);
  b = F;
  if (0 === d) null !== c && (c !== Zf && Pf(c), a.callbackNode = null, a.callbackPriority = 0);else {
    if (null !== c) {
      if (a.callbackPriority === b) return;
      c !== Zf && Pf(c);
    }

    15 === b ? (c = Lj.bind(null, a), null === ag ? (ag = [c], bg = Of(Uf, jg)) : ag.push(c), c = Zf) : 14 === b ? c = hg(99, Lj.bind(null, a)) : (c = Tc(b), c = hg(c, Nj.bind(null, a)));
    a.callbackPriority = b;
    a.callbackNode = c;
  }
}

function Nj(a) {
  Fj = -1;
  Hj = Gj = 0;
  if (0 !== (X & 48)) throw Error(y(327));
  var b = a.callbackNode;
  if (Oj() && a.callbackNode !== b) return null;
  var c = Uc(a, a === U ? W : 0);
  if (0 === c) return null;
  var d = c;
  var e = X;
  X |= 16;
  var f = Pj();
  if (U !== a || W !== d) wj(), Qj(a, d);

  do {
    try {
      Rj();
      break;
    } catch (h) {
      Sj(a, h);
    }
  } while (1);

  qg();
  oj.current = f;
  X = e;
  null !== Y ? d = 0 : (U = null, W = 0, d = V);
  if (0 !== (tj & Hi)) Qj(a, 0);else if (0 !== d) {
    2 === d && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), c = Wc(a), 0 !== c && (d = Tj(a, c)));
    if (1 === d) throw b = sj, Qj(a, 0), Ii(a, c), Mj(a, O()), b;
    a.finishedWork = a.current.alternate;
    a.finishedLanes = c;

    switch (d) {
      case 0:
      case 1:
        throw Error(y(345));

      case 2:
        Uj(a);
        break;

      case 3:
        Ii(a, c);

        if ((c & 62914560) === c && (d = jj + 500 - O(), 10 < d)) {
          if (0 !== Uc(a, 0)) break;
          e = a.suspendedLanes;

          if ((e & c) !== c) {
            Hg();
            a.pingedLanes |= a.suspendedLanes & e;
            break;
          }

          a.timeoutHandle = of(Uj.bind(null, a), d);
          break;
        }

        Uj(a);
        break;

      case 4:
        Ii(a, c);
        if ((c & 4186112) === c) break;
        d = a.eventTimes;

        for (e = -1; 0 < c;) {
          var g = 31 - Vc(c);
          f = 1 << g;
          g = d[g];
          g > e && (e = g);
          c &= ~f;
        }

        c = e;
        c = O() - c;
        c = (120 > c ? 120 : 480 > c ? 480 : 1080 > c ? 1080 : 1920 > c ? 1920 : 3E3 > c ? 3E3 : 4320 > c ? 4320 : 1960 * nj(c / 1960)) - c;

        if (10 < c) {
          a.timeoutHandle = of(Uj.bind(null, a), c);
          break;
        }

        Uj(a);
        break;

      case 5:
        Uj(a);
        break;

      default:
        throw Error(y(329));
    }
  }
  Mj(a, O());
  return a.callbackNode === b ? Nj.bind(null, a) : null;
}

function Ii(a, b) {
  b &= ~uj;
  b &= ~Hi;
  a.suspendedLanes |= b;
  a.pingedLanes &= ~b;

  for (a = a.expirationTimes; 0 < b;) {
    var c = 31 - Vc(b),
        d = 1 << c;
    a[c] = -1;
    b &= ~d;
  }
}

function Lj(a) {
  if (0 !== (X & 48)) throw Error(y(327));
  Oj();

  if (a === U && 0 !== (a.expiredLanes & W)) {
    var b = W;
    var c = Tj(a, b);
    0 !== (tj & Hi) && (b = Uc(a, b), c = Tj(a, b));
  } else b = Uc(a, 0), c = Tj(a, b);

  0 !== a.tag && 2 === c && (X |= 64, a.hydrate && (a.hydrate = !1, qf(a.containerInfo)), b = Wc(a), 0 !== b && (c = Tj(a, b)));
  if (1 === c) throw c = sj, Qj(a, 0), Ii(a, b), Mj(a, O()), c;
  a.finishedWork = a.current.alternate;
  a.finishedLanes = b;
  Uj(a);
  Mj(a, O());
  return null;
}

function Vj() {
  if (null !== Cj) {
    var a = Cj;
    Cj = null;
    a.forEach(function (a) {
      a.expiredLanes |= 24 & a.pendingLanes;
      Mj(a, O());
    });
  }

  ig();
}

function Wj(a, b) {
  var c = X;
  X |= 1;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
}

function Xj(a, b) {
  var c = X;
  X &= -2;
  X |= 8;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
}

function ni(a, b) {
  I(rj, qj);
  qj |= b;
  tj |= b;
}

function Ki() {
  qj = rj.current;
  H(rj);
}

function Qj(a, b) {
  a.finishedWork = null;
  a.finishedLanes = 0;
  var c = a.timeoutHandle;
  -1 !== c && (a.timeoutHandle = -1, pf(c));
  if (null !== Y) for (c = Y.return; null !== c;) {
    var d = c;

    switch (d.tag) {
      case 1:
        d = d.type.childContextTypes;
        null !== d && void 0 !== d && Gf();
        break;

      case 3:
        fh();
        H(N);
        H(M);
        uh();
        break;

      case 5:
        hh(d);
        break;

      case 4:
        fh();
        break;

      case 13:
        H(P);
        break;

      case 19:
        H(P);
        break;

      case 10:
        rg(d);
        break;

      case 23:
      case 24:
        Ki();
    }

    c = c.return;
  }
  U = a;
  Y = Tg(a.current, null);
  W = qj = tj = b;
  V = 0;
  sj = null;
  uj = Hi = Dg = 0;
}

function Sj(a, b) {
  do {
    var c = Y;

    try {
      qg();
      vh.current = Gh;

      if (yh) {
        for (var d = R.memoizedState; null !== d;) {
          var e = d.queue;
          null !== e && (e.pending = null);
          d = d.next;
        }

        yh = !1;
      }

      xh = 0;
      T = S = R = null;
      zh = !1;
      pj.current = null;

      if (null === c || null === c.return) {
        V = 1;
        sj = b;
        Y = null;
        break;
      }

      a: {
        var f = a,
            g = c.return,
            h = c,
            k = b;
        b = W;
        h.flags |= 2048;
        h.firstEffect = h.lastEffect = null;

        if (null !== k && "object" === typeof k && "function" === typeof k.then) {
          var l = k;

          if (0 === (h.mode & 2)) {
            var n = h.alternate;
            n ? (h.updateQueue = n.updateQueue, h.memoizedState = n.memoizedState, h.lanes = n.lanes) : (h.updateQueue = null, h.memoizedState = null);
          }

          var A = 0 !== (P.current & 1),
              p = g;

          do {
            var C;

            if (C = 13 === p.tag) {
              var x = p.memoizedState;
              if (null !== x) C = null !== x.dehydrated ? !0 : !1;else {
                var w = p.memoizedProps;
                C = void 0 === w.fallback ? !1 : !0 !== w.unstable_avoidThisFallback ? !0 : A ? !1 : !0;
              }
            }

            if (C) {
              var z = p.updateQueue;

              if (null === z) {
                var u = new Set();
                u.add(l);
                p.updateQueue = u;
              } else z.add(l);

              if (0 === (p.mode & 2)) {
                p.flags |= 64;
                h.flags |= 16384;
                h.flags &= -2981;
                if (1 === h.tag) if (null === h.alternate) h.tag = 17;else {
                  var t = zg(-1, 1);
                  t.tag = 2;
                  Ag(h, t);
                }
                h.lanes |= 1;
                break a;
              }

              k = void 0;
              h = b;
              var q = f.pingCache;
              null === q ? (q = f.pingCache = new Oi(), k = new Set(), q.set(l, k)) : (k = q.get(l), void 0 === k && (k = new Set(), q.set(l, k)));

              if (!k.has(h)) {
                k.add(h);
                var v = Yj.bind(null, f, l, h);
                l.then(v, v);
              }

              p.flags |= 4096;
              p.lanes = b;
              break a;
            }

            p = p.return;
          } while (null !== p);

          k = Error((Ra(h.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
        }

        5 !== V && (V = 2);
        k = Mi(k, h);
        p = g;

        do {
          switch (p.tag) {
            case 3:
              f = k;
              p.flags |= 4096;
              b &= -b;
              p.lanes |= b;
              var J = Pi(p, f, b);
              Bg(p, J);
              break a;

            case 1:
              f = k;
              var K = p.type,
                  Q = p.stateNode;

              if (0 === (p.flags & 64) && ("function" === typeof K.getDerivedStateFromError || null !== Q && "function" === typeof Q.componentDidCatch && (null === Ti || !Ti.has(Q)))) {
                p.flags |= 4096;
                b &= -b;
                p.lanes |= b;
                var L = Si(p, f, b);
                Bg(p, L);
                break a;
              }

          }

          p = p.return;
        } while (null !== p);
      }

      Zj(c);
    } catch (va) {
      b = va;
      Y === c && null !== c && (Y = c = c.return);
      continue;
    }

    break;
  } while (1);
}

function Pj() {
  var a = oj.current;
  oj.current = Gh;
  return null === a ? Gh : a;
}

function Tj(a, b) {
  var c = X;
  X |= 16;
  var d = Pj();
  U === a && W === b || Qj(a, b);

  do {
    try {
      ak();
      break;
    } catch (e) {
      Sj(a, e);
    }
  } while (1);

  qg();
  X = c;
  oj.current = d;
  if (null !== Y) throw Error(y(261));
  U = null;
  W = 0;
  return V;
}

function ak() {
  for (; null !== Y;) {
    bk(Y);
  }
}

function Rj() {
  for (; null !== Y && !Qf();) {
    bk(Y);
  }
}

function bk(a) {
  var b = ck(a.alternate, a, qj);
  a.memoizedProps = a.pendingProps;
  null === b ? Zj(a) : Y = b;
  pj.current = null;
}

function Zj(a) {
  var b = a;

  do {
    var c = b.alternate;
    a = b.return;

    if (0 === (b.flags & 2048)) {
      c = Gi(c, b, qj);

      if (null !== c) {
        Y = c;
        return;
      }

      c = b;

      if (24 !== c.tag && 23 !== c.tag || null === c.memoizedState || 0 !== (qj & 1073741824) || 0 === (c.mode & 4)) {
        for (var d = 0, e = c.child; null !== e;) {
          d |= e.lanes | e.childLanes, e = e.sibling;
        }

        c.childLanes = d;
      }

      null !== a && 0 === (a.flags & 2048) && (null === a.firstEffect && (a.firstEffect = b.firstEffect), null !== b.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = b.firstEffect), a.lastEffect = b.lastEffect), 1 < b.flags && (null !== a.lastEffect ? a.lastEffect.nextEffect = b : a.firstEffect = b, a.lastEffect = b));
    } else {
      c = Li(b);

      if (null !== c) {
        c.flags &= 2047;
        Y = c;
        return;
      }

      null !== a && (a.firstEffect = a.lastEffect = null, a.flags |= 2048);
    }

    b = b.sibling;

    if (null !== b) {
      Y = b;
      return;
    }

    Y = b = a;
  } while (null !== b);

  0 === V && (V = 5);
}

function Uj(a) {
  var b = eg();
  gg(99, dk.bind(null, a, b));
  return null;
}

function dk(a, b) {
  do {
    Oj();
  } while (null !== yj);

  if (0 !== (X & 48)) throw Error(y(327));
  var c = a.finishedWork;
  if (null === c) return null;
  a.finishedWork = null;
  a.finishedLanes = 0;
  if (c === a.current) throw Error(y(177));
  a.callbackNode = null;
  var d = c.lanes | c.childLanes,
      e = d,
      f = a.pendingLanes & ~e;
  a.pendingLanes = e;
  a.suspendedLanes = 0;
  a.pingedLanes = 0;
  a.expiredLanes &= e;
  a.mutableReadLanes &= e;
  a.entangledLanes &= e;
  e = a.entanglements;

  for (var g = a.eventTimes, h = a.expirationTimes; 0 < f;) {
    var k = 31 - Vc(f),
        l = 1 << k;
    e[k] = 0;
    g[k] = -1;
    h[k] = -1;
    f &= ~l;
  }

  null !== Cj && 0 === (d & 24) && Cj.has(a) && Cj.delete(a);
  a === U && (Y = U = null, W = 0);
  1 < c.flags ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, d = c.firstEffect) : d = c : d = c.firstEffect;

  if (null !== d) {
    e = X;
    X |= 32;
    pj.current = null;
    kf = fd;
    g = Ne();

    if (Oe(g)) {
      if ("selectionStart" in g) h = {
        start: g.selectionStart,
        end: g.selectionEnd
      };else a: if (h = (h = g.ownerDocument) && h.defaultView || window, (l = h.getSelection && h.getSelection()) && 0 !== l.rangeCount) {
        h = l.anchorNode;
        f = l.anchorOffset;
        k = l.focusNode;
        l = l.focusOffset;

        try {
          h.nodeType, k.nodeType;
        } catch (va) {
          h = null;
          break a;
        }

        var n = 0,
            A = -1,
            p = -1,
            C = 0,
            x = 0,
            w = g,
            z = null;

        b: for (;;) {
          for (var u;;) {
            w !== h || 0 !== f && 3 !== w.nodeType || (A = n + f);
            w !== k || 0 !== l && 3 !== w.nodeType || (p = n + l);
            3 === w.nodeType && (n += w.nodeValue.length);
            if (null === (u = w.firstChild)) break;
            z = w;
            w = u;
          }

          for (;;) {
            if (w === g) break b;
            z === h && ++C === f && (A = n);
            z === k && ++x === l && (p = n);
            if (null !== (u = w.nextSibling)) break;
            w = z;
            z = w.parentNode;
          }

          w = u;
        }

        h = -1 === A || -1 === p ? null : {
          start: A,
          end: p
        };
      } else h = null;
      h = h || {
        start: 0,
        end: 0
      };
    } else h = null;

    lf = {
      focusedElem: g,
      selectionRange: h
    };
    fd = !1;
    Ij = null;
    Jj = !1;
    Z = d;

    do {
      try {
        ek();
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    Ij = null;
    Z = d;

    do {
      try {
        for (g = a; null !== Z;) {
          var t = Z.flags;
          t & 16 && pb(Z.stateNode, "");

          if (t & 128) {
            var q = Z.alternate;

            if (null !== q) {
              var v = q.ref;
              null !== v && ("function" === typeof v ? v(null) : v.current = null);
            }
          }

          switch (t & 1038) {
            case 2:
              fj(Z);
              Z.flags &= -3;
              break;

            case 6:
              fj(Z);
              Z.flags &= -3;
              ij(Z.alternate, Z);
              break;

            case 1024:
              Z.flags &= -1025;
              break;

            case 1028:
              Z.flags &= -1025;
              ij(Z.alternate, Z);
              break;

            case 4:
              ij(Z.alternate, Z);
              break;

            case 8:
              h = Z;
              cj(g, h);
              var J = h.alternate;
              dj(h);
              null !== J && dj(J);
          }

          Z = Z.nextEffect;
        }
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    v = lf;
    q = Ne();
    t = v.focusedElem;
    g = v.selectionRange;

    if (q !== t && t && t.ownerDocument && Me(t.ownerDocument.documentElement, t)) {
      null !== g && Oe(t) && (q = g.start, v = g.end, void 0 === v && (v = q), "selectionStart" in t ? (t.selectionStart = q, t.selectionEnd = Math.min(v, t.value.length)) : (v = (q = t.ownerDocument || document) && q.defaultView || window, v.getSelection && (v = v.getSelection(), h = t.textContent.length, J = Math.min(g.start, h), g = void 0 === g.end ? J : Math.min(g.end, h), !v.extend && J > g && (h = g, g = J, J = h), h = Le(t, J), f = Le(t, g), h && f && (1 !== v.rangeCount || v.anchorNode !== h.node || v.anchorOffset !== h.offset || v.focusNode !== f.node || v.focusOffset !== f.offset) && (q = q.createRange(), q.setStart(h.node, h.offset), v.removeAllRanges(), J > g ? (v.addRange(q), v.extend(f.node, f.offset)) : (q.setEnd(f.node, f.offset), v.addRange(q))))));
      q = [];

      for (v = t; v = v.parentNode;) {
        1 === v.nodeType && q.push({
          element: v,
          left: v.scrollLeft,
          top: v.scrollTop
        });
      }

      "function" === typeof t.focus && t.focus();

      for (t = 0; t < q.length; t++) {
        v = q[t], v.element.scrollLeft = v.left, v.element.scrollTop = v.top;
      }
    }

    fd = !!kf;
    lf = kf = null;
    a.current = c;
    Z = d;

    do {
      try {
        for (t = a; null !== Z;) {
          var K = Z.flags;
          K & 36 && Yi(t, Z.alternate, Z);

          if (K & 128) {
            q = void 0;
            var Q = Z.ref;

            if (null !== Q) {
              var L = Z.stateNode;

              switch (Z.tag) {
                case 5:
                  q = L;
                  break;

                default:
                  q = L;
              }

              "function" === typeof Q ? Q(q) : Q.current = q;
            }
          }

          Z = Z.nextEffect;
        }
      } catch (va) {
        if (null === Z) throw Error(y(330));
        Wi(Z, va);
        Z = Z.nextEffect;
      }
    } while (null !== Z);

    Z = null;
    $f();
    X = e;
  } else a.current = c;

  if (xj) xj = !1, yj = a, zj = b;else for (Z = d; null !== Z;) {
    b = Z.nextEffect, Z.nextEffect = null, Z.flags & 8 && (K = Z, K.sibling = null, K.stateNode = null), Z = b;
  }
  d = a.pendingLanes;
  0 === d && (Ti = null);
  1 === d ? a === Ej ? Dj++ : (Dj = 0, Ej = a) : Dj = 0;
  c = c.stateNode;
  if (Mf && "function" === typeof Mf.onCommitFiberRoot) try {
    Mf.onCommitFiberRoot(Lf, c, void 0, 64 === (c.current.flags & 64));
  } catch (va) {}
  Mj(a, O());
  if (Qi) throw Qi = !1, a = Ri, Ri = null, a;
  if (0 !== (X & 8)) return null;
  ig();
  return null;
}

function ek() {
  for (; null !== Z;) {
    var a = Z.alternate;
    Jj || null === Ij || (0 !== (Z.flags & 8) ? dc(Z, Ij) && (Jj = !0) : 13 === Z.tag && mj(a, Z) && dc(Z, Ij) && (Jj = !0));
    var b = Z.flags;
    0 !== (b & 256) && Xi(a, Z);
    0 === (b & 512) || xj || (xj = !0, hg(97, function () {
      Oj();
      return null;
    }));
    Z = Z.nextEffect;
  }
}

function Oj() {
  if (90 !== zj) {
    var a = 97 < zj ? 97 : zj;
    zj = 90;
    return gg(a, fk);
  }

  return !1;
}

function $i(a, b) {
  Aj.push(b, a);
  xj || (xj = !0, hg(97, function () {
    Oj();
    return null;
  }));
}

function Zi(a, b) {
  Bj.push(b, a);
  xj || (xj = !0, hg(97, function () {
    Oj();
    return null;
  }));
}

function fk() {
  if (null === yj) return !1;
  var a = yj;
  yj = null;
  if (0 !== (X & 48)) throw Error(y(331));
  var b = X;
  X |= 32;
  var c = Bj;
  Bj = [];

  for (var d = 0; d < c.length; d += 2) {
    var e = c[d],
        f = c[d + 1],
        g = e.destroy;
    e.destroy = void 0;
    if ("function" === typeof g) try {
      g();
    } catch (k) {
      if (null === f) throw Error(y(330));
      Wi(f, k);
    }
  }

  c = Aj;
  Aj = [];

  for (d = 0; d < c.length; d += 2) {
    e = c[d];
    f = c[d + 1];

    try {
      var h = e.create;
      e.destroy = h();
    } catch (k) {
      if (null === f) throw Error(y(330));
      Wi(f, k);
    }
  }

  for (h = a.current.firstEffect; null !== h;) {
    a = h.nextEffect, h.nextEffect = null, h.flags & 8 && (h.sibling = null, h.stateNode = null), h = a;
  }

  X = b;
  ig();
  return !0;
}

function gk(a, b, c) {
  b = Mi(c, b);
  b = Pi(a, b, 1);
  Ag(a, b);
  b = Hg();
  a = Kj(a, 1);
  null !== a && ($c(a, 1, b), Mj(a, b));
}

function Wi(a, b) {
  if (3 === a.tag) gk(a, a, b);else for (var c = a.return; null !== c;) {
    if (3 === c.tag) {
      gk(c, a, b);
      break;
    } else if (1 === c.tag) {
      var d = c.stateNode;

      if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d))) {
        a = Mi(b, a);
        var e = Si(c, a, 1);
        Ag(c, e);
        e = Hg();
        c = Kj(c, 1);
        if (null !== c) $c(c, 1, e), Mj(c, e);else if ("function" === typeof d.componentDidCatch && (null === Ti || !Ti.has(d))) try {
          d.componentDidCatch(b, a);
        } catch (f) {}
        break;
      }
    }

    c = c.return;
  }
}

function Yj(a, b, c) {
  var d = a.pingCache;
  null !== d && d.delete(b);
  b = Hg();
  a.pingedLanes |= a.suspendedLanes & c;
  U === a && (W & c) === c && (4 === V || 3 === V && (W & 62914560) === W && 500 > O() - jj ? Qj(a, 0) : uj |= c);
  Mj(a, b);
}

function lj(a, b) {
  var c = a.stateNode;
  null !== c && c.delete(b);
  b = 0;
  0 === b && (b = a.mode, 0 === (b & 2) ? b = 1 : 0 === (b & 4) ? b = 99 === eg() ? 1 : 2 : (0 === Gj && (Gj = tj), b = Yc(62914560 & ~Gj), 0 === b && (b = 4194304)));
  c = Hg();
  a = Kj(a, b);
  null !== a && ($c(a, b, c), Mj(a, c));
}

var ck;

ck = function ck(a, b, c) {
  var d = b.lanes;
  if (null !== a) {
    if (a.memoizedProps !== b.pendingProps || N.current) ug = !0;else if (0 !== (c & d)) ug = 0 !== (a.flags & 16384) ? !0 : !1;else {
      ug = !1;

      switch (b.tag) {
        case 3:
          ri(b);
          sh();
          break;

        case 5:
          gh(b);
          break;

        case 1:
          Ff(b.type) && Jf(b);
          break;

        case 4:
          eh(b, b.stateNode.containerInfo);
          break;

        case 10:
          d = b.memoizedProps.value;
          var e = b.type._context;
          I(mg, e._currentValue);
          e._currentValue = d;
          break;

        case 13:
          if (null !== b.memoizedState) {
            if (0 !== (c & b.child.childLanes)) return ti(a, b, c);
            I(P, P.current & 1);
            b = hi(a, b, c);
            return null !== b ? b.sibling : null;
          }

          I(P, P.current & 1);
          break;

        case 19:
          d = 0 !== (c & b.childLanes);

          if (0 !== (a.flags & 64)) {
            if (d) return Ai(a, b, c);
            b.flags |= 64;
          }

          e = b.memoizedState;
          null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
          I(P, P.current);
          if (d) break;else return null;

        case 23:
        case 24:
          return b.lanes = 0, mi(a, b, c);
      }

      return hi(a, b, c);
    }
  } else ug = !1;
  b.lanes = 0;

  switch (b.tag) {
    case 2:
      d = b.type;
      null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
      a = b.pendingProps;
      e = Ef(b, M.current);
      tg(b, c);
      e = Ch(null, b, d, a, e, c);
      b.flags |= 1;

      if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
        b.tag = 1;
        b.memoizedState = null;
        b.updateQueue = null;

        if (Ff(d)) {
          var f = !0;
          Jf(b);
        } else f = !1;

        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
        xg(b);
        var g = d.getDerivedStateFromProps;
        "function" === typeof g && Gg(b, d, g, a);
        e.updater = Kg;
        b.stateNode = e;
        e._reactInternals = b;
        Og(b, d, a, c);
        b = qi(null, b, d, !0, f, c);
      } else b.tag = 0, fi(null, b, e, c), b = b.child;

      return b;

    case 16:
      e = b.elementType;

      a: {
        null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
        a = b.pendingProps;
        f = e._init;
        e = f(e._payload);
        b.type = e;
        f = b.tag = hk(e);
        a = lg(e, a);

        switch (f) {
          case 0:
            b = li(null, b, e, a, c);
            break a;

          case 1:
            b = pi(null, b, e, a, c);
            break a;

          case 11:
            b = gi(null, b, e, a, c);
            break a;

          case 14:
            b = ii(null, b, e, lg(e.type, a), d, c);
            break a;
        }

        throw Error(y(306, e, ""));
      }

      return b;

    case 0:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), li(a, b, d, e, c);

    case 1:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), pi(a, b, d, e, c);

    case 3:
      ri(b);
      d = b.updateQueue;
      if (null === a || null === d) throw Error(y(282));
      d = b.pendingProps;
      e = b.memoizedState;
      e = null !== e ? e.element : null;
      yg(a, b);
      Cg(b, d, null, c);
      d = b.memoizedState.element;
      if (d === e) sh(), b = hi(a, b, c);else {
        e = b.stateNode;
        if (f = e.hydrate) kh = rf(b.stateNode.containerInfo.firstChild), jh = b, f = lh = !0;

        if (f) {
          a = e.mutableSourceEagerHydrationData;
          if (null != a) for (e = 0; e < a.length; e += 2) {
            f = a[e], f._workInProgressVersionPrimary = a[e + 1], th.push(f);
          }
          c = Zg(b, null, d, c);

          for (b.child = c; c;) {
            c.flags = c.flags & -3 | 1024, c = c.sibling;
          }
        } else fi(a, b, d, c), sh();

        b = b.child;
      }
      return b;

    case 5:
      return gh(b), null === a && ph(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, nf(d, e) ? g = null : null !== f && nf(d, f) && (b.flags |= 16), oi(a, b), fi(a, b, g, c), b.child;

    case 6:
      return null === a && ph(b), null;

    case 13:
      return ti(a, b, c);

    case 4:
      return eh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Yg(b, null, d, c) : fi(a, b, d, c), b.child;

    case 11:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), gi(a, b, d, e, c);

    case 7:
      return fi(a, b, b.pendingProps, c), b.child;

    case 8:
      return fi(a, b, b.pendingProps.children, c), b.child;

    case 12:
      return fi(a, b, b.pendingProps.children, c), b.child;

    case 10:
      a: {
        d = b.type._context;
        e = b.pendingProps;
        g = b.memoizedProps;
        f = e.value;
        var h = b.type._context;
        I(mg, h._currentValue);
        h._currentValue = f;
        if (null !== g) if (h = g.value, f = He(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0, 0 === f) {
          if (g.children === e.children && !N.current) {
            b = hi(a, b, c);
            break a;
          }
        } else for (h = b.child, null !== h && (h.return = b); null !== h;) {
          var k = h.dependencies;

          if (null !== k) {
            g = h.child;

            for (var l = k.firstContext; null !== l;) {
              if (l.context === d && 0 !== (l.observedBits & f)) {
                1 === h.tag && (l = zg(-1, c & -c), l.tag = 2, Ag(h, l));
                h.lanes |= c;
                l = h.alternate;
                null !== l && (l.lanes |= c);
                sg(h.return, c);
                k.lanes |= c;
                break;
              }

              l = l.next;
            }
          } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;

          if (null !== g) g.return = h;else for (g = h; null !== g;) {
            if (g === b) {
              g = null;
              break;
            }

            h = g.sibling;

            if (null !== h) {
              h.return = g.return;
              g = h;
              break;
            }

            g = g.return;
          }
          h = g;
        }
        fi(a, b, e.children, c);
        b = b.child;
      }

      return b;

    case 9:
      return e = b.type, f = b.pendingProps, d = f.children, tg(b, c), e = vg(e, f.unstable_observedBits), d = d(e), b.flags |= 1, fi(a, b, d, c), b.child;

    case 14:
      return e = b.type, f = lg(e, b.pendingProps), f = lg(e.type, f), ii(a, b, e, f, d, c);

    case 15:
      return ki(a, b, b.type, b.pendingProps, d, c);

    case 17:
      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : lg(d, e), null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), b.tag = 1, Ff(d) ? (a = !0, Jf(b)) : a = !1, tg(b, c), Mg(b, d, e), Og(b, d, e, c), qi(null, b, d, !0, a, c);

    case 19:
      return Ai(a, b, c);

    case 23:
      return mi(a, b, c);

    case 24:
      return mi(a, b, c);
  }

  throw Error(y(156, b.tag));
};

function ik(a, b, c, d) {
  this.tag = a;
  this.key = c;
  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
  this.index = 0;
  this.ref = null;
  this.pendingProps = b;
  this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
  this.mode = d;
  this.flags = 0;
  this.lastEffect = this.firstEffect = this.nextEffect = null;
  this.childLanes = this.lanes = 0;
  this.alternate = null;
}

function nh(a, b, c, d) {
  return new ik(a, b, c, d);
}

function ji(a) {
  a = a.prototype;
  return !(!a || !a.isReactComponent);
}

function hk(a) {
  if ("function" === typeof a) return ji(a) ? 1 : 0;

  if (void 0 !== a && null !== a) {
    a = a.$$typeof;
    if (a === Aa) return 11;
    if (a === Da) return 14;
  }

  return 2;
}

function Tg(a, b) {
  var c = a.alternate;
  null === c ? (c = nh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
  c.childLanes = a.childLanes;
  c.lanes = a.lanes;
  c.child = a.child;
  c.memoizedProps = a.memoizedProps;
  c.memoizedState = a.memoizedState;
  c.updateQueue = a.updateQueue;
  b = a.dependencies;
  c.dependencies = null === b ? null : {
    lanes: b.lanes,
    firstContext: b.firstContext
  };
  c.sibling = a.sibling;
  c.index = a.index;
  c.ref = a.ref;
  return c;
}

function Vg(a, b, c, d, e, f) {
  var g = 2;
  d = a;
  if ("function" === typeof a) ji(a) && (g = 1);else if ("string" === typeof a) g = 5;else a: switch (a) {
    case ua:
      return Xg(c.children, e, f, b);

    case Ha:
      g = 8;
      e |= 16;
      break;

    case wa:
      g = 8;
      e |= 1;
      break;

    case xa:
      return a = nh(12, c, b, e | 8), a.elementType = xa, a.type = xa, a.lanes = f, a;

    case Ba:
      return a = nh(13, c, b, e), a.type = Ba, a.elementType = Ba, a.lanes = f, a;

    case Ca:
      return a = nh(19, c, b, e), a.elementType = Ca, a.lanes = f, a;

    case Ia:
      return vi(c, e, f, b);

    case Ja:
      return a = nh(24, c, b, e), a.elementType = Ja, a.lanes = f, a;

    default:
      if ("object" === typeof a && null !== a) switch (a.$$typeof) {
        case ya:
          g = 10;
          break a;

        case za:
          g = 9;
          break a;

        case Aa:
          g = 11;
          break a;

        case Da:
          g = 14;
          break a;

        case Ea:
          g = 16;
          d = null;
          break a;

        case Fa:
          g = 22;
          break a;
      }
      throw Error(y(130, null == a ? a : typeof a, ""));
  }
  b = nh(g, c, b, e);
  b.elementType = a;
  b.type = d;
  b.lanes = f;
  return b;
}

function Xg(a, b, c, d) {
  a = nh(7, a, d, b);
  a.lanes = c;
  return a;
}

function vi(a, b, c, d) {
  a = nh(23, a, d, b);
  a.elementType = Ia;
  a.lanes = c;
  return a;
}

function Ug(a, b, c) {
  a = nh(6, a, null, b);
  a.lanes = c;
  return a;
}

function Wg(a, b, c) {
  b = nh(4, null !== a.children ? a.children : [], a.key, b);
  b.lanes = c;
  b.stateNode = {
    containerInfo: a.containerInfo,
    pendingChildren: null,
    implementation: a.implementation
  };
  return b;
}

function jk(a, b, c) {
  this.tag = b;
  this.containerInfo = a;
  this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
  this.timeoutHandle = -1;
  this.pendingContext = this.context = null;
  this.hydrate = c;
  this.callbackNode = null;
  this.callbackPriority = 0;
  this.eventTimes = Zc(0);
  this.expirationTimes = Zc(-1);
  this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
  this.entanglements = Zc(0);
  this.mutableSourceEagerHydrationData = null;
}

function kk(a, b, c) {
  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
  return {
    $$typeof: ta,
    key: null == d ? null : "" + d,
    children: a,
    containerInfo: b,
    implementation: c
  };
}

function lk(a, b, c, d) {
  var e = b.current,
      f = Hg(),
      g = Ig(e);

  a: if (c) {
    c = c._reactInternals;

    b: {
      if (Zb(c) !== c || 1 !== c.tag) throw Error(y(170));
      var h = c;

      do {
        switch (h.tag) {
          case 3:
            h = h.stateNode.context;
            break b;

          case 1:
            if (Ff(h.type)) {
              h = h.stateNode.__reactInternalMemoizedMergedChildContext;
              break b;
            }

        }

        h = h.return;
      } while (null !== h);

      throw Error(y(171));
    }

    if (1 === c.tag) {
      var k = c.type;

      if (Ff(k)) {
        c = If(c, k, h);
        break a;
      }
    }

    c = h;
  } else c = Cf;

  null === b.context ? b.context = c : b.pendingContext = c;
  b = zg(f, g);
  b.payload = {
    element: a
  };
  d = void 0 === d ? null : d;
  null !== d && (b.callback = d);
  Ag(e, b);
  Jg(e, g, f);
  return g;
}

function mk(a) {
  a = a.current;
  if (!a.child) return null;

  switch (a.child.tag) {
    case 5:
      return a.child.stateNode;

    default:
      return a.child.stateNode;
  }
}

function nk(a, b) {
  a = a.memoizedState;

  if (null !== a && null !== a.dehydrated) {
    var c = a.retryLane;
    a.retryLane = 0 !== c && c < b ? c : b;
  }
}

function ok(a, b) {
  nk(a, b);
  (a = a.alternate) && nk(a, b);
}

function pk() {
  return null;
}

function qk(a, b, c) {
  var d = null != c && null != c.hydrationOptions && c.hydrationOptions.mutableSources || null;
  c = new jk(a, b, null != c && !0 === c.hydrate);
  b = nh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
  c.current = b;
  b.stateNode = c;
  xg(b);
  a[ff] = c.current;
  cf(8 === a.nodeType ? a.parentNode : a);
  if (d) for (a = 0; a < d.length; a++) {
    b = d[a];
    var e = b._getVersion;
    e = e(b._source);
    null == c.mutableSourceEagerHydrationData ? c.mutableSourceEagerHydrationData = [b, e] : c.mutableSourceEagerHydrationData.push(b, e);
  }
  this._internalRoot = c;
}

qk.prototype.render = function (a) {
  lk(a, this._internalRoot, null, null);
};

qk.prototype.unmount = function () {
  var a = this._internalRoot,
      b = a.containerInfo;
  lk(null, a, null, function () {
    b[ff] = null;
  });
};

function rk(a) {
  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}

function sk(a, b) {
  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
  if (!b) for (var c; c = a.lastChild;) {
    a.removeChild(c);
  }
  return new qk(a, 0, b ? {
    hydrate: !0
  } : void 0);
}

function tk(a, b, c, d, e) {
  var f = c._reactRootContainer;

  if (f) {
    var g = f._internalRoot;

    if ("function" === typeof e) {
      var h = e;

      e = function e() {
        var a = mk(g);
        h.call(a);
      };
    }

    lk(b, g, a, e);
  } else {
    f = c._reactRootContainer = sk(c, d);
    g = f._internalRoot;

    if ("function" === typeof e) {
      var k = e;

      e = function e() {
        var a = mk(g);
        k.call(a);
      };
    }

    Xj(function () {
      lk(b, g, a, e);
    });
  }

  return mk(g);
}

ec = function ec(a) {
  if (13 === a.tag) {
    var b = Hg();
    Jg(a, 4, b);
    ok(a, 4);
  }
};

fc = function fc(a) {
  if (13 === a.tag) {
    var b = Hg();
    Jg(a, 67108864, b);
    ok(a, 67108864);
  }
};

gc = function gc(a) {
  if (13 === a.tag) {
    var b = Hg(),
        c = Ig(a);
    Jg(a, c, b);
    ok(a, c);
  }
};

hc = function hc(a, b) {
  return b();
};

yb = function yb(a, b, c) {
  switch (b) {
    case "input":
      ab(a, c);
      b = c.name;

      if ("radio" === c.type && null != b) {
        for (c = a; c.parentNode;) {
          c = c.parentNode;
        }

        c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');

        for (b = 0; b < c.length; b++) {
          var d = c[b];

          if (d !== a && d.form === a.form) {
            var e = Db(d);
            if (!e) throw Error(y(90));
            Wa(d);
            ab(d, e);
          }
        }
      }

      break;

    case "textarea":
      ib(a, c);
      break;

    case "select":
      b = c.value, null != b && fb(a, !!c.multiple, b, !1);
  }
};

Gb = Wj;

Hb = function Hb(a, b, c, d, e) {
  var f = X;
  X |= 4;

  try {
    return gg(98, a.bind(null, b, c, d, e));
  } finally {
    X = f, 0 === X && (wj(), ig());
  }
};

Ib = function Ib() {
  0 === (X & 49) && (Vj(), Oj());
};

Jb = function Jb(a, b) {
  var c = X;
  X |= 2;

  try {
    return a(b);
  } finally {
    X = c, 0 === X && (wj(), ig());
  }
};

function uk(a, b) {
  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
  if (!rk(b)) throw Error(y(200));
  return kk(a, b, null, c);
}

var vk = {
  Events: [Cb, ue, Db, Eb, Fb, Oj, {
    current: !1
  }]
},
    wk = {
  findFiberByHostInstance: wc,
  bundleType: 0,
  version: "17.0.2",
  rendererPackageName: "react-dom"
};
var xk = {
  bundleType: wk.bundleType,
  version: wk.version,
  rendererPackageName: wk.rendererPackageName,
  rendererConfig: wk.rendererConfig,
  overrideHookState: null,
  overrideHookStateDeletePath: null,
  overrideHookStateRenamePath: null,
  overrideProps: null,
  overridePropsDeletePath: null,
  overridePropsRenamePath: null,
  setSuspenseHandler: null,
  scheduleUpdate: null,
  currentDispatcherRef: ra.ReactCurrentDispatcher,
  findHostInstanceByFiber: function findHostInstanceByFiber(a) {
    a = cc(a);
    return null === a ? null : a.stateNode;
  },
  findFiberByHostInstance: wk.findFiberByHostInstance || pk,
  findHostInstancesForRefresh: null,
  scheduleRefresh: null,
  scheduleRoot: null,
  setRefreshHandler: null,
  getCurrentFiber: null
};

if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
  var yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!yk.isDisabled && yk.supportsFiber) try {
    Lf = yk.inject(xk), Mf = yk;
  } catch (a) {}
}

exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = vk;
exports.createPortal = uk;

exports.findDOMNode = function (a) {
  if (null == a) return null;
  if (1 === a.nodeType) return a;
  var b = a._reactInternals;

  if (void 0 === b) {
    if ("function" === typeof a.render) throw Error(y(188));
    throw Error(y(268, Object.keys(a)));
  }

  a = cc(b);
  a = null === a ? null : a.stateNode;
  return a;
};

exports.flushSync = function (a, b) {
  var c = X;
  if (0 !== (c & 48)) return a(b);
  X |= 1;

  try {
    if (a) return gg(99, a.bind(null, b));
  } finally {
    X = c, ig();
  }
};

exports.hydrate = function (a, b, c) {
  if (!rk(b)) throw Error(y(200));
  return tk(null, a, b, !0, c);
};

exports.render = function (a, b, c) {
  if (!rk(b)) throw Error(y(200));
  return tk(null, a, b, !1, c);
};

exports.unmountComponentAtNode = function (a) {
  if (!rk(a)) throw Error(y(40));
  return a._reactRootContainer ? (Xj(function () {
    tk(null, null, a, !1, function () {
      a._reactRootContainer = null;
      a[ff] = null;
    });
  }), !0) : !1;
};

exports.unstable_batchedUpdates = Wj;

exports.unstable_createPortal = function (a, b) {
  return uk(a, b, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null);
};

exports.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
  if (!rk(c)) throw Error(y(200));
  if (null == a || void 0 === a._reactInternals) throw Error(y(38));
  return tk(a, b, c, !1, d);
};

exports.version = "17.0.2";

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (true) {
  module.exports = __webpack_require__(61);
} else {}

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _f, g, h, k;

if ("object" === typeof performance && "function" === typeof performance.now) {
  var l = performance;

  exports.unstable_now = function () {
    return l.now();
  };
} else {
  var p = Date,
      q = p.now();

  exports.unstable_now = function () {
    return p.now() - q;
  };
}

if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
  var t = null,
      u = null,
      w = function w() {
    if (null !== t) try {
      var a = exports.unstable_now();
      t(!0, a);
      t = null;
    } catch (b) {
      throw setTimeout(w, 0), b;
    }
  };

  _f = function f(a) {
    null !== t ? setTimeout(_f, 0, a) : (t = a, setTimeout(w, 0));
  };

  g = function g(a, b) {
    u = setTimeout(a, b);
  };

  h = function h() {
    clearTimeout(u);
  };

  exports.unstable_shouldYield = function () {
    return !1;
  };

  k = exports.unstable_forceFrameRate = function () {};
} else {
  var x = window.setTimeout,
      y = window.clearTimeout;

  if ("undefined" !== typeof console) {
    var z = window.cancelAnimationFrame;
    "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    "function" !== typeof z && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
  }

  var A = !1,
      B = null,
      C = -1,
      D = 5,
      E = 0;

  exports.unstable_shouldYield = function () {
    return exports.unstable_now() >= E;
  };

  k = function k() {};

  exports.unstable_forceFrameRate = function (a) {
    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D = 0 < a ? Math.floor(1E3 / a) : 5;
  };

  var F = new MessageChannel(),
      G = F.port2;

  F.port1.onmessage = function () {
    if (null !== B) {
      var a = exports.unstable_now();
      E = a + D;

      try {
        B(!0, a) ? G.postMessage(null) : (A = !1, B = null);
      } catch (b) {
        throw G.postMessage(null), b;
      }
    } else A = !1;
  };

  _f = function _f(a) {
    B = a;
    A || (A = !0, G.postMessage(null));
  };

  g = function g(a, b) {
    C = x(function () {
      a(exports.unstable_now());
    }, b);
  };

  h = function h() {
    y(C);
    C = -1;
  };
}

function H(a, b) {
  var c = a.length;
  a.push(b);

  a: for (;;) {
    var d = c - 1 >>> 1,
        e = a[d];
    if (void 0 !== e && 0 < I(e, b)) a[d] = b, a[c] = e, c = d;else break a;
  }
}

function J(a) {
  a = a[0];
  return void 0 === a ? null : a;
}

function K(a) {
  var b = a[0];

  if (void 0 !== b) {
    var c = a.pop();

    if (c !== b) {
      a[0] = c;

      a: for (var d = 0, e = a.length; d < e;) {
        var m = 2 * (d + 1) - 1,
            n = a[m],
            v = m + 1,
            r = a[v];
        if (void 0 !== n && 0 > I(n, c)) void 0 !== r && 0 > I(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);else if (void 0 !== r && 0 > I(r, c)) a[d] = r, a[v] = c, d = v;else break a;
      }
    }

    return b;
  }

  return null;
}

function I(a, b) {
  var c = a.sortIndex - b.sortIndex;
  return 0 !== c ? c : a.id - b.id;
}

var L = [],
    M = [],
    N = 1,
    O = null,
    P = 3,
    Q = !1,
    R = !1,
    S = !1;

function T(a) {
  for (var b = J(M); null !== b;) {
    if (null === b.callback) K(M);else if (b.startTime <= a) K(M), b.sortIndex = b.expirationTime, H(L, b);else break;
    b = J(M);
  }
}

function U(a) {
  S = !1;
  T(a);
  if (!R) if (null !== J(L)) R = !0, _f(V);else {
    var b = J(M);
    null !== b && g(U, b.startTime - a);
  }
}

function V(a, b) {
  R = !1;
  S && (S = !1, h());
  Q = !0;
  var c = P;

  try {
    T(b);

    for (O = J(L); null !== O && (!(O.expirationTime > b) || a && !exports.unstable_shouldYield());) {
      var d = O.callback;

      if ("function" === typeof d) {
        O.callback = null;
        P = O.priorityLevel;
        var e = d(O.expirationTime <= b);
        b = exports.unstable_now();
        "function" === typeof e ? O.callback = e : O === J(L) && K(L);
        T(b);
      } else K(L);

      O = J(L);
    }

    if (null !== O) var m = !0;else {
      var n = J(M);
      null !== n && g(U, n.startTime - b);
      m = !1;
    }
    return m;
  } finally {
    O = null, P = c, Q = !1;
  }
}

var W = k;
exports.unstable_IdlePriority = 5;
exports.unstable_ImmediatePriority = 1;
exports.unstable_LowPriority = 4;
exports.unstable_NormalPriority = 3;
exports.unstable_Profiling = null;
exports.unstable_UserBlockingPriority = 2;

exports.unstable_cancelCallback = function (a) {
  a.callback = null;
};

exports.unstable_continueExecution = function () {
  R || Q || (R = !0, _f(V));
};

exports.unstable_getCurrentPriorityLevel = function () {
  return P;
};

exports.unstable_getFirstCallbackNode = function () {
  return J(L);
};

exports.unstable_next = function (a) {
  switch (P) {
    case 1:
    case 2:
    case 3:
      var b = 3;
      break;

    default:
      b = P;
  }

  var c = P;
  P = b;

  try {
    return a();
  } finally {
    P = c;
  }
};

exports.unstable_pauseExecution = function () {};

exports.unstable_requestPaint = W;

exports.unstable_runWithPriority = function (a, b) {
  switch (a) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      break;

    default:
      a = 3;
  }

  var c = P;
  P = a;

  try {
    return b();
  } finally {
    P = c;
  }
};

exports.unstable_scheduleCallback = function (a, b, c) {
  var d = exports.unstable_now();
  "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;

  switch (a) {
    case 1:
      var e = -1;
      break;

    case 2:
      e = 250;
      break;

    case 5:
      e = 1073741823;
      break;

    case 4:
      e = 1E4;
      break;

    default:
      e = 5E3;
  }

  e = c + e;
  a = {
    id: N++,
    callback: b,
    priorityLevel: a,
    startTime: c,
    expirationTime: e,
    sortIndex: -1
  };
  c > d ? (a.sortIndex = c, H(M, a), null === J(L) && a === J(M) && (S ? h() : S = !0, g(U, c - d))) : (a.sortIndex = e, H(L, a), R || Q || (R = !0, _f(V)));
  return a;
};

exports.unstable_wrapCallback = function (a) {
  var b = P;
  return function () {
    var c = P;
    P = b;

    try {
      return a.apply(this, arguments);
    } finally {
      P = c;
    }
  };
};

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


__webpack_require__(30);

var f = __webpack_require__(3),
    g = 60103;

exports.Fragment = 60107;

if ("function" === typeof Symbol && Symbol.for) {
  var h = Symbol.for;
  g = h("react.element");
  exports.Fragment = h("react.fragment");
}

var m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
    n = Object.prototype.hasOwnProperty,
    p = {
  key: !0,
  ref: !0,
  __self: !0,
  __source: !0
};

function q(c, a, k) {
  var b,
      d = {},
      e = null,
      l = null;
  void 0 !== k && (e = "" + k);
  void 0 !== a.key && (e = "" + a.key);
  void 0 !== a.ref && (l = a.ref);

  for (b in a) {
    n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
  }

  if (c && c.defaultProps) for (b in a = c.defaultProps, a) {
    void 0 === d[b] && (d[b] = a[b]);
  }
  return {
    $$typeof: g,
    type: c,
    key: e,
    ref: l,
    props: d,
    _owner: m.current
  };
}

exports.jsx = q;
exports.jsxs = q;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function define(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });
  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  define(Gp, iteratorSymbol, function () {
    return this;
  });
  define(Gp, "toString", function () {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function reset(skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function stop() {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function dispatchException(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function abrupt(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function complete(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function finish(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function _catch(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : undefined);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var extract_files_1 = __webpack_require__(67);

var form_data_1 = __importDefault(__webpack_require__(68));
/**
 * Duck type if NodeJS stream
 * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3
 */


var isExtractableFileEnhanced = function isExtractableFileEnhanced(value) {
  return extract_files_1.isExtractableFile(value) || value !== null && typeof value === 'object' && typeof value.pipe === 'function';
};
/**
 * Returns Multipart Form if body contains files
 * (https://github.com/jaydenseric/graphql-multipart-request-spec)
 * Otherwise returns JSON
 */


function createRequestBody(query, variables, operationName) {
  var _a = extract_files_1.extractFiles({
    query: query,
    variables: variables,
    operationName: operationName
  }, '', isExtractableFileEnhanced),
      clone = _a.clone,
      files = _a.files;

  if (files.size === 0) {
    if (!Array.isArray(query)) {
      return JSON.stringify(clone);
    }

    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {
      throw new Error('Cannot create request body with given variable type, array expected');
    } // Batch support


    var payload = query.reduce(function (accu, currentQuery, index) {
      accu.push({
        query: currentQuery,
        variables: variables ? variables[index] : undefined
      });
      return accu;
    }, []);
    return JSON.stringify(payload);
  }

  var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;
  var form = new Form();
  form.append('operations', JSON.stringify(clone));
  var map = {};
  var i = 0;
  files.forEach(function (paths) {
    map[++i] = paths;
  });
  form.append('map', JSON.stringify(map));
  i = 0;
  files.forEach(function (paths, file) {
    form.append("" + ++i, file);
  });
  return form;
}

exports.default = createRequestBody;

/***/ }),
/* 67 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ReactNativeFile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(32);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "ReactNativeFile", function() { return _ReactNativeFile_js__WEBPACK_IMPORTED_MODULE_0__; });
/* harmony import */ var _extractFiles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(41);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "extractFiles", function() { return _extractFiles_js__WEBPACK_IMPORTED_MODULE_1__; });
/* harmony import */ var _isExtractableFile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(33);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "isExtractableFile", function() { return _isExtractableFile_js__WEBPACK_IMPORTED_MODULE_2__; });




/***/ }),
/* 68 */
/***/ (function(module, exports) {

/* eslint-env browser */
module.exports = typeof self == 'object' ? self.FormData : window.FormData;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 70 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 72 */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 73 */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;

      var TempCtor = function TempCtor() {};

      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(75);
exports.sha224 = __webpack_require__(76);
exports.sha256 = __webpack_require__(45);
exports.sha384 = __webpack_require__(77);
exports.sha512 = __webpack_require__(46);

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var common = __webpack_require__(25);

var shaCommon = __webpack_require__(44);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;
var sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];

function SHA1() {
  if (!(this instanceof SHA1)) return new SHA1();
  BlockHash.call(this);
  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;
SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++) {
    W[i] = msg[start + i];
  }

  for (; i < W.length; i++) {
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
  }

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');
};

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var SHA256 = __webpack_require__(45);

function SHA224() {
  if (!(this instanceof SHA224)) return new SHA224();
  SHA256.call(this);
  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];
}

utils.inherits(SHA224, SHA256);
module.exports = SHA224;
SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');
};

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var SHA512 = __webpack_require__(46);

function SHA384() {
  if (!(this instanceof SHA384)) return new SHA384();
  SHA512.call(this);
  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];
}

utils.inherits(SHA384, SHA512);
module.exports = SHA384;
SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');
};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var common = __webpack_require__(25);

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160)) return new RIPEMD160();
  BlockHash.call(this);
  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
  this.endian = 'little';
}

utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;
RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;

  for (var j = 0; j < 80; j++) {
    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }

  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);
}

function K(j) {
  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;
}

var r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];
var rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];
var s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];
var sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(17);

var assert = __webpack_require__(24);

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}

module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize); // Add padding to key

  for (var i = key.length; i < this.blockSize; i++) {
    key.push(0);
  }

  for (i = 0; i < key.length; i++) {
    key[i] ^= 0x36;
  }

  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a

  for (i = 0; i < key.length; i++) {
    key[i] ^= 0x6a;
  }

  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== "undefined" && global || typeof self !== "undefined" && self || window;
var apply = Function.prototype.apply; // DOM APIs, for completeness

exports.setTimeout = function () {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};

exports.setInterval = function () {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};

exports.clearTimeout = exports.clearInterval = function (timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}

Timeout.prototype.unref = Timeout.prototype.ref = function () {};

Timeout.prototype.close = function () {
  this._clearFn.call(scope, this._id);
}; // Does not start the time, just sets up the members needed.


exports.enroll = function (item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function (item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function (item) {
  clearTimeout(item._idleTimeoutId);
  var msecs = item._idleTimeout;

  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout) item._onTimeout();
    }, msecs);
  }
}; // setimmediate attaches itself to the global object


__webpack_require__(81); // On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.


exports.setImmediate = typeof self !== "undefined" && self.setImmediate || typeof global !== "undefined" && global.setImmediate || this && this.setImmediate;
exports.clearImmediate = typeof self !== "undefined" && self.clearImmediate || typeof global !== "undefined" && global.clearImmediate || this && this.clearImmediate;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(23)))

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
  "use strict";

  if (global.setImmediate) {
    return;
  }

  var nextHandle = 1; // Spec says greater than zero

  var tasksByHandle = {};
  var currentlyRunningATask = false;
  var doc = global.document;
  var registerImmediate;

  function setImmediate(callback) {
    // Callback can either be a function or a string
    if (typeof callback !== "function") {
      callback = new Function("" + callback);
    } // Copy function arguments


    var args = new Array(arguments.length - 1);

    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i + 1];
    } // Store and register the task


    var task = {
      callback: callback,
      args: args
    };
    tasksByHandle[nextHandle] = task;
    registerImmediate(nextHandle);
    return nextHandle++;
  }

  function clearImmediate(handle) {
    delete tasksByHandle[handle];
  }

  function run(task) {
    var callback = task.callback;
    var args = task.args;

    switch (args.length) {
      case 0:
        callback();
        break;

      case 1:
        callback(args[0]);
        break;

      case 2:
        callback(args[0], args[1]);
        break;

      case 3:
        callback(args[0], args[1], args[2]);
        break;

      default:
        callback.apply(undefined, args);
        break;
    }
  }

  function runIfPresent(handle) {
    // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
    // So if we're currently running a task, we'll need to delay this invocation.
    if (currentlyRunningATask) {
      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
      // "too much recursion" error.
      setTimeout(runIfPresent, 0, handle);
    } else {
      var task = tasksByHandle[handle];

      if (task) {
        currentlyRunningATask = true;

        try {
          run(task);
        } finally {
          clearImmediate(handle);
          currentlyRunningATask = false;
        }
      }
    }
  }

  function installNextTickImplementation() {
    registerImmediate = function registerImmediate(handle) {
      process.nextTick(function () {
        runIfPresent(handle);
      });
    };
  }

  function canUsePostMessage() {
    // The test against `importScripts` prevents this implementation from being installed inside a web worker,
    // where `global.postMessage` means something completely different and can't be used for this purpose.
    if (global.postMessage && !global.importScripts) {
      var postMessageIsAsynchronous = true;
      var oldOnMessage = global.onmessage;

      global.onmessage = function () {
        postMessageIsAsynchronous = false;
      };

      global.postMessage("", "*");
      global.onmessage = oldOnMessage;
      return postMessageIsAsynchronous;
    }
  }

  function installPostMessageImplementation() {
    // Installs an event handler on `global` for the `message` event: see
    // * https://developer.mozilla.org/en/DOM/window.postMessage
    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
    var messagePrefix = "setImmediate$" + Math.random() + "$";

    var onGlobalMessage = function onGlobalMessage(event) {
      if (event.source === global && typeof event.data === "string" && event.data.indexOf(messagePrefix) === 0) {
        runIfPresent(+event.data.slice(messagePrefix.length));
      }
    };

    if (global.addEventListener) {
      global.addEventListener("message", onGlobalMessage, false);
    } else {
      global.attachEvent("onmessage", onGlobalMessage);
    }

    registerImmediate = function registerImmediate(handle) {
      global.postMessage(messagePrefix + handle, "*");
    };
  }

  function installMessageChannelImplementation() {
    var channel = new MessageChannel();

    channel.port1.onmessage = function (event) {
      var handle = event.data;
      runIfPresent(handle);
    };

    registerImmediate = function registerImmediate(handle) {
      channel.port2.postMessage(handle);
    };
  }

  function installReadyStateChangeImplementation() {
    var html = doc.documentElement;

    registerImmediate = function registerImmediate(handle) {
      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
      var script = doc.createElement("script");

      script.onreadystatechange = function () {
        runIfPresent(handle);
        script.onreadystatechange = null;
        html.removeChild(script);
        script = null;
      };

      html.appendChild(script);
    };
  }

  function installSetTimeoutImplementation() {
    registerImmediate = function registerImmediate(handle) {
      setTimeout(runIfPresent, 0, handle);
    };
  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.


  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.

  if ({}.toString.call(global.process) === "[object process]") {
    // For Node.js before 0.9
    installNextTickImplementation();
  } else if (canUsePostMessage()) {
    // For non-IE10 modern browsers
    installPostMessageImplementation();
  } else if (global.MessageChannel) {
    // For web workers, where supported
    installMessageChannelImplementation();
  } else if (doc && "onreadystatechange" in doc.createElement("script")) {
    // For IE 6–8
    installReadyStateChangeImplementation();
  } else {
    // For older browsers
    installSetTimeoutImplementation();
  }

  attachTo.setImmediate = setImmediate;
  attachTo.clearImmediate = clearImmediate;
})(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(23), __webpack_require__(35)))

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),
/* 90 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/react/index.js
var react = __webpack_require__(3);
var react_default = /*#__PURE__*/__webpack_require__.n(react);

// EXTERNAL MODULE: ./node_modules/react-dom/index.js
var react_dom = __webpack_require__(50);
var react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);

// EXTERNAL MODULE: ./src/index.scss
var src = __webpack_require__(62);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js
var createForOfIteratorHelper = __webpack_require__(21);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(5);

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}
// CONCATENATED MODULE: ./node_modules/history/index.js

var history_r,
    B = history_r || (history_r = {});
B.Pop = "POP";
B.Push = "PUSH";
B.Replace = "REPLACE";
var C =  false ? undefined : function (b) {
  return b;
};

function D(b, h) {
  if (!b) {
    "undefined" !== typeof console && console.warn(h);

    try {
      throw Error(h);
    } catch (k) {}
  }
}

function E(b) {
  b.preventDefault();
  b.returnValue = "";
}

function F() {
  var b = [];
  return {
    get length() {
      return b.length;
    },

    push: function push(h) {
      b.push(h);
      return function () {
        b = b.filter(function (k) {
          return k !== h;
        });
      };
    },
    call: function call(h) {
      b.forEach(function (k) {
        return k && k(h);
      });
    }
  };
}

function H() {
  return Math.random().toString(36).substr(2, 8);
}

function history_I(b) {
  var h = b.pathname,
      k = b.search;
  b = b.hash;
  return (void 0 === h ? "/" : h) + (void 0 === k ? "" : k) + (void 0 === b ? "" : b);
}

function J(b) {
  var h = {};

  if (b) {
    var k = b.indexOf("#");
    0 <= k && (h.hash = b.substr(k), b = b.substr(0, k));
    k = b.indexOf("?");
    0 <= k && (h.search = b.substr(k), b = b.substr(0, k));
    b && (h.pathname = b);
  }

  return h;
}

function createBrowserHistory(b) {
  function h() {
    var c = p.location,
        a = m.state || {};
    return [a.idx, C({
      pathname: c.pathname,
      search: c.search,
      hash: c.hash,
      state: a.usr || null,
      key: a.key || "default"
    })];
  }

  function k(c) {
    return "string" === typeof c ? c : history_I(c);
  }

  function x(c, a) {
    void 0 === a && (a = null);
    return C(_extends({
      pathname: q.pathname,
      hash: "",
      search: ""
    }, "string" === typeof c ? J(c) : c, {
      state: a,
      key: H()
    }));
  }

  function z(c) {
    t = c;
    c = h();
    v = c[0];
    q = c[1];
    d.call({
      action: t,
      location: q
    });
  }

  function A(c, a) {
    function e() {
      A(c, a);
    }

    var l = history_r.Push,
        g = x(c, a);

    if (!f.length || (f.call({
      action: l,
      location: g,
      retry: e
    }), !1)) {
      var n = [{
        usr: g.state,
        key: g.key,
        idx: v + 1
      }, k(g)];
      g = n[0];
      n = n[1];

      try {
        m.pushState(g, "", n);
      } catch (G) {
        p.location.assign(n);
      }

      z(l);
    }
  }

  function y(c, a) {
    function e() {
      y(c, a);
    }

    var l = history_r.Replace,
        g = x(c, a);
    f.length && (f.call({
      action: l,
      location: g,
      retry: e
    }), 1) || (g = [{
      usr: g.state,
      key: g.key,
      idx: v
    }, k(g)], m.replaceState(g[0], "", g[1]), z(l));
  }

  function w(c) {
    m.go(c);
  }

  void 0 === b && (b = {});
  b = b.window;
  var p = void 0 === b ? document.defaultView : b,
      m = p.history,
      u = null;
  p.addEventListener("popstate", function () {
    if (u) f.call(u), u = null;else {
      var c = history_r.Pop,
          a = h(),
          e = a[0];
      a = a[1];
      if (f.length) {
        if (null != e) {
          var l = v - e;
          l && (u = {
            action: c,
            location: a,
            retry: function retry() {
              w(-1 * l);
            }
          }, w(l));
        } else  false ? undefined : void 0;
      } else z(c);
    }
  });
  var t = history_r.Pop;
  b = h();
  var v = b[0],
      q = b[1],
      d = F(),
      f = F();
  null == v && (v = 0, m.replaceState(_extends({}, m.state, {
    idx: v
  }), ""));
  return {
    get action() {
      return t;
    },

    get location() {
      return q;
    },

    createHref: k,
    push: A,
    replace: y,
    go: w,
    back: function back() {
      w(-1);
    },
    forward: function forward() {
      w(1);
    },
    listen: function listen(c) {
      return d.push(c);
    },
    block: function block(c) {
      var a = f.push(c);
      1 === f.length && p.addEventListener("beforeunload", E);
      return function () {
        a();
        f.length || p.removeEventListener("beforeunload", E);
      };
    }
  };
}

;

function createHashHistory(b) {
  function h() {
    var a = J(m.location.hash.substr(1)),
        e = a.pathname,
        l = a.search;
    a = a.hash;
    var g = u.state || {};
    return [g.idx, C({
      pathname: void 0 === e ? "/" : e,
      search: void 0 === l ? "" : l,
      hash: void 0 === a ? "" : a,
      state: g.usr || null,
      key: g.key || "default"
    })];
  }

  function k() {
    if (t) c.call(t), t = null;else {
      var a = history_r.Pop,
          e = h(),
          l = e[0];
      e = e[1];
      if (c.length) {
        if (null != l) {
          var g = q - l;
          g && (t = {
            action: a,
            location: e,
            retry: function retry() {
              p(-1 * g);
            }
          }, p(g));
        } else  false ? undefined : void 0;
      } else A(a);
    }
  }

  function x(a) {
    var e = document.querySelector("base"),
        l = "";
    e && e.getAttribute("href") && (e = m.location.href, l = e.indexOf("#"), l = -1 === l ? e : e.slice(0, l));
    return l + "#" + ("string" === typeof a ? a : history_I(a));
  }

  function z(a, e) {
    void 0 === e && (e = null);
    return C(_extends({
      pathname: d.pathname,
      hash: "",
      search: ""
    }, "string" === typeof a ? J(a) : a, {
      state: e,
      key: H()
    }));
  }

  function A(a) {
    v = a;
    a = h();
    q = a[0];
    d = a[1];
    f.call({
      action: v,
      location: d
    });
  }

  function y(a, e) {
    function l() {
      y(a, e);
    }

    var g = history_r.Push,
        n = z(a, e);
     false ? undefined : void 0;

    if (!c.length || (c.call({
      action: g,
      location: n,
      retry: l
    }), !1)) {
      var G = [{
        usr: n.state,
        key: n.key,
        idx: q + 1
      }, x(n)];
      n = G[0];
      G = G[1];

      try {
        u.pushState(n, "", G);
      } catch (K) {
        m.location.assign(G);
      }

      A(g);
    }
  }

  function w(a, e) {
    function l() {
      w(a, e);
    }

    var g = history_r.Replace,
        n = z(a, e);
     false ? undefined : void 0;
    c.length && (c.call({
      action: g,
      location: n,
      retry: l
    }), 1) || (n = [{
      usr: n.state,
      key: n.key,
      idx: q
    }, x(n)], u.replaceState(n[0], "", n[1]), A(g));
  }

  function p(a) {
    u.go(a);
  }

  void 0 === b && (b = {});
  b = b.window;
  var m = void 0 === b ? document.defaultView : b,
      u = m.history,
      t = null;
  m.addEventListener("popstate", k);
  m.addEventListener("hashchange", function () {
    var a = h()[1];
    history_I(a) !== history_I(d) && k();
  });
  var v = history_r.Pop;
  b = h();
  var q = b[0],
      d = b[1],
      f = F(),
      c = F();
  null == q && (q = 0, u.replaceState(_extends({}, u.state, {
    idx: q
  }), ""));
  return {
    get action() {
      return v;
    },

    get location() {
      return d;
    },

    createHref: x,
    push: y,
    replace: w,
    go: p,
    back: function back() {
      p(-1);
    },
    forward: function forward() {
      p(1);
    },
    listen: function listen(a) {
      return f.push(a);
    },
    block: function block(a) {
      var e = c.push(a);
      1 === c.length && m.addEventListener("beforeunload", E);
      return function () {
        e();
        c.length || m.removeEventListener("beforeunload", E);
      };
    }
  };
}

;

function createMemoryHistory(b) {
  function h(d, f) {
    void 0 === f && (f = null);
    return C(_extends({
      pathname: t.pathname,
      search: "",
      hash: ""
    }, "string" === typeof d ? J(d) : d, {
      state: f,
      key: H()
    }));
  }

  function k(d, f, c) {
    return !q.length || (q.call({
      action: d,
      location: f,
      retry: c
    }), !1);
  }

  function x(d, f) {
    u = d;
    t = f;
    v.call({
      action: u,
      location: t
    });
  }

  function z(d, f) {
    var c = history_r.Push,
        a = h(d, f);
     false ? undefined : void 0;
    k(c, a, function () {
      z(d, f);
    }) && (m += 1, p.splice(m, p.length, a), x(c, a));
  }

  function A(d, f) {
    var c = history_r.Replace,
        a = h(d, f);
     false ? undefined : void 0;
    k(c, a, function () {
      A(d, f);
    }) && (p[m] = a, x(c, a));
  }

  function y(d) {
    var f = Math.min(Math.max(m + d, 0), p.length - 1),
        c = history_r.Pop,
        a = p[f];
    k(c, a, function () {
      y(d);
    }) && (m = f, x(c, a));
  }

  void 0 === b && (b = {});
  var w = b;
  b = w.initialEntries;
  w = w.initialIndex;
  var p = (void 0 === b ? ["/"] : b).map(function (d) {
    var f = C(_extends({
      pathname: "/",
      search: "",
      hash: "",
      state: null,
      key: H()
    }, "string" === typeof d ? J(d) : d));
     false ? undefined : void 0;
    return f;
  }),
      m = Math.min(Math.max(null == w ? p.length - 1 : w, 0), p.length - 1),
      u = history_r.Pop,
      t = p[m],
      v = F(),
      q = F();
  return {
    get index() {
      return m;
    },

    get action() {
      return u;
    },

    get location() {
      return t;
    },

    createHref: function createHref(d) {
      return "string" === typeof d ? d : history_I(d);
    },
    push: z,
    replace: A,
    go: y,
    back: function back() {
      y(-1);
    },
    forward: function forward() {
      y(1);
    },
    listen: function listen(d) {
      return v.push(d);
    },
    block: function block(d) {
      return q.push(d);
    }
  };
}

;

// CONCATENATED MODULE: ./node_modules/react-router/index.js


/**
 * React Router v6.0.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */



function invariant(cond, message) {
  if (!cond) throw new Error(message);
}

function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

var alreadyWarned = {};

function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     false ? undefined : void 0;
  }
} ///////////////////////////////////////////////////////////////////////////////
// CONTEXT
///////////////////////////////////////////////////////////////////////////////

/**
 * A Navigator is a "location changer"; it's how you get to different locations.
 *
 * Every history instance conforms to the Navigator interface, but the
 * distinction is useful primarily when it comes to the low-level <Router> API
 * where both the location and a navigator must be provided separately in order
 * to avoid "tearing" that may occur in a suspense-enabled app if the action
 * and/or location were to be read directly from the history instance.
 */


var NavigationContext = /*#__PURE__*/Object(react["createContext"])(null);

if (false) {}

var LocationContext = /*#__PURE__*/Object(react["createContext"])(null);

if (false) {}

var RouteContext = /*#__PURE__*/Object(react["createContext"])({
  outlet: null,
  matches: []
});

if (false) {} ///////////////////////////////////////////////////////////////////////////////
// COMPONENTS
///////////////////////////////////////////////////////////////////////////////

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/docs/en/v6/api#memoryrouter
 */


function MemoryRouter(_ref) {
  var basename = _ref.basename,
      children = _ref.children,
      initialEntries = _ref.initialEntries,
      initialIndex = _ref.initialIndex;
  var historyRef = Object(react["useRef"])();

  if (historyRef.current == null) {
    historyRef.current = createMemoryHistory({
      initialEntries: initialEntries,
      initialIndex: initialIndex
    });
  }

  var history = historyRef.current;

  var _useState = Object(react["useState"])({
    action: history.action,
    location: history.location
  }),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  Object(react["useLayoutEffect"])(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/Object(react["createElement"])(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/docs/en/v6/api#navigate
 */


function Navigate(_ref2) {
  var to = _ref2.to,
      replace = _ref2.replace,
      state = _ref2.state;
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;
   false ? undefined : void 0;
  var navigate = useNavigate();
  Object(react["useEffect"])(function () {
    navigate(to, {
      replace: replace,
      state: state
    });
  });
  return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/docs/en/v6/api#outlet
 */


function Outlet(_props) {
  return useOutlet();
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#route
 */


function Route(_props) {
   false ? undefined : invariant(false);
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/docs/en/v6/api#router
 */


function Router(_ref3) {
  var _ref3$basename = _ref3.basename,
      basenameProp = _ref3$basename === void 0 ? "/" : _ref3$basename,
      _ref3$children = _ref3.children,
      children = _ref3$children === void 0 ? null : _ref3$children,
      locationProp = _ref3.location,
      _ref3$navigationType = _ref3.navigationType,
      navigationType = _ref3$navigationType === void 0 ? history_r.Pop : _ref3$navigationType,
      navigator = _ref3.navigator,
      _ref3$static = _ref3.static,
      staticProp = _ref3$static === void 0 ? false : _ref3$static;
  !!useInRouterContext() ?  false ? undefined : invariant(false) : void 0;
  var basename = normalizePathname(basenameProp);
  var navigationContext = Object(react["useMemo"])(function () {
    return {
      basename: basename,
      navigator: navigator,
      static: staticProp
    };
  }, [basename, navigator, staticProp]);

  if (typeof locationProp === "string") {
    locationProp = J(locationProp);
  }

  var _locationProp = locationProp,
      _locationProp$pathnam = _locationProp.pathname,
      pathname = _locationProp$pathnam === void 0 ? "/" : _locationProp$pathnam,
      _locationProp$search = _locationProp.search,
      search = _locationProp$search === void 0 ? "" : _locationProp$search,
      _locationProp$hash = _locationProp.hash,
      hash = _locationProp$hash === void 0 ? "" : _locationProp$hash,
      _locationProp$state = _locationProp.state,
      state = _locationProp$state === void 0 ? null : _locationProp$state,
      _locationProp$key = _locationProp.key,
      key = _locationProp$key === void 0 ? "default" : _locationProp$key;
  var location = Object(react["useMemo"])(function () {
    var trailingPathname = stripBasename(pathname, basename);

    if (trailingPathname == null) {
      return null;
    }

    return {
      pathname: trailingPathname,
      search: search,
      hash: hash,
      state: state,
      key: key
    };
  }, [basename, pathname, search, hash, state, key]);
   false ? undefined : void 0;

  if (location == null) {
    return null;
  }

  return /*#__PURE__*/Object(react["createElement"])(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/Object(react["createElement"])(LocationContext.Provider, {
    children: children,
    value: {
      location: location,
      navigationType: navigationType
    }
  }));
}
/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#routes
 */


function Routes(_ref4) {
  var children = _ref4.children,
      location = _ref4.location;
  return useRoutes(createRoutesFromChildren(children), location);
} ///////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usehref
 */


function useHref(to) {
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;

  var _useContext = Object(react["useContext"])(NavigationContext),
      basename = _useContext.basename,
      navigator = _useContext.navigator;

  var _useResolvedPath = useResolvedPath(to),
      hash = _useResolvedPath.hash,
      pathname = _useResolvedPath.pathname,
      search = _useResolvedPath.search;

  var joinedPathname = pathname;

  if (basename !== "/") {
    var toPathname = getToPathname(to);
    var endsWithSlash = toPathname != null && toPathname.endsWith("/");
    joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
  }

  return navigator.createHref({
    pathname: joinedPathname,
    search: search,
    hash: hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
 */


function useInRouterContext() {
  return Object(react["useContext"])(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/docs/en/v6/api#uselocation
 */


function useLocation() {
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;
  return Object(react["useContext"])(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype
 */


function useNavigationType() {
  return Object(react["useContext"])(LocationContext).navigationType;
}
/**
 * Returns true if the URL for the given "to" value matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usematch
 */


function useMatch(pattern) {
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;
  return matchPath(pattern, useLocation().pathname);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigate
 */


function useNavigate() {
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;

  var _useContext2 = Object(react["useContext"])(NavigationContext),
      basename = _useContext2.basename,
      navigator = _useContext2.navigator;

  var _useContext3 = Object(react["useContext"])(RouteContext),
      matches = _useContext3.matches;

  var _useLocation = useLocation(),
      locationPathname = _useLocation.pathname;

  var routePathnamesJson = JSON.stringify(matches.map(function (match) {
    return match.pathnameBase;
  }));
  var activeRef = Object(react["useRef"])(false);
  Object(react["useEffect"])(function () {
    activeRef.current = true;
  });
  var navigate = Object(react["useCallback"])(function (to, options) {
    if (options === void 0) {
      options = {};
    }

     false ? undefined : void 0;
    if (!activeRef.current) return;

    if (typeof to === "number") {
      navigator.go(to);
      return;
    }

    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);

    if (basename !== "/") {
      path.pathname = joinPaths([basename, path.pathname]);
    }

    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useoutlet
 */


function useOutlet() {
  return Object(react["useContext"])(RouteContext).outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useparams
 */


function useParams() {
  var _useContext4 = Object(react["useContext"])(RouteContext),
      matches = _useContext4.matches;

  var routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
 */


function useResolvedPath(to) {
  var _useContext5 = Object(react["useContext"])(RouteContext),
      matches = _useContext5.matches;

  var _useLocation2 = useLocation(),
      locationPathname = _useLocation2.pathname;

  var routePathnamesJson = JSON.stringify(matches.map(function (match) {
    return match.pathnameBase;
  }));
  return Object(react["useMemo"])(function () {
    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);
  }, [to, routePathnamesJson, locationPathname]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useroutes
 */


function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  false ? undefined : invariant(false) : void 0;

  var _useContext6 = Object(react["useContext"])(RouteContext),
      parentMatches = _useContext6.matches;

  var routeMatch = parentMatches[parentMatches.length - 1];
  var parentParams = routeMatch ? routeMatch.params : {};
  var parentPathname = routeMatch ? routeMatch.pathname : "/";
  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  var parentRoute = routeMatch && routeMatch.route;

  if (false) { var parentPath; }

  var locationFromContext = useLocation();
  var location;

  if (locationArg) {
    var _parsedLocationArg$pa;

    var parsedLocationArg = typeof locationArg === "string" ? J(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  false ? undefined : invariant(false) : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }

  var pathname = location.pathname || "/";
  var remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  var matches = matchRoutes(routes, {
    pathname: remainingPathname
  });

  if (false) {}

  return _renderMatches(matches && matches.map(function (match) {
    return Object.assign({}, match, {
      params: Object.assign({}, parentParams, match.params),
      pathname: joinPaths([parentPathnameBase, match.pathname]),
      pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])
    });
  }), parentMatches);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
 */


function createRoutesFromChildren(children) {
  var routes = [];
  react["Children"].forEach(children, function (element) {
    if (! /*#__PURE__*/Object(react["isValidElement"])(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }

    if (element.type === react["Fragment"]) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children));
      return;
    }

    !(element.type === Route) ?  false ? undefined : invariant(false) : void 0;
    var route = {
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path
    };

    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children);
    }

    routes.push(route);
  });
  return routes;
}
/**
 * The parameters that were parsed from the URL path.
 */

/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/docs/en/v6/api#generatepath
 */


function generatePath(path, params) {
  if (params === void 0) {
    params = {};
  }

  return path.replace(/:(\w+)/g, function (_, key) {
    !(params[key] != null) ?  false ? undefined : invariant(false) : void 0;
    return params[key];
  }).replace(/\/*\*$/, function (_) {
    return params["*"] == null ? "" : params["*"].replace(/^\/*/, "/");
  });
}
/**
 * A RouteMatch contains info about how a route matched a URL.
 */

/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchroutes
 */


function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }

  var location = typeof locationArg === "string" ? J(locationArg) : locationArg;
  var pathname = stripBasename(location.pathname || "/", basename);

  if (pathname == null) {
    return null;
  }

  var branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  var matches = null;

  for (var i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i], routes, pathname);
  }

  return matches;
}

function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }

  if (parentsMeta === void 0) {
    parentsMeta = [];
  }

  if (parentPath === void 0) {
    parentPath = "";
  }

  routes.forEach(function (route, index) {
    var meta = {
      relativePath: route.path || "",
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index
    };

    if (meta.relativePath.startsWith("/")) {
      !meta.relativePath.startsWith(parentPath) ?  false ? undefined : invariant(false) : void 0;
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }

    var path = joinPaths([parentPath, meta.relativePath]);
    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      !(route.index !== true) ?  false ? undefined : invariant(false) : void 0;
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.


    if (route.path == null && !route.index) {
      return;
    }

    branches.push({
      path: path,
      score: computeScore(path, route.index),
      routesMeta: routesMeta
    });
  });
  return branches;
}

function rankRouteBranches(branches) {
  branches.sort(function (a, b) {
    return a.score !== b.score ? b.score - a.score // Higher score first
    : compareIndexes(a.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }), b.routesMeta.map(function (meta) {
      return meta.childrenIndex;
    }));
  });
}

var paramRe = /^:\w+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;

var isSplat = function isSplat(s) {
  return s === "*";
};

function computeScore(path, index) {
  var segments = path.split("/");
  var initialScore = segments.length;

  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }

  if (index) {
    initialScore += indexRouteValue;
  }

  return segments.filter(function (s) {
    return !isSplat(s);
  }).reduce(function (score, segment) {
    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue);
  }, initialScore);
}

function compareIndexes(a, b) {
  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {
    return n === b[i];
  });
  return siblings ? // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}

function matchRouteBranch(branch, // TODO: attach original route object inside routesMeta so we don't need this arg
routesArg, pathname) {
  var routes = routesArg;
  var routesMeta = branch.routesMeta;
  var matchedParams = {};
  var matchedPathname = "/";
  var matches = [];

  for (var i = 0; i < routesMeta.length; ++i) {
    var meta = routesMeta[i];
    var end = i === routesMeta.length - 1;
    var remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    var match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end: end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    var route = routes[meta.childrenIndex];
    matches.push({
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),
      route: route
    });

    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }

    routes = route.children;
  }

  return matches;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */


function renderMatches(matches) {
  return _renderMatches(matches);
}

function _renderMatches(matches, parentMatches) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }

  if (matches == null) return null;
  return matches.reduceRight(function (outlet, match, index) {
    return /*#__PURE__*/Object(react["createElement"])(RouteContext.Provider, {
      children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/Object(react["createElement"])(Outlet, null),
      value: {
        outlet: outlet,
        matches: parentMatches.concat(matches.slice(0, index + 1))
      }
    });
  }, null);
}
/**
 * A PathPattern is used to match on some portion of a URL pathname.
 */

/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchpath
 */


function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }

  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),
      _compilePath2 = Object(slicedToArray["a" /* default */])(_compilePath, 2),
      matcher = _compilePath2[0],
      paramNames = _compilePath2[1];

  var match = pathname.match(matcher);
  if (!match) return null;
  var matchedPathname = match[0];
  var pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  var captureGroups = match.slice(1);
  var params = paramNames.reduce(function (memo, paramName, index) {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      var splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }

    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params: params,
    pathname: matchedPathname,
    pathnameBase: pathnameBase,
    pattern: pattern
  };
}

function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }

  if (end === void 0) {
    end = true;
  }

   false ? undefined : void 0;
  var paramNames = [];
  var regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/:(\w+)/g, function (_, paramName) {
    paramNames.push(paramName);
    return "([^\\/]+)";
  });

  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else {
    regexpSource += end ? "\\/*$" // When matching to the end, ignore trailing slashes
    : // Otherwise, at least match a word boundary. This restricts parent
    // routes to matching only their own words and nothing more, e.g. parent
    // route "/home" should not match "/home2".
    "(?:\\b|$)";
  }

  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}

function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
     false ? undefined : void 0;
    return value;
  }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/docs/en/v6/api#resolvepath
 */


function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }

  var _ref5 = typeof to === "string" ? J(to) : to,
      toPathname = _ref5.pathname,
      _ref5$search = _ref5.search,
      search = _ref5$search === void 0 ? "" : _ref5$search,
      _ref5$hash = _ref5.hash,
      hash = _ref5$hash === void 0 ? "" : _ref5$hash;

  var pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname: pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}

function resolvePathname(relativePath, fromPathname) {
  var segments = fromPathname.replace(/\/+$/, "").split("/");
  var relativeSegments = relativePath.split("/");
  relativeSegments.forEach(function (segment) {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}

function resolveTo(toArg, routePathnames, locationPathname) {
  var to = typeof toArg === "string" ? J(toArg) : toArg;
  var toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  var from;

  if (toPathname == null) {
    from = locationPathname;
  } else {
    var routePathnameIndex = routePathnames.length - 1;

    if (toPathname.startsWith("..")) {
      var toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }

      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.


    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }

  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.

  if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {
    path.pathname += "/";
  }

  return path;
}

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? J(to).pathname : to.pathname;
}

function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;

  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }

  var nextChar = pathname.charAt(basename.length);

  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }

  return pathname.slice(basename.length) || "/";
}

var joinPaths = function joinPaths(paths) {
  return paths.join("/").replace(/\/\/+/g, "/");
};

var normalizePathname = function normalizePathname(pathname) {
  return pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
};

var normalizeSearch = function normalizeSearch(search) {
  return !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
};

var normalizeHash = function normalizeHash(hash) {
  return !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
}; ///////////////////////////////////////////////////////////////////////////////



// CONCATENATED MODULE: ./node_modules/react-router-dom/index.js



/**
 * React Router DOM v6.0.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */





function react_router_dom_extends() {
  react_router_dom_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return react_router_dom_extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var _excluded = ["onClick", "reloadDocument", "replace", "state", "target", "to"],
    _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to"];

function react_router_dom_warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
} ////////////////////////////////////////////////////////////////////////////////
// COMPONENTS
////////////////////////////////////////////////////////////////////////////////

/**
 * A <Router> for use in web browsers. Provides the cleanest URLs.
 */


function BrowserRouter(_ref) {
  var basename = _ref.basename,
      children = _ref.children,
      window = _ref.window;
  var historyRef = Object(react["useRef"])();

  if (historyRef.current == null) {
    historyRef.current = createBrowserHistory({
      window: window
    });
  }

  var history = historyRef.current;

  var _useState = Object(react["useState"])({
    action: history.action,
    location: history.location
  }),
      _useState2 = Object(slicedToArray["a" /* default */])(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  Object(react["useLayoutEffect"])(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/Object(react["createElement"])(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A <Router> for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */


function HashRouter(_ref2) {
  var basename = _ref2.basename,
      children = _ref2.children,
      window = _ref2.window;
  var historyRef = Object(react["useRef"])();

  if (historyRef.current == null) {
    historyRef.current = createHashHistory({
      window: window
    });
  }

  var history = historyRef.current;

  var _useState3 = Object(react["useState"])({
    action: history.action,
    location: history.location
  }),
      _useState4 = Object(slicedToArray["a" /* default */])(_useState3, 2),
      state = _useState4[0],
      setState = _useState4[1];

  Object(react["useLayoutEffect"])(function () {
    return history.listen(setState);
  }, [history]);
  return /*#__PURE__*/Object(react["createElement"])(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
/**
 * The public API for rendering a history-aware <a>.
 */


var Link = /*#__PURE__*/Object(react["forwardRef"])(function LinkWithRef(_ref3, ref) {
  var onClick = _ref3.onClick,
      reloadDocument = _ref3.reloadDocument,
      _ref3$replace = _ref3.replace,
      replace = _ref3$replace === void 0 ? false : _ref3$replace,
      state = _ref3.state,
      target = _ref3.target,
      to = _ref3.to,
      rest = _objectWithoutPropertiesLoose(_ref3, _excluded);

  var href = useHref(to);
  var internalOnClick = useLinkClickHandler(to, {
    replace: replace,
    state: state,
    target: target
  });

  function handleClick(event) {
    if (onClick) onClick(event);

    if (!event.defaultPrevented && !reloadDocument) {
      internalOnClick(event);
    }
  }

  return (
    /*#__PURE__*/
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    Object(react["createElement"])("a", react_router_dom_extends({}, rest, {
      href: href,
      onClick: handleClick,
      ref: ref,
      target: target
    }))
  );
});

if (false) {}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


var NavLink = /*#__PURE__*/Object(react["forwardRef"])(function NavLinkWithRef(_ref4, ref) {
  var _ref4$ariaCurrent = _ref4["aria-current"],
      ariaCurrentProp = _ref4$ariaCurrent === void 0 ? "page" : _ref4$ariaCurrent,
      _ref4$caseSensitive = _ref4.caseSensitive,
      caseSensitive = _ref4$caseSensitive === void 0 ? false : _ref4$caseSensitive,
      _ref4$className = _ref4.className,
      classNameProp = _ref4$className === void 0 ? "" : _ref4$className,
      _ref4$end = _ref4.end,
      end = _ref4$end === void 0 ? false : _ref4$end,
      styleProp = _ref4.style,
      to = _ref4.to,
      rest = _objectWithoutPropertiesLoose(_ref4, _excluded2);

  var location = useLocation();
  var path = useResolvedPath(to);
  var locationPathname = location.pathname;
  var toPathname = path.pathname;

  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    toPathname = toPathname.toLowerCase();
  }

  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
  var ariaCurrent = isActive ? ariaCurrentProp : undefined;
  var className;

  if (typeof classNameProp === "function") {
    className = classNameProp({
      isActive: isActive
    });
  } else {
    // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [classNameProp, isActive ? "active" : null].filter(Boolean).join(" ");
  }

  var style = typeof styleProp === "function" ? styleProp({
    isActive: isActive
  }) : styleProp;
  return /*#__PURE__*/Object(react["createElement"])(Link, react_router_dom_extends({}, rest, {
    "aria-current": ariaCurrent,
    className: className,
    ref: ref,
    style: style,
    to: to
  }));
});

if (false) {} ////////////////////////////////////////////////////////////////////////////////
// HOOKS
////////////////////////////////////////////////////////////////////////////////

/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */


function useLinkClickHandler(to, _temp) {
  var _ref5 = _temp === void 0 ? {} : _temp,
      target = _ref5.target,
      replaceProp = _ref5.replace,
      state = _ref5.state;

  var navigate = useNavigate();
  var location = useLocation();
  var path = useResolvedPath(to);
  return Object(react["useCallback"])(function (event) {
    if (event.button === 0 && ( // Ignore everything but left clicks
    !target || target === "_self") && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event) // Ignore clicks with modifier keys
    ) {
      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
      // a push, so do the same here.

      var replace = !!replaceProp || history_I(location) === history_I(path);
      navigate(to, {
        replace: replace,
        state: state
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */


function useSearchParams(defaultInit) {
   false ? undefined : void 0;
  var defaultSearchParamsRef = Object(react["useRef"])(createSearchParams(defaultInit));
  var location = useLocation();
  var searchParams = Object(react["useMemo"])(function () {
    var searchParams = createSearchParams(location.search);

    var _iterator = Object(createForOfIteratorHelper["a" /* default */])(defaultSearchParamsRef.current.keys()),
        _step;

    try {
      var _loop = function _loop() {
        var key = _step.value;

        if (!searchParams.has(key)) {
          defaultSearchParamsRef.current.getAll(key).forEach(function (value) {
            searchParams.append(key, value);
          });
        }
      };

      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return searchParams;
  }, [location.search]);
  var navigate = useNavigate();
  var setSearchParams = Object(react["useCallback"])(function (nextInit, navigateOptions) {
    navigate("?" + createSearchParams(nextInit), navigateOptions);
  }, [navigate]);
  return [searchParams, setSearchParams];
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */


function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }

  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {
    var value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(function (v) {
      return [key, v];
    }) : [[key, value]]);
  }, []));
}


// EXTERNAL MODULE: ./src/components/Modal/index.scss
var Modal = __webpack_require__(63);

// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js
var jsx_runtime = __webpack_require__(0);

// CONCATENATED MODULE: ./src/components/Modal/index.tsx
function Modal_Modal(){var _useContext=Object(react["useContext"])(ModalStateContext),isOpen=_useContext.isOpen,_useContext$modalProp=_useContext.modalProps,modalProps=_useContext$modalProp===void 0?{}:_useContext$modalProp;var headerContent=modalProps.headerContent,bodyContent=modalProps.bodyContent,footerContent=modalProps.footerContent,onCancel=modalProps.onCancel;return isOpen?/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"modalOverlay",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"modalWrapper","aria-modal":true,"aria-hidden":true,tabIndex:-1,role:"dialog",children:/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"modal",children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"modalHeader",children:[headerContent&&/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"headerContent",children:headerContent}),/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{type:"button",className:"modalCloseButton","data-dismiss":"modal","aria-label":"Close",onClick:function onClick(e){return onCancel(e);},children:/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{"aria-hidden":"true",children:"\xD7"})})]}),bodyContent&&/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"modalBody",children:bodyContent}),footerContent&&/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"modalFooter",children:footerContent})]})})}):null;}/* harmony default export */ var components_Modal = (Modal_Modal);
// CONCATENATED MODULE: ./src/components/WithModal/index.tsx
var initState={isOpen:false,modalProps:{}};var ModalStateContext=/*#__PURE__*/Object(react["createContext"])({});var ModalUpdaterContext=/*#__PURE__*/Object(react["createContext"])({});var WithModal_WithModal=function WithModal(_ref){var children=_ref.children;var _useModalState=WithModal_useModalState(initState),modalOptions=_useModalState.modalState,setModalOptions=_useModalState.setModalState;return/*#__PURE__*/Object(jsx_runtime["jsx"])(ModalUpdaterContext.Provider,{value:setModalOptions,children:/*#__PURE__*/Object(jsx_runtime["jsxs"])(ModalStateContext.Provider,{value:modalOptions,children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(components_Modal,{}),children]})});};var WithModal_useModalState=function useModalState(initialState){var _useState=Object(react["useState"])(initialState.isOpen),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=Object(react["useState"])(initialState.modalProps),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),modalProps=_useState4[0],setModalProps=_useState4[1];var setModalState=function setModalState(_ref2){var isOpen=_ref2.isOpen,_ref2$modalProps=_ref2.modalProps,modalProps=_ref2$modalProps===void 0?{}:_ref2$modalProps;setIsOpen(isOpen);setModalProps(modalProps);};var modalState={isOpen:isOpen,modalProps:modalProps};return{modalState:modalState,setModalState:setModalState};};/* harmony default export */ var components_WithModal = (WithModal_WithModal);
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(8);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(defineProperty["a" /* default */])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js
var regenerator = __webpack_require__(2);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js
var asyncToGenerator = __webpack_require__(9);

// EXTERNAL MODULE: ./node_modules/graphql-request/dist/index.js
var dist = __webpack_require__(14);

// CONCATENATED MODULE: ./src/helpers/constants.ts
var _NETWORK_RPC_URLS,_NETWORK_EXPLORER_URL,_NETWORK_EXPLORER_API;var OFFCHAIN_HUB_LINK="https://hub.snapshot.org";var OFFCHAIN_HUB_API="".concat(OFFCHAIN_HUB_LINK,"/graphql");var NAME="snapshot";var VERSION="0.1.4";var NetworkContextName="NETWORK";var INFURA_KEY=Object({"NODE_ENV":"production","PUBLIC_URL":".","WDS_SOCKET_HOST":undefined,"WDS_SOCKET_PATH":undefined,"WDS_SOCKET_PORT":undefined,"FAST_REFRESH":true}).INFURA_KEY||"5ffc47f65c4042ce847ef66a3fa70d4c";var SupportedChainId;(function(SupportedChainId){SupportedChainId[SupportedChainId["MAINNET"]=1]="MAINNET";SupportedChainId[SupportedChainId["ROPSTEN"]=3]="ROPSTEN";SupportedChainId[SupportedChainId["RINKEBY"]=4]="RINKEBY";SupportedChainId[SupportedChainId["GOERLI"]=5]="GOERLI";SupportedChainId[SupportedChainId["KOVAN"]=42]="KOVAN";SupportedChainId[SupportedChainId["BINANCE_SMART_CHAIN"]=56]="BINANCE_SMART_CHAIN";SupportedChainId[SupportedChainId["BINANCE_SMART_CHAIN_TESTNET"]=97]="BINANCE_SMART_CHAIN_TESTNET";SupportedChainId[SupportedChainId["POLYGON"]=137]="POLYGON";SupportedChainId[SupportedChainId["POLYGON_MUMBAI"]=80001]="POLYGON_MUMBAI";SupportedChainId[SupportedChainId["ARBITRUM_ONE"]=42161]="ARBITRUM_ONE";SupportedChainId[SupportedChainId["ARBITRUM_RINKEBY"]=421611]="ARBITRUM_RINKEBY";SupportedChainId[SupportedChainId["OPTIMISM"]=10]="OPTIMISM";SupportedChainId[SupportedChainId["OPTIMISTIC_KOVAN"]=69]="OPTIMISTIC_KOVAN";})(SupportedChainId||(SupportedChainId={}));var ALL_SUPPORTED_CHAIN_IDS=[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN,SupportedChainId.BINANCE_SMART_CHAIN,SupportedChainId.BINANCE_SMART_CHAIN_TESTNET,SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN];var L1_CHAIN_IDS=[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN,SupportedChainId.BINANCE_SMART_CHAIN,SupportedChainId.BINANCE_SMART_CHAIN_TESTNET];var L2_CHAIN_IDS=[SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISTIC_KOVAN];var NETWORK_RPC_URLS=(_NETWORK_RPC_URLS={},Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.MAINNET,"https://mainnet.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.RINKEBY,"https://rinkeby.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.ROPSTEN,"https://ropsten.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.GOERLI,"https://goerli.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.KOVAN,"https://kovan.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.BINANCE_SMART_CHAIN,"https://bsc-dataseed.binance.org/"),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.BINANCE_SMART_CHAIN_TESTNET,"https://data-seed-prebsc-1-s1.binance.org:8545/"),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.POLYGON,"https://polygon-rpc.com/"),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.POLYGON_MUMBAI,"https://rpc-mumbai.maticvigil.com"),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.OPTIMISM,"https://optimism-mainnet.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.OPTIMISTIC_KOVAN,"https://optimism-kovan.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.ARBITRUM_ONE,"https://arbitrum-mainnet.infura.io/v3/".concat(INFURA_KEY)),Object(defineProperty["a" /* default */])(_NETWORK_RPC_URLS,SupportedChainId.ARBITRUM_RINKEBY,"https://arbitrum-rinkeby.infura.io/v3/".concat(INFURA_KEY)),_NETWORK_RPC_URLS);var NETWORK_EXPLORER_URLS=(_NETWORK_EXPLORER_URL={},Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.MAINNET,"https://etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.RINKEBY,"https://rinkeby.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.ROPSTEN,"https://ropsten.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.GOERLI,"https://goerli.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.KOVAN,"https://kovan.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.BINANCE_SMART_CHAIN,"https://bscscan.com/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.BINANCE_SMART_CHAIN_TESTNET,"https://testnet.bscscan.com/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.POLYGON,"https://polygonscan.com/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.POLYGON_MUMBAI,"https://mumbai.polygonscan.com/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.OPTIMISM,"https://optimistic.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.OPTIMISTIC_KOVAN,"https://kovan-optimistic.etherscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.ARBITRUM_ONE,"https://arbiscan.io/"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_URL,SupportedChainId.ARBITRUM_RINKEBY,"https://testnet.arbiscan.io/"),_NETWORK_EXPLORER_URL);var NETWORK_EXPLORER_API_URLS=(_NETWORK_EXPLORER_API={},Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.MAINNET,"https://api.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.RINKEBY,"https://api-rinkeby.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.ROPSTEN,"https://api-ropsten.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.GOERLI,"https://api-goerli.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.KOVAN,"https://api-kovan.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.BINANCE_SMART_CHAIN,"https://api.bscscan.com/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.BINANCE_SMART_CHAIN_TESTNET,"https://api-testnet.bscscan.com/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.POLYGON,"https://api.polygonscan.com/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.POLYGON_MUMBAI,"https://api-testnet.polygonscan.com/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.OPTIMISM,"https://api-optimistic.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.OPTIMISTIC_KOVAN,"https://api-kovan-optimistic.etherscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.ARBITRUM_ONE,"https://api.arbiscan.io/api"),Object(defineProperty["a" /* default */])(_NETWORK_EXPLORER_API,SupportedChainId.ARBITRUM_RINKEBY,"https://api-testnet.arbiscan.io/api"),_NETWORK_EXPLORER_API);
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}
// CONCATENATED MODULE: ./src/helpers/queries.ts
var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8;var VOTES_QUERY=Object(dist["gql"])(_templateObject||(_templateObject=_taggedTemplateLiteral(["\n  query Votes($id: String!) {\n    votes(first: 10000, where: { proposal: $id }) {\n      id\n      ipfs\n      voter\n      created\n      choice\n    }\n  }\n"])));var PROPOSAL_QUERY=Object(dist["gql"])(_templateObject2||(_templateObject2=_taggedTemplateLiteral(["\n  query Proposal($id: String!) {\n    proposal(id: $id) {\n      id\n      ipfs\n      title\n      body\n      choices\n      start\n      end\n      snapshot\n      state\n      scores\n      scores_state\n      scores_by_strategy\n      scores_total\n      author\n      created\n      plugins\n      network\n      type\n      strategies {\n        name\n        params\n      }\n      space {\n        id\n        name\n      }\n    }\n  }\n"])));var PROPOSALS_QUERY=Object(dist["gql"])(_templateObject3||(_templateObject3=_taggedTemplateLiteral(["\n  query Proposals(\n    $first: Int!\n    $skip: Int!\n    $state: String!\n    $space: String\n    $space_in: [String]\n    $author_in: [String]\n  ) {\n    proposals(\n      first: $first\n      skip: $skip\n      where: {\n        space: $space\n        state: $state\n        space_in: $space_in\n        author_in: $author_in\n      }\n    ) {\n      id\n      ipfs\n      title\n      body\n      start\n      end\n      state\n      author\n      created\n      space {\n        id\n        name\n        members\n        avatar\n      }\n      strategies {\n        name\n        params\n      }\n    }\n  }\n"])));var PROPOSAL_VOTES_QUERY=Object(dist["gql"])(_templateObject4||(_templateObject4=_taggedTemplateLiteral(["\n  query ($id: String!) {\n    proposal(id: $id) {\n      id\n      ipfs\n      title\n      body\n      choices\n      start\n      end\n      snapshot\n      state\n      author\n      created\n      plugins\n      network\n      type\n      strategies {\n        name\n        params\n      }\n      space {\n        id\n        name\n      }\n    }\n    votes(first: 10000, where: { proposal: $id }) {\n      id\n      ipfs\n      voter\n      created\n      choice\n    }\n  }\n"])));var FOLLOWS_QUERY=Object(dist["gql"])(_templateObject5||(_templateObject5=_taggedTemplateLiteral(["\n  query Follows($space_in: [String], $follower_in: [String]) {\n    follows(where: { space_in: $space_in, follower_in: $follower_in }) {\n      id\n      follower\n      space {\n        id\n      }\n    }\n  }\n"])));var SUBSCRIPTIONS_QUERY=Object(dist["gql"])(_templateObject6||(_templateObject6=_taggedTemplateLiteral(["\n  query Subscriptions($space: String, $address: String) {\n    subscriptions(where: { space: $space, address: $address }) {\n      id\n      address\n      space {\n        id\n      }\n    }\n  }\n"])));var ALIASES_QUERY=Object(dist["gql"])(_templateObject7||(_templateObject7=_taggedTemplateLiteral(["\n  query Aliases($address: String!, $alias: String!) {\n    aliases(where: { address: $address, alias: $alias }) {\n      address\n      alias\n    }\n  }\n"])));var SPACES_QUERY=Object(dist["gql"])(_templateObject8||(_templateObject8=_taggedTemplateLiteral(["\n  query Spaces($id_in: [String]) {\n    spaces(where: { id_in: $id_in }) {\n      id\n      name\n      about\n      network\n      symbol\n      terms\n      skin\n      avatar\n      twitter\n      github\n      private\n      domain\n      members\n      admins\n      plugins\n      voting {\n        delay\n        period\n        type\n        quorum\n      }\n      strategies {\n        name\n        params\n      }\n      filters {\n        minScore\n        onlyMembers\n      }\n    }\n  }\n"])));
// CONCATENATED MODULE: ./src/hooks/useProposals.ts
var ProposalState;(function(ProposalState){ProposalState[ProposalState["Pending"]=0]="Pending";ProposalState[ProposalState["Canceled"]=1]="Canceled";ProposalState[ProposalState["Active"]=2]="Active";ProposalState[ProposalState["Failed"]=3]="Failed";ProposalState[ProposalState["Succeeded"]=4]="Succeeded";ProposalState[ProposalState["Queued"]=5]="Queued";ProposalState[ProposalState["Expired"]=6]="Expired";ProposalState[ProposalState["Executed"]=7]="Executed";})(ProposalState||(ProposalState={}));var useProposals_useProposal=function useProposal(id){var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=Object(react["useState"])({}),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),proposalData=_useState4[0],setProposalData=_useState4[1];Object(react["useEffect"])(function(){var _fetchData=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var proposal;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return fetchOffChainProposal(id);case 4:proposal=_context.sent;setProposalData(proposal);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context["catch"](0);console.error("Error: Can't fetch proposal. Description: ".concat(_context.t0));case 11:_context.prev=11;setIsLoading(false);return _context.finish(11);case 14:case"end":return _context.stop();}}},_callee,null,[[0,8,11,14]]);}));return function _fetchData(){return _ref.apply(this,arguments);};}();_fetchData();},[]);return{isLoading:isLoading,proposalData:proposalData};};var fetchOffChainProposal=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(id){var offChainData;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Object(dist["request"])(OFFCHAIN_HUB_API,PROPOSAL_QUERY,{id:id});case 2:offChainData=_context2.sent;return _context2.abrupt("return",offChainData.proposal);case 4:case"end":return _context2.stop();}}},_callee2);}));return function fetchOffChainProposal(_x){return _ref2.apply(this,arguments);};}();var useProposals_useProposalList=function useProposalList(params){var _useState5=Object(react["useState"])(false),_useState6=Object(slicedToArray["a" /* default */])(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=Object(react["useState"])([]),_useState8=Object(slicedToArray["a" /* default */])(_useState7,2),offChainProposalList=_useState8[0],setOffChainProposalList=_useState8[1];Object(react["useEffect"])(function(){var _fetchData=/*#__PURE__*/function(){var _ref3=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee3(){var proposals;return regenerator_default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;setIsLoading(true);_context3.next=4;return fetchOffChainProposalList(params);case 4:proposals=_context3.sent;setOffChainProposalList(proposals);_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3["catch"](0);console.error("Error: Can't fetch proposals. Description: ".concat(_context3.t0));case 11:_context3.prev=11;setIsLoading(false);return _context3.finish(11);case 14:case"end":return _context3.stop();}}},_callee3,null,[[0,8,11,14]]);}));return function _fetchData(){return _ref3.apply(this,arguments);};}();_fetchData();},[]);return{offChainProposalList:offChainProposalList,isLoading:isLoading};};var fetchOffChainProposalList=/*#__PURE__*/function(){var _ref4=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee4(params){var offChainProposalList,proposals;return regenerator_default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return Object(dist["request"])(OFFCHAIN_HUB_API,PROPOSALS_QUERY,_objectSpread2({first:10000,skip:0,state:"all"},params));case 2:offChainProposalList=_context4.sent;proposals=offChainProposalList.proposals;if(params.tokenAddress){proposals=proposals.filter(function(proposal){var strategyAddress=proposal.strategies[0].params.address;var isTokenStrategy=strategyAddress===params.tokenAddress;return isTokenStrategy;});}return _context4.abrupt("return",proposals);case 6:case"end":return _context4.stop();}}},_callee4);}));return function fetchOffChainProposalList(_x2){return _ref4.apply(this,arguments);};}();
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(7);

// CONCATENATED MODULE: ./src/helpers/votings/singleChoice.ts
var singleChoice_SingleChoiceVoting=/*#__PURE__*/function(){function SingleChoiceVoting(proposal,votes,strategies){Object(classCallCheck["a" /* default */])(this,SingleChoiceVoting);this.proposal=void 0;this.votes=void 0;this.strategies=void 0;this.proposal=proposal;this.votes=votes;this.strategies=strategies;}//  Returns an array with the results for each choice
Object(createClass["a" /* default */])(SingleChoiceVoting,[{key:"resultsByVoteBalance",value:function resultsByVoteBalance(){var _this=this;return this.proposal.choices.map(function(choice,i){return _this.votes.filter(function(vote){return vote.choice===i+1;}).reduce(function(a,b){return a+b.balance;},0);});}//  Returns an array with the results for each choice
//  and for each strategy
},{key:"resultsByStrategyScore",value:function resultsByStrategyScore(){var _this2=this;return this.proposal.choices.map(function(choice,i){return _this2.strategies.map(function(strategy,sI){return _this2.votes.filter(function(vote){return vote.choice===i+1;}).reduce(function(a,b){return a+b.scores[sI];},0);});});}// Returns the total amount of the results
},{key:"sumOfResultsBalance",value:function sumOfResultsBalance(){return this.votes.reduce(function(a,b){return a+b.balance;},0);}}]);return SingleChoiceVoting;}();
// CONCATENATED MODULE: ./src/helpers/votings/index.ts
var Votings={"single-choice":singleChoice_SingleChoiceVoting,// approval,
// quadratic,
// 'ranked-choice': rankedChoice,
// weighted,
basic:singleChoice_SingleChoiceVoting};/* harmony default export */ var votings = (Votings);
// CONCATENATED MODULE: ./src/hooks/useVotes.ts
var useVotes_useVotes=function useVotes(proposal){var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=Object(react["useState"])([]),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),votesData=_useState4[0],setVotesData=_useState4[1];var _useState5=Object(react["useState"])(),_useState6=Object(slicedToArray["a" /* default */])(_useState5,2),resultData=_useState6[0],setResultData=_useState6[1];Object(react["useEffect"])(function(){var _fetchData=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var votes,_yield$getResults,votesWithScores,results;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return fetchVotes(proposal.id);case 4:votes=_context.sent;_context.next=7;return getResults(proposal,votes);case 7:_yield$getResults=_context.sent;votesWithScores=_yield$getResults.votesWithScores;results=_yield$getResults.results;setVotesData(votesWithScores);setResultData(results);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context["catch"](0);console.error("Error: Can't fetch votes. Description: ".concat(_context.t0));case 17:_context.prev=17;setIsLoading(false);return _context.finish(17);case 20:case"end":return _context.stop();}}},_callee,null,[[0,14,17,20]]);}));return function _fetchData(){return _ref.apply(this,arguments);};}();_fetchData();},[]);return{votesData:votesData,isLoading:isLoading,resultData:resultData};};var fetchVotes=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(id){var first,response,_args2=arguments;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:first=_args2.length>1&&_args2[1]!==undefined?_args2[1]:20000;_context2.next=3;return Object(dist["request"])(OFFCHAIN_HUB_API,VOTES_QUERY,{id:id,orderBy:"vp",orderDirection:"desc",first:first});case 3:response=_context2.sent;return _context2.abrupt("return",response.votes);case 5:case"end":return _context2.stop();}}},_callee2);}));return function fetchVotes(_x){return _ref2.apply(this,arguments);};}();function getResults(_x2,_x3){return _getResults.apply(this,arguments);}function _getResults(){_getResults=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee3(proposal,votes){var voters,snapshot,network,strategies,spaceId,state,votesWithScores,scores,votingClass,results;return regenerator_default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;voters=votes.map(function(vote){return vote.voter;});snapshot=proposal.snapshot,network=proposal.network,strategies=proposal.strategies,spaceId=proposal.space.id,state=proposal.state;votesWithScores=[];/* Get scores */if(!(state!=="pending")){_context3.next=12;break;}console.time("getResults");_context3.next=8;return getScores(spaceId,strategies,network,voters,parseInt(snapshot));case 8:scores=_context3.sent;console.timeEnd("getResults");console.log("Got scores");votesWithScores=votes.map(function(vote){var voteWithScores=_objectSpread2(_objectSpread2({},vote),{},{scores:[],balance:0});voteWithScores.scores=strategies.map(function(strategy,i){return scores[i][vote.voter]||0;});voteWithScores.balance=voteWithScores.scores.reduce(function(a,b){return a+b;},0);return voteWithScores;}).sort(function(a,b){return b.balance-a.balance;}).filter(function(vote){return vote.balance>0;});case 12:/* Get results */votingClass=new votings[proposal.type](proposal,votesWithScores,strategies);results={resultsByVoteBalance:votingClass.resultsByVoteBalance(),resultsByStrategyScore:votingClass.resultsByStrategyScore(),sumOfResultsBalance:votingClass.sumOfResultsBalance()};return _context3.abrupt("return",{votesWithScores:votesWithScores,results:results});case 17:_context3.prev=17;_context3.t0=_context3["catch"](0);console.log(_context3.t0);throw _context3.t0;case 21:case"end":return _context3.stop();}}},_callee3,null,[[0,17]]);}));return _getResults.apply(this,arguments);}function getScores(_x4,_x5,_x6,_x7){return _getScores.apply(this,arguments);}function _getScores(){_getScores=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee4(space,strategies,network,addresses){var snapshot,scoreApiUrl,params,res,obj,_args4=arguments;return regenerator_default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:snapshot=_args4.length>4&&_args4[4]!==undefined?_args4[4]:"latest";scoreApiUrl=_args4.length>5&&_args4[5]!==undefined?_args4[5]:"https://score.snapshot.org/api/scores";_context4.prev=2;params={space:space,network:network,snapshot:snapshot,strategies:strategies,addresses:addresses};_context4.next=6;return fetch(scoreApiUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({params:params})});case 6:res=_context4.sent;_context4.next=9;return res.json();case 9:obj=_context4.sent;return _context4.abrupt("return",obj.result.scores);case 13:_context4.prev=13;_context4.t0=_context4["catch"](2);return _context4.abrupt("return",Promise.reject(_context4.t0));case 16:case"end":return _context4.stop();}}},_callee4,null,[[2,13]]);}));return _getScores.apply(this,arguments);}
// EXTERNAL MODULE: ./src/pages/Proposal/index.scss
var Proposal = __webpack_require__(69);

// CONCATENATED MODULE: ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js
var isProduction = "production" === 'production';
var prefix = 'Invariant failed';

function tiny_invariant_esm_invariant(condition, message) {
  if (condition) {
    return;
  }

  if (isProduction) {
    throw new Error(prefix);
  }

  var provided = typeof message === 'function' ? message() : message;
  var value = provided ? prefix + ": " + provided : prefix;
  throw new Error(value);
}


// CONCATENATED MODULE: ./node_modules/@web3-react/types/dist/types.esm.js
var ConnectorEvent;

(function (ConnectorEvent) {
  ConnectorEvent["Update"] = "Web3ReactUpdate";
  ConnectorEvent["Error"] = "Web3ReactError";
  ConnectorEvent["Deactivate"] = "Web3ReactDeactivate";
})(ConnectorEvent || (ConnectorEvent = {}));


// EXTERNAL MODULE: ./node_modules/@ethersproject/bytes/lib.esm/index.js + 1 modules
var lib_esm = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/js-sha3/src/sha3.js
var sha3 = __webpack_require__(43);
var sha3_default = /*#__PURE__*/__webpack_require__.n(sha3);

// CONCATENATED MODULE: ./node_modules/@ethersproject/keccak256/lib.esm/index.js




function keccak256(data) {
  return '0x' + sha3_default.a.keccak_256(Object(lib_esm["a" /* arrayify */])(data));
}
// CONCATENATED MODULE: ./node_modules/@web3-react/core/dist/core.esm.js







function core_esm_extends() {
  core_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return core_esm_extends.apply(this, arguments);
}

function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _construct(Parent, args, Class) {
  if (_isNativeReflectConstruct()) {
    _construct = Reflect.construct;
  } else {
    _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) _setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return _construct(Class, arguments, _getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return _setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
} // A type of promise-like that resolves synchronously and supports only one observer


var _iteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol("Symbol.iterator")) : "@@iterator"; // Asynchronously iterate through an object's values


var _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol("Symbol.asyncIterator")) : "@@asyncIterator"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing


function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
} // Asynchronously await a promise and pass the result to a finally continuation


function normalizeChainId(chainId) {
  if (typeof chainId === 'string') {
    // Temporary fix until the next version of Metamask Mobile gets released.
    // In the current version (0.2.13), the chainId starts with “Ox” rather
    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275
    chainId = chainId.replace(/^Ox/, '0x');
    var parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);
    !!Number.isNaN(parsedChainId) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
    return parsedChainId;
  } else {
    !Number.isInteger(chainId) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
    return chainId;
  }
} // https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts


function normalizeAccount(_address) {
  !(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/)) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
  var address = _address.substring(0, 2) === '0x' ? _address : "0x" + _address;
  var chars = address.toLowerCase().substring(2).split('');
  var charsArray = new Uint8Array(40);

  for (var i = 0; i < 40; i++) {
    charsArray[i] = chars[i].charCodeAt(0);
  }

  var hashed = Object(lib_esm["a" /* arrayify */])(keccak256(charsArray));

  for (var _i = 0; _i < 40; _i += 2) {
    if (hashed[_i >> 1] >> 4 >= 8) {
      chars[_i] = chars[_i].toUpperCase();
    }

    if ((hashed[_i >> 1] & 0x0f) >= 8) {
      chars[_i + 1] = chars[_i + 1].toUpperCase();
    }
  }

  var addressChecksum = "0x" + chars.join('');
  !!(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
  return addressChecksum;
}

var augmentConnectorUpdate = function augmentConnectorUpdate(connector, update) {
  try {
    var _temp3 = function _temp3(provider) {
      return Promise.resolve(Promise.all([update.chainId === undefined ? connector.getChainId() : update.chainId, update.account === undefined ? connector.getAccount() : update.account])).then(function (_ref2) {
        var _chainId = _ref2[0],
            _account = _ref2[1];
        var chainId = normalizeChainId(_chainId);

        if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {
          throw new UnsupportedChainIdError(chainId, connector.supportedChainIds);
        }

        var account = _account === null ? _account : normalizeAccount(_account);
        return {
          provider: provider,
          chainId: chainId,
          account: account
        };
      });
    };

    var _temp4 = update.provider === undefined;

    return Promise.resolve(_temp4 ? Promise.resolve(connector.getProvider()).then(_temp3) : _temp3(update.provider));
  } catch (e) {
    return Promise.reject(e);
  }
};

var StaleConnectorError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(StaleConnectorError, _Error);

  function StaleConnectorError() {
    var _this;

    _this = _Error.call(this) || this;
    _this.name = _this.constructor.name;
    return _this;
  }

  return StaleConnectorError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var UnsupportedChainIdError = /*#__PURE__*/function (_Error2) {
  _inheritsLoose(UnsupportedChainIdError, _Error2);

  function UnsupportedChainIdError(unsupportedChainId, supportedChainIds) {
    var _this2;

    _this2 = _Error2.call(this) || this;
    _this2.name = _this2.constructor.name;
    _this2.message = "Unsupported chain id: " + unsupportedChainId + ". Supported chain ids are: " + supportedChainIds + ".";
    return _this2;
  }

  return UnsupportedChainIdError;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var ActionType;

(function (ActionType) {
  ActionType[ActionType["ACTIVATE_CONNECTOR"] = 0] = "ACTIVATE_CONNECTOR";
  ActionType[ActionType["UPDATE"] = 1] = "UPDATE";
  ActionType[ActionType["UPDATE_FROM_ERROR"] = 2] = "UPDATE_FROM_ERROR";
  ActionType[ActionType["ERROR"] = 3] = "ERROR";
  ActionType[ActionType["ERROR_FROM_ACTIVATION"] = 4] = "ERROR_FROM_ACTIVATION";
  ActionType[ActionType["DEACTIVATE_CONNECTOR"] = 5] = "DEACTIVATE_CONNECTOR";
})(ActionType || (ActionType = {}));

function reducer(state, _ref) {
  var type = _ref.type,
      payload = _ref.payload;

  switch (type) {
    case ActionType.ACTIVATE_CONNECTOR:
      {
        var connector = payload.connector,
            provider = payload.provider,
            chainId = payload.chainId,
            account = payload.account,
            onError = payload.onError;
        return {
          connector: connector,
          provider: provider,
          chainId: chainId,
          account: account,
          onError: onError
        };
      }

    case ActionType.UPDATE:
      {
        var _provider = payload.provider,
            _chainId2 = payload.chainId,
            _account2 = payload.account;
        return core_esm_extends({}, state, _provider === undefined ? {} : {
          provider: _provider
        }, _chainId2 === undefined ? {} : {
          chainId: _chainId2
        }, _account2 === undefined ? {} : {
          account: _account2
        });
      }

    case ActionType.UPDATE_FROM_ERROR:
      {
        var _provider2 = payload.provider,
            _chainId3 = payload.chainId,
            _account3 = payload.account;
        return core_esm_extends({}, state, _provider2 === undefined ? {} : {
          provider: _provider2
        }, _chainId3 === undefined ? {} : {
          chainId: _chainId3
        }, _account3 === undefined ? {} : {
          account: _account3
        }, {
          error: undefined
        });
      }

    case ActionType.ERROR:
      {
        var error = payload.error;
        var _connector = state.connector,
            _onError = state.onError;
        return {
          connector: _connector,
          error: error,
          onError: _onError
        };
      }

    case ActionType.ERROR_FROM_ACTIVATION:
      {
        var _connector2 = payload.connector,
            _error = payload.error;
        return {
          connector: _connector2,
          error: _error
        };
      }

    case ActionType.DEACTIVATE_CONNECTOR:
      {
        return {};
      }
  }
}

function useWeb3ReactManager() {
  var _useReducer = Object(react["useReducer"])(reducer, {}),
      state = _useReducer[0],
      dispatch = _useReducer[1];

  var connector = state.connector,
      provider = state.provider,
      chainId = state.chainId,
      account = state.account,
      onError = state.onError,
      error = state.error;
  var updateBusterRef = Object(react["useRef"])(-1);
  updateBusterRef.current += 1;
  var activate = Object(react["useCallback"])(function (connector, onError, throwErrors) {
    if (throwErrors === void 0) {
      throwErrors = false;
    }

    try {
      var updateBusterInitial = updateBusterRef.current;
      var activated = false;
      return Promise.resolve(_catch(function () {
        return Promise.resolve(connector.activate().then(function (update) {
          activated = true;
          return update;
        })).then(function (update) {
          return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {
            if (updateBusterRef.current > updateBusterInitial) {
              throw new StaleConnectorError();
            }

            dispatch({
              type: ActionType.ACTIVATE_CONNECTOR,
              payload: core_esm_extends({
                connector: connector
              }, augmentedUpdate, {
                onError: onError
              })
            });
          });
        });
      }, function (error) {
        if (error instanceof StaleConnectorError) {
          activated && connector.deactivate();
           false ? undefined : void 0;
        } else if (throwErrors) {
          activated && connector.deactivate();
          throw error;
        } else if (onError) {
          activated && connector.deactivate();
          onError(error);
        } else {
          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect
          dispatch({
            type: ActionType.ERROR_FROM_ACTIVATION,
            payload: {
              connector: connector,
              error: error
            }
          });
        }
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  }, []);
  var setError = Object(react["useCallback"])(function (error) {
    dispatch({
      type: ActionType.ERROR,
      payload: {
        error: error
      }
    });
  }, []);
  var deactivate = Object(react["useCallback"])(function () {
    dispatch({
      type: ActionType.DEACTIVATE_CONNECTOR
    });
  }, []);
  var handleUpdate = Object(react["useCallback"])(function (update) {
    try {
      if (!connector) {
        throw Error("This should never happen, it's just so Typescript stops complaining");
      }

      var updateBusterInitial = updateBusterRef.current; // updates are handled differently depending on whether the connector is active vs in an error state

      return Promise.resolve(function () {
        if (!error) {
          var _chainId4 = update.chainId === undefined ? undefined : normalizeChainId(update.chainId);

          if (_chainId4 !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(_chainId4)) {
            var _error2 = new UnsupportedChainIdError(_chainId4, connector.supportedChainIds);

            onError ? onError(_error2) : dispatch({
              type: ActionType.ERROR,
              payload: {
                error: _error2
              }
            });
          } else {
            var _account4 = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account;

            dispatch({
              type: ActionType.UPDATE,
              payload: {
                provider: update.provider,
                chainId: _chainId4,
                account: _account4
              }
            });
          }
        } else {
          return _catch(function () {
            return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {
              if (updateBusterRef.current > updateBusterInitial) {
                throw new StaleConnectorError();
              }

              dispatch({
                type: ActionType.UPDATE_FROM_ERROR,
                payload: augmentedUpdate
              });
            });
          }, function (error) {
            if (error instanceof StaleConnectorError) {
               false ? undefined : void 0;
            } else {
              // though we don't have to, we're re-circulating the new error
              onError ? onError(error) : dispatch({
                type: ActionType.ERROR,
                payload: {
                  error: error
                }
              });
            }
          });
        }
      }());
    } catch (e) {
      return Promise.reject(e);
    }
  }, [connector, error, onError]);
  var handleError = Object(react["useCallback"])(function (error) {
    onError ? onError(error) : dispatch({
      type: ActionType.ERROR,
      payload: {
        error: error
      }
    });
  }, [onError]);
  var handleDeactivate = Object(react["useCallback"])(function () {
    dispatch({
      type: ActionType.DEACTIVATE_CONNECTOR
    });
  }, []); // ensure that connectors which were set are deactivated

  Object(react["useEffect"])(function () {
    return function () {
      if (connector) {
        connector.deactivate();
      }
    };
  }, [connector]); // ensure that events emitted from the set connector are handled appropriately

  Object(react["useEffect"])(function () {
    if (connector) {
      connector.on(ConnectorEvent.Update, handleUpdate).on(ConnectorEvent.Error, handleError).on(ConnectorEvent.Deactivate, handleDeactivate);
    }

    return function () {
      if (connector) {
        connector.off(ConnectorEvent.Update, handleUpdate).off(ConnectorEvent.Error, handleError).off(ConnectorEvent.Deactivate, handleDeactivate);
      }
    };
  }, [connector, handleUpdate, handleError, handleDeactivate]);
  return {
    connector: connector,
    provider: provider,
    chainId: chainId,
    account: account,
    activate: activate,
    setError: setError,
    deactivate: deactivate,
    error: error
  };
}

var PRIMARY_KEY = 'primary';
var CONTEXTS = {};

function createWeb3ReactRoot(key) {
  !!CONTEXTS[key] ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
  CONTEXTS[key] = Object(react["createContext"])({
    activate: function activate() {
      try {
         true ?  false ? undefined : tiny_invariant_esm_invariant(false) : undefined;
        return Promise.resolve();
      } catch (e) {
        return Promise.reject(e);
      }
    },
    setError: function setError() {
       false ? undefined : tiny_invariant_esm_invariant(false);
    },
    deactivate: function deactivate() {
       false ? undefined : tiny_invariant_esm_invariant(false);
    },
    active: false
  });
  CONTEXTS[key].displayName = "Web3ReactContext - " + key;
  var Provider = CONTEXTS[key].Provider;
  return function Web3ReactProvider(_ref) {
    var getLibrary = _ref.getLibrary,
        children = _ref.children;

    var _useWeb3ReactManager = useWeb3ReactManager(),
        connector = _useWeb3ReactManager.connector,
        provider = _useWeb3ReactManager.provider,
        chainId = _useWeb3ReactManager.chainId,
        account = _useWeb3ReactManager.account,
        activate = _useWeb3ReactManager.activate,
        setError = _useWeb3ReactManager.setError,
        deactivate = _useWeb3ReactManager.deactivate,
        error = _useWeb3ReactManager.error;

    var active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error;
    var library = Object(react["useMemo"])(function () {
      return active && chainId !== undefined && Number.isInteger(chainId) && !!connector ? getLibrary(provider, connector) : undefined;
    }, [active, getLibrary, provider, connector, chainId]);
    var web3ReactContext = {
      connector: connector,
      library: library,
      chainId: chainId,
      account: account,
      activate: activate,
      setError: setError,
      deactivate: deactivate,
      active: active,
      error: error
    };
    return react_default.a.createElement(Provider, {
      value: web3ReactContext
    }, children);
  };
}

var core_esm_Web3ReactProvider = /*#__PURE__*/createWeb3ReactRoot(PRIMARY_KEY);

function getWeb3ReactContext(key) {
  if (key === void 0) {
    key = PRIMARY_KEY;
  }

  !Object.keys(CONTEXTS).includes(key) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
  return CONTEXTS[key];
}

function useWeb3React(key) {
  return Object(react["useContext"])(getWeb3ReactContext(key));
}


// CONCATENATED MODULE: ./node_modules/remarkable/dist/esm/index.browser.js
var index_browser_textarea;

function decodeEntity(name) {
  index_browser_textarea = index_browser_textarea || document.createElement('textarea');
  index_browser_textarea.innerHTML = '&' + name + ';';
  return index_browser_textarea.value;
}
/**
 * Utility functions
 */


function typeOf(obj) {
  return Object.prototype.toString.call(obj);
}

function isString(obj) {
  return typeOf(obj) === '[object String]';
}

var hasOwn = Object.prototype.hasOwnProperty;

function has(object, key) {
  return object ? hasOwn.call(object, key) : false;
} // Extend objects
//


function index_browser_assign(obj
/*from1, from2, from3, ...*/
) {
  var sources = [].slice.call(arguments, 1);
  sources.forEach(function (source) {
    if (!source) {
      return;
    }

    if (typeof source !== 'object') {
      throw new TypeError(source + 'must be object');
    }

    Object.keys(source).forEach(function (key) {
      obj[key] = source[key];
    });
  });
  return obj;
} ////////////////////////////////////////////////////////////////////////////////


var UNESCAPE_MD_RE = /\\([\\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

function unescapeMd(str) {
  if (str.indexOf('\\') < 0) {
    return str;
  }

  return str.replace(UNESCAPE_MD_RE, '$1');
} ////////////////////////////////////////////////////////////////////////////////


function isValidEntityCode(c) {
  /*eslint no-bitwise:0*/
  // broken sequence
  if (c >= 0xD800 && c <= 0xDFFF) {
    return false;
  } // never used


  if (c >= 0xFDD0 && c <= 0xFDEF) {
    return false;
  }

  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {
    return false;
  } // control codes


  if (c >= 0x00 && c <= 0x08) {
    return false;
  }

  if (c === 0x0B) {
    return false;
  }

  if (c >= 0x0E && c <= 0x1F) {
    return false;
  }

  if (c >= 0x7F && c <= 0x9F) {
    return false;
  } // out of range


  if (c > 0x10FFFF) {
    return false;
  }

  return true;
}

function fromCodePoint(c) {
  /*eslint no-bitwise:0*/
  if (c > 0xffff) {
    c -= 0x10000;
    var surrogate1 = 0xd800 + (c >> 10),
        surrogate2 = 0xdc00 + (c & 0x3ff);
    return String.fromCharCode(surrogate1, surrogate2);
  }

  return String.fromCharCode(c);
}

var NAMED_ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;
var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;

function replaceEntityPattern(match, name) {
  var code = 0;
  var decoded = decodeEntity(name);

  if (name !== decoded) {
    return decoded;
  } else if (name.charCodeAt(0) === 0x23
  /* # */
  && DIGITAL_ENTITY_TEST_RE.test(name)) {
    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);

    if (isValidEntityCode(code)) {
      return fromCodePoint(code);
    }
  }

  return match;
}

function replaceEntities(str) {
  if (str.indexOf('&') < 0) {
    return str;
  }

  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);
} ////////////////////////////////////////////////////////////////////////////////


var HTML_ESCAPE_TEST_RE = /[&<>"]/;
var HTML_ESCAPE_REPLACE_RE = /[&<>"]/g;
var HTML_REPLACEMENTS = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;'
};

function replaceUnsafeChar(ch) {
  return HTML_REPLACEMENTS[ch];
}

function escapeHtml(str) {
  if (HTML_ESCAPE_TEST_RE.test(str)) {
    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);
  }

  return str;
}

var utils = /*#__PURE__*/Object.freeze({
  isString: isString,
  has: has,
  assign: index_browser_assign,
  unescapeMd: unescapeMd,
  isValidEntityCode: isValidEntityCode,
  fromCodePoint: fromCodePoint,
  replaceEntities: replaceEntities,
  escapeHtml: escapeHtml
});
/**
 * Renderer rules cache
 */

var rules = {};
/**
 * Blockquotes
 */

rules.blockquote_open = function
  /* tokens, idx, options, env */
() {
  return '<blockquote>\n';
};

rules.blockquote_close = function (tokens, idx
/*, options, env */
) {
  return '</blockquote>' + getBreak(tokens, idx);
};
/**
 * Code
 */


rules.code = function (tokens, idx
/*, options, env */
) {
  if (tokens[idx].block) {
    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);
  }

  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';
};
/**
 * Fenced code blocks
 */


rules.fence = function (tokens, idx, options, env, instance) {
  var token = tokens[idx];
  var langClass = '';
  var langPrefix = options.langPrefix;
  var langName = '',
      fences,
      fenceName;
  var highlighted;

  if (token.params) {
    //
    // ```foo bar
    //
    // Try custom renderer "foo" first. That will simplify overwrite
    // for diagrams, latex, and any other fenced block with custom look
    //
    fences = token.params.split(/\s+/g);
    fenceName = fences.join(' ');

    if (has(instance.rules.fence_custom, fences[0])) {
      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);
    }

    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));
    langClass = ' class="' + langPrefix + langName + '"';
  }

  if (options.highlight) {
    highlighted = options.highlight.apply(options.highlight, [token.content].concat(fences)) || escapeHtml(token.content);
  } else {
    highlighted = escapeHtml(token.content);
  }

  return '<pre><code' + langClass + '>' + highlighted + '</code></pre>' + getBreak(tokens, idx);
};

rules.fence_custom = {};
/**
 * Headings
 */

rules.heading_open = function (tokens, idx
/*, options, env */
) {
  return '<h' + tokens[idx].hLevel + '>';
};

rules.heading_close = function (tokens, idx
/*, options, env */
) {
  return '</h' + tokens[idx].hLevel + '>\n';
};
/**
 * Horizontal rules
 */


rules.hr = function (tokens, idx, options
/*, env */
) {
  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);
};
/**
 * Bullets
 */


rules.bullet_list_open = function
  /* tokens, idx, options, env */
() {
  return '<ul>\n';
};

rules.bullet_list_close = function (tokens, idx
/*, options, env */
) {
  return '</ul>' + getBreak(tokens, idx);
};
/**
 * List items
 */


rules.list_item_open = function
  /* tokens, idx, options, env */
() {
  return '<li>';
};

rules.list_item_close = function
  /* tokens, idx, options, env */
() {
  return '</li>\n';
};
/**
 * Ordered list items
 */


rules.ordered_list_open = function (tokens, idx
/*, options, env */
) {
  var token = tokens[idx];
  var order = token.order > 1 ? ' start="' + token.order + '"' : '';
  return '<ol' + order + '>\n';
};

rules.ordered_list_close = function (tokens, idx
/*, options, env */
) {
  return '</ol>' + getBreak(tokens, idx);
};
/**
 * Paragraphs
 */


rules.paragraph_open = function (tokens, idx
/*, options, env */
) {
  return tokens[idx].tight ? '' : '<p>';
};

rules.paragraph_close = function (tokens, idx
/*, options, env */
) {
  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);
  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');
};
/**
 * Links
 */


rules.link_open = function (tokens, idx, options
/* env */
) {
  var title = tokens[idx].title ? ' title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '"' : '';
  var target = options.linkTarget ? ' target="' + options.linkTarget + '"' : '';
  return '<a href="' + escapeHtml(tokens[idx].href) + '"' + title + target + '>';
};

rules.link_close = function
  /* tokens, idx, options, env */
() {
  return '</a>';
};
/**
 * Images
 */


rules.image = function (tokens, idx, options
/*, env */
) {
  var src = ' src="' + escapeHtml(tokens[idx].src) + '"';
  var title = tokens[idx].title ? ' title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '"' : '';
  var alt = ' alt="' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '"';
  var suffix = options.xhtmlOut ? ' /' : '';
  return '<img' + src + alt + title + suffix + '>';
};
/**
 * Tables
 */


rules.table_open = function
  /* tokens, idx, options, env */
() {
  return '<table>\n';
};

rules.table_close = function
  /* tokens, idx, options, env */
() {
  return '</table>\n';
};

rules.thead_open = function
  /* tokens, idx, options, env */
() {
  return '<thead>\n';
};

rules.thead_close = function
  /* tokens, idx, options, env */
() {
  return '</thead>\n';
};

rules.tbody_open = function
  /* tokens, idx, options, env */
() {
  return '<tbody>\n';
};

rules.tbody_close = function
  /* tokens, idx, options, env */
() {
  return '</tbody>\n';
};

rules.tr_open = function
  /* tokens, idx, options, env */
() {
  return '<tr>';
};

rules.tr_close = function
  /* tokens, idx, options, env */
() {
  return '</tr>\n';
};

rules.th_open = function (tokens, idx
/*, options, env */
) {
  var token = tokens[idx];
  return '<th' + (token.align ? ' style="text-align:' + token.align + '"' : '') + '>';
};

rules.th_close = function
  /* tokens, idx, options, env */
() {
  return '</th>';
};

rules.td_open = function (tokens, idx
/*, options, env */
) {
  var token = tokens[idx];
  return '<td' + (token.align ? ' style="text-align:' + token.align + '"' : '') + '>';
};

rules.td_close = function
  /* tokens, idx, options, env */
() {
  return '</td>';
};
/**
 * Bold
 */


rules.strong_open = function
  /* tokens, idx, options, env */
() {
  return '<strong>';
};

rules.strong_close = function
  /* tokens, idx, options, env */
() {
  return '</strong>';
};
/**
 * Italicize
 */


rules.em_open = function
  /* tokens, idx, options, env */
() {
  return '<em>';
};

rules.em_close = function
  /* tokens, idx, options, env */
() {
  return '</em>';
};
/**
 * Strikethrough
 */


rules.del_open = function
  /* tokens, idx, options, env */
() {
  return '<del>';
};

rules.del_close = function
  /* tokens, idx, options, env */
() {
  return '</del>';
};
/**
 * Insert
 */


rules.ins_open = function
  /* tokens, idx, options, env */
() {
  return '<ins>';
};

rules.ins_close = function
  /* tokens, idx, options, env */
() {
  return '</ins>';
};
/**
 * Highlight
 */


rules.mark_open = function
  /* tokens, idx, options, env */
() {
  return '<mark>';
};

rules.mark_close = function
  /* tokens, idx, options, env */
() {
  return '</mark>';
};
/**
 * Super- and sub-script
 */


rules.sub = function (tokens, idx
/*, options, env */
) {
  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';
};

rules.sup = function (tokens, idx
/*, options, env */
) {
  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';
};
/**
 * Breaks
 */


rules.hardbreak = function (tokens, idx, options
/*, env */
) {
  return options.xhtmlOut ? '<br />\n' : '<br>\n';
};

rules.softbreak = function (tokens, idx, options
/*, env */
) {
  return options.breaks ? options.xhtmlOut ? '<br />\n' : '<br>\n' : '\n';
};
/**
 * Text
 */


rules.text = function (tokens, idx
/*, options, env */
) {
  return escapeHtml(tokens[idx].content);
};
/**
 * Content
 */


rules.htmlblock = function (tokens, idx
/*, options, env */
) {
  return tokens[idx].content;
};

rules.htmltag = function (tokens, idx
/*, options, env */
) {
  return tokens[idx].content;
};
/**
 * Abbreviations, initialism
 */


rules.abbr_open = function (tokens, idx
/*, options, env */
) {
  return '<abbr title="' + escapeHtml(replaceEntities(tokens[idx].title)) + '">';
};

rules.abbr_close = function
  /* tokens, idx, options, env */
() {
  return '</abbr>';
};
/**
 * Footnotes
 */


rules.footnote_ref = function (tokens, idx) {
  var n = Number(tokens[idx].id + 1).toString();
  var id = 'fnref' + n;

  if (tokens[idx].subId > 0) {
    id += ':' + tokens[idx].subId;
  }

  return '<sup class="footnote-ref"><a href="#fn' + n + '" id="' + id + '">[' + n + ']</a></sup>';
};

rules.footnote_block_open = function (tokens, idx, options) {
  var hr = options.xhtmlOut ? '<hr class="footnotes-sep" />\n' : '<hr class="footnotes-sep">\n';
  return hr + '<section class="footnotes">\n<ol class="footnotes-list">\n';
};

rules.footnote_block_close = function () {
  return '</ol>\n</section>\n';
};

rules.footnote_open = function (tokens, idx) {
  var id = Number(tokens[idx].id + 1).toString();
  return '<li id="fn' + id + '"  class="footnote-item">';
};

rules.footnote_close = function () {
  return '</li>\n';
};

rules.footnote_anchor = function (tokens, idx) {
  var n = Number(tokens[idx].id + 1).toString();
  var id = 'fnref' + n;

  if (tokens[idx].subId > 0) {
    id += ':' + tokens[idx].subId;
  }

  return ' <a href="#' + id + '" class="footnote-backref">↩</a>';
};
/**
 * Definition lists
 */


rules.dl_open = function () {
  return '<dl>\n';
};

rules.dt_open = function () {
  return '<dt>';
};

rules.dd_open = function () {
  return '<dd>';
};

rules.dl_close = function () {
  return '</dl>\n';
};

rules.dt_close = function () {
  return '</dt>\n';
};

rules.dd_close = function () {
  return '</dd>\n';
};
/**
 * Helper functions
 */


function nextToken(tokens, idx) {
  if (++idx >= tokens.length - 2) {
    return idx;
  }

  if (tokens[idx].type === 'paragraph_open' && tokens[idx].tight && tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0 && tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight) {
    return nextToken(tokens, idx + 2);
  }

  return idx;
}
/**
 * Check to see if `\n` is needed before the next token.
 *
 * @param  {Array} `tokens`
 * @param  {Number} `idx`
 * @return {String} Empty string or newline
 * @api private
 */


var getBreak = rules.getBreak = function getBreak(tokens, idx) {
  idx = nextToken(tokens, idx);

  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {
    return '';
  }

  return '\n';
};
/**
 * Renderer class. Renders HTML and exposes `rules` to allow
 * local modifications.
 */


function Renderer() {
  this.rules = index_browser_assign({}, rules); // exported helper, for custom rules only

  this.getBreak = rules.getBreak;
}
/**
 * Render a string of inline HTML with the given `tokens` and
 * `options`.
 *
 * @param  {Array} `tokens`
 * @param  {Object} `options`
 * @param  {Object} `env`
 * @return {String}
 * @api public
 */


Renderer.prototype.renderInline = function (tokens, options, env) {
  var _rules = this.rules;
  var len = tokens.length,
      i = 0;
  var result = '';

  while (len--) {
    result += _rules[tokens[i].type](tokens, i++, options, env, this);
  }

  return result;
};
/**
 * Render a string of HTML with the given `tokens` and
 * `options`.
 *
 * @param  {Array} `tokens`
 * @param  {Object} `options`
 * @param  {Object} `env`
 * @return {String}
 * @api public
 */


Renderer.prototype.render = function (tokens, options, env) {
  var _rules = this.rules;
  var len = tokens.length,
      i = -1;
  var result = '';

  while (++i < len) {
    if (tokens[i].type === 'inline') {
      result += this.renderInline(tokens[i].children, options, env);
    } else {
      result += _rules[tokens[i].type](tokens, i, options, env, this);
    }
  }

  return result;
};
/**
 * Ruler is a helper class for building responsibility chains from
 * parse rules. It allows:
 *
 *   - easy stack rules chains
 *   - getting main chain and named chains content (as arrays of functions)
 *
 * Helper methods, should not be used directly.
 * @api private
 */


function Ruler() {
  // List of added rules. Each element is:
  //
  // { name: XXX,
  //   enabled: Boolean,
  //   fn: Function(),
  //   alt: [ name2, name3 ] }
  //
  this.__rules__ = []; // Cached rule chains.
  //
  // First level - chain name, '' for default.
  // Second level - digital anchor for fast filtering by charcodes.
  //

  this.__cache__ = null;
}
/**
 * Find the index of a rule by `name`.
 *
 * @param  {String} `name`
 * @return {Number} Index of the given `name`
 * @api private
 */


Ruler.prototype.__find__ = function (name) {
  var len = this.__rules__.length;
  var i = -1;

  while (len--) {
    if (this.__rules__[++i].name === name) {
      return i;
    }
  }

  return -1;
};
/**
 * Build the rules lookup cache
 *
 * @api private
 */


Ruler.prototype.__compile__ = function () {
  var self = this;
  var chains = ['']; // collect unique names

  self.__rules__.forEach(function (rule) {
    if (!rule.enabled) {
      return;
    }

    rule.alt.forEach(function (altName) {
      if (chains.indexOf(altName) < 0) {
        chains.push(altName);
      }
    });
  });

  self.__cache__ = {};
  chains.forEach(function (chain) {
    self.__cache__[chain] = [];

    self.__rules__.forEach(function (rule) {
      if (!rule.enabled) {
        return;
      }

      if (chain && rule.alt.indexOf(chain) < 0) {
        return;
      }

      self.__cache__[chain].push(rule.fn);
    });
  });
};
/**
 * Ruler public methods
 * ------------------------------------------------
 */

/**
 * Replace rule function
 *
 * @param  {String} `name` Rule name
 * @param  {Function `fn`
 * @param  {Object} `options`
 * @api private
 */


Ruler.prototype.at = function (name, fn, options) {
  var idx = this.__find__(name);

  var opt = options || {};

  if (idx === -1) {
    throw new Error('Parser rule not found: ' + name);
  }

  this.__rules__[idx].fn = fn;
  this.__rules__[idx].alt = opt.alt || [];
  this.__cache__ = null;
};
/**
 * Add a rule to the chain before given the `ruleName`.
 *
 * @param  {String}   `beforeName`
 * @param  {String}   `ruleName`
 * @param  {Function} `fn`
 * @param  {Object}   `options`
 * @api private
 */


Ruler.prototype.before = function (beforeName, ruleName, fn, options) {
  var idx = this.__find__(beforeName);

  var opt = options || {};

  if (idx === -1) {
    throw new Error('Parser rule not found: ' + beforeName);
  }

  this.__rules__.splice(idx, 0, {
    name: ruleName,
    enabled: true,
    fn: fn,
    alt: opt.alt || []
  });

  this.__cache__ = null;
};
/**
 * Add a rule to the chain after the given `ruleName`.
 *
 * @param  {String}   `afterName`
 * @param  {String}   `ruleName`
 * @param  {Function} `fn`
 * @param  {Object}   `options`
 * @api private
 */


Ruler.prototype.after = function (afterName, ruleName, fn, options) {
  var idx = this.__find__(afterName);

  var opt = options || {};

  if (idx === -1) {
    throw new Error('Parser rule not found: ' + afterName);
  }

  this.__rules__.splice(idx + 1, 0, {
    name: ruleName,
    enabled: true,
    fn: fn,
    alt: opt.alt || []
  });

  this.__cache__ = null;
};
/**
 * Add a rule to the end of chain.
 *
 * @param  {String}   `ruleName`
 * @param  {Function} `fn`
 * @param  {Object}   `options`
 * @return {String}
 */


Ruler.prototype.push = function (ruleName, fn, options) {
  var opt = options || {};

  this.__rules__.push({
    name: ruleName,
    enabled: true,
    fn: fn,
    alt: opt.alt || []
  });

  this.__cache__ = null;
};
/**
 * Enable a rule or list of rules.
 *
 * @param  {String|Array} `list` Name or array of rule names to enable
 * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.
 * @api private
 */


Ruler.prototype.enable = function (list, strict) {
  list = !Array.isArray(list) ? [list] : list; // In strict mode disable all existing rules first

  if (strict) {
    this.__rules__.forEach(function (rule) {
      rule.enabled = false;
    });
  } // Search by name and enable


  list.forEach(function (name) {
    var idx = this.__find__(name);

    if (idx < 0) {
      throw new Error('Rules manager: invalid rule name ' + name);
    }

    this.__rules__[idx].enabled = true;
  }, this);
  this.__cache__ = null;
};
/**
 * Disable a rule or list of rules.
 *
 * @param  {String|Array} `list` Name or array of rule names to disable
 * @api private
 */


Ruler.prototype.disable = function (list) {
  list = !Array.isArray(list) ? [list] : list; // Search by name and disable

  list.forEach(function (name) {
    var idx = this.__find__(name);

    if (idx < 0) {
      throw new Error('Rules manager: invalid rule name ' + name);
    }

    this.__rules__[idx].enabled = false;
  }, this);
  this.__cache__ = null;
};
/**
 * Get a rules list as an array of functions.
 *
 * @param  {String} `chainName`
 * @return {Object}
 * @api private
 */


Ruler.prototype.getRules = function (chainName) {
  if (this.__cache__ === null) {
    this.__compile__();
  }

  return this.__cache__[chainName] || [];
};

function index_browser_block(state) {
  if (state.inlineMode) {
    state.tokens.push({
      type: 'inline',
      content: state.src.replace(/\n/g, ' ').trim(),
      level: 0,
      lines: [0, 1],
      children: []
    });
  } else {
    state.block.parse(state.src, state.options, state.env, state.tokens);
  }
} // Inline parser state


function StateInline(src, parserInline, options, env, outTokens) {
  this.src = src;
  this.env = env;
  this.options = options;
  this.parser = parserInline;
  this.tokens = outTokens;
  this.pos = 0;
  this.posMax = this.src.length;
  this.level = 0;
  this.pending = '';
  this.pendingLevel = 0;
  this.cache = []; // Stores { start: end } pairs. Useful for backtrack
  // optimization of pairs parse (emphasis, strikes).
  // Link parser state vars

  this.isInLabel = false; // Set true when seek link label - we should disable
  // "paired" rules (emphasis, strikes) to not skip
  // tailing `]`

  this.linkLevel = 0; // Increment for each nesting link. Used to prevent
  // nesting in definitions

  this.linkContent = ''; // Temporary storage for link url

  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels
  // (backtrack optimization)
} // Flush pending text
//


StateInline.prototype.pushPending = function () {
  this.tokens.push({
    type: 'text',
    content: this.pending,
    level: this.pendingLevel
  });
  this.pending = '';
}; // Push new token to "stream".
// If pending text exists - flush it as text token
//


StateInline.prototype.push = function (token) {
  if (this.pending) {
    this.pushPending();
  }

  this.tokens.push(token);
  this.pendingLevel = this.level;
}; // Store value to cache.
// !!! Implementation has parser-specific optimizations
// !!! keys MUST be integer, >= 0; values MUST be integer, > 0
//


StateInline.prototype.cacheSet = function (key, val) {
  for (var i = this.cache.length; i <= key; i++) {
    this.cache.push(0);
  }

  this.cache[key] = val;
}; // Get cache value
//


StateInline.prototype.cacheGet = function (key) {
  return key < this.cache.length ? this.cache[key] : 0;
};
/**
 * Parse link labels
 *
 * This function assumes that first character (`[`) already matches;
 * returns the end of the label.
 *
 * @param  {Object} state
 * @param  {Number} start
 * @api private
 */


function parseLinkLabel(state, start) {
  var level,
      found,
      marker,
      labelEnd = -1,
      max = state.posMax,
      oldPos = state.pos,
      oldFlag = state.isInLabel;

  if (state.isInLabel) {
    return -1;
  }

  if (state.labelUnmatchedScopes) {
    state.labelUnmatchedScopes--;
    return -1;
  }

  state.pos = start + 1;
  state.isInLabel = true;
  level = 1;

  while (state.pos < max) {
    marker = state.src.charCodeAt(state.pos);

    if (marker === 0x5B
    /* [ */
    ) {
      level++;
    } else if (marker === 0x5D
    /* ] */
    ) {
      level--;

      if (level === 0) {
        found = true;
        break;
      }
    }

    state.parser.skipToken(state);
  }

  if (found) {
    labelEnd = state.pos;
    state.labelUnmatchedScopes = 0;
  } else {
    state.labelUnmatchedScopes = level - 1;
  } // restore old state


  state.pos = oldPos;
  state.isInLabel = oldFlag;
  return labelEnd;
} // Parse abbreviation definitions, i.e. `*[abbr]: description`


function parseAbbr(str, parserInline, options, env) {
  var state, labelEnd, pos, max, label, title;

  if (str.charCodeAt(0) !== 0x2A
  /* * */
  ) {
    return -1;
  }

  if (str.charCodeAt(1) !== 0x5B
  /* [ */
  ) {
    return -1;
  }

  if (str.indexOf(']:') === -1) {
    return -1;
  }

  state = new StateInline(str, parserInline, options, env, []);
  labelEnd = parseLinkLabel(state, 1);

  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A
  /* : */
  ) {
    return -1;
  }

  max = state.posMax; // abbr title is always one line, so looking for ending "\n" here

  for (pos = labelEnd + 2; pos < max; pos++) {
    if (state.src.charCodeAt(pos) === 0x0A) {
      break;
    }
  }

  label = str.slice(2, labelEnd);
  title = str.slice(labelEnd + 2, pos).trim();

  if (title.length === 0) {
    return -1;
  }

  if (!env.abbreviations) {
    env.abbreviations = {};
  } // prepend ':' to avoid conflict with Object.prototype members


  if (typeof env.abbreviations[':' + label] === 'undefined') {
    env.abbreviations[':' + label] = title;
  }

  return pos;
}

function abbr(state) {
  var tokens = state.tokens,
      i,
      l,
      content,
      pos;

  if (state.inlineMode) {
    return;
  } // Parse inlines


  for (i = 1, l = tokens.length - 1; i < l; i++) {
    if (tokens[i - 1].type === 'paragraph_open' && tokens[i].type === 'inline' && tokens[i + 1].type === 'paragraph_close') {
      content = tokens[i].content;

      while (content.length) {
        pos = parseAbbr(content, state.inline, state.options, state.env);

        if (pos < 0) {
          break;
        }

        content = content.slice(pos).trim();
      }

      tokens[i].content = content;

      if (!content.length) {
        tokens[i - 1].tight = true;
        tokens[i + 1].tight = true;
      }
    }
  }
}

function normalizeLink(url) {
  var normalized = replaceEntities(url); // We shouldn't care about the result of malformed URIs,
  // and should not throw an exception.

  try {
    normalized = decodeURI(normalized);
  } catch (err) {}

  return encodeURI(normalized);
}
/**
 * Parse link destination
 *
 *   - on success it returns a string and updates state.pos;
 *   - on failure it returns null
 *
 * @param  {Object} state
 * @param  {Number} pos
 * @api private
 */


function parseLinkDestination(state, pos) {
  var code,
      level,
      link,
      start = pos,
      max = state.posMax;

  if (state.src.charCodeAt(pos) === 0x3C
  /* < */
  ) {
    pos++;

    while (pos < max) {
      code = state.src.charCodeAt(pos);

      if (code === 0x0A
      /* \n */
      ) {
        return false;
      }

      if (code === 0x3E
      /* > */
      ) {
        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));

        if (!state.parser.validateLink(link)) {
          return false;
        }

        state.pos = pos + 1;
        state.linkContent = link;
        return true;
      }

      if (code === 0x5C
      /* \ */
      && pos + 1 < max) {
        pos += 2;
        continue;
      }

      pos++;
    } // no closing '>'


    return false;
  } // this should be ... } else { ... branch


  level = 0;

  while (pos < max) {
    code = state.src.charCodeAt(pos);

    if (code === 0x20) {
      break;
    } // ascii control chars


    if (code < 0x20 || code === 0x7F) {
      break;
    }

    if (code === 0x5C
    /* \ */
    && pos + 1 < max) {
      pos += 2;
      continue;
    }

    if (code === 0x28
    /* ( */
    ) {
      level++;

      if (level > 1) {
        break;
      }
    }

    if (code === 0x29
    /* ) */
    ) {
      level--;

      if (level < 0) {
        break;
      }
    }

    pos++;
  }

  if (start === pos) {
    return false;
  }

  link = unescapeMd(state.src.slice(start, pos));

  if (!state.parser.validateLink(link)) {
    return false;
  }

  state.linkContent = link;
  state.pos = pos;
  return true;
}
/**
 * Parse link title
 *
 *   - on success it returns a string and updates state.pos;
 *   - on failure it returns null
 *
 * @param  {Object} state
 * @param  {Number} pos
 * @api private
 */


function parseLinkTitle(state, pos) {
  var code,
      start = pos,
      max = state.posMax,
      marker = state.src.charCodeAt(pos);

  if (marker !== 0x22
  /* " */
  && marker !== 0x27
  /* ' */
  && marker !== 0x28
  /* ( */
  ) {
    return false;
  }

  pos++; // if opening marker is "(", switch it to closing marker ")"

  if (marker === 0x28) {
    marker = 0x29;
  }

  while (pos < max) {
    code = state.src.charCodeAt(pos);

    if (code === marker) {
      state.pos = pos + 1;
      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));
      return true;
    }

    if (code === 0x5C
    /* \ */
    && pos + 1 < max) {
      pos += 2;
      continue;
    }

    pos++;
  }

  return false;
}

function normalizeReference(str) {
  // use .toUpperCase() instead of .toLowerCase()
  // here to avoid a conflict with Object.prototype
  // members (most notably, `__proto__`)
  return str.trim().replace(/\s+/g, ' ').toUpperCase();
}

function parseReference(str, parser, options, env) {
  var state, labelEnd, pos, max, code, start, href, title, label;

  if (str.charCodeAt(0) !== 0x5B
  /* [ */
  ) {
    return -1;
  }

  if (str.indexOf(']:') === -1) {
    return -1;
  }

  state = new StateInline(str, parser, options, env, []);
  labelEnd = parseLinkLabel(state, 0);

  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A
  /* : */
  ) {
    return -1;
  }

  max = state.posMax; // [label]:   destination   'title'
  //         ^^^ skip optional whitespace here

  for (pos = labelEnd + 2; pos < max; pos++) {
    code = state.src.charCodeAt(pos);

    if (code !== 0x20 && code !== 0x0A) {
      break;
    }
  } // [label]:   destination   'title'
  //            ^^^^^^^^^^^ parse this


  if (!parseLinkDestination(state, pos)) {
    return -1;
  }

  href = state.linkContent;
  pos = state.pos; // [label]:   destination   'title'
  //                       ^^^ skipping those spaces

  start = pos;

  for (pos = pos + 1; pos < max; pos++) {
    code = state.src.charCodeAt(pos);

    if (code !== 0x20 && code !== 0x0A) {
      break;
    }
  } // [label]:   destination   'title'
  //                          ^^^^^^^ parse this


  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {
    title = state.linkContent;
    pos = state.pos;
  } else {
    title = '';
    pos = start;
  } // ensure that the end of the line is empty


  while (pos < max && state.src.charCodeAt(pos) === 0x20
  /* space */
  ) {
    pos++;
  }

  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) {
    return -1;
  }

  label = normalizeReference(str.slice(1, labelEnd));

  if (typeof env.references[label] === 'undefined') {
    env.references[label] = {
      title: title,
      href: href
    };
  }

  return pos;
}

function references(state) {
  var tokens = state.tokens,
      i,
      l,
      content,
      pos;
  state.env.references = state.env.references || {};

  if (state.inlineMode) {
    return;
  } // Scan definitions in paragraph inlines


  for (i = 1, l = tokens.length - 1; i < l; i++) {
    if (tokens[i].type === 'inline' && tokens[i - 1].type === 'paragraph_open' && tokens[i + 1].type === 'paragraph_close') {
      content = tokens[i].content;

      while (content.length) {
        pos = parseReference(content, state.inline, state.options, state.env);

        if (pos < 0) {
          break;
        }

        content = content.slice(pos).trim();
      }

      tokens[i].content = content;

      if (!content.length) {
        tokens[i - 1].tight = true;
        tokens[i + 1].tight = true;
      }
    }
  }
}

function inline(state) {
  var tokens = state.tokens,
      tok,
      i,
      l; // Parse inlines

  for (i = 0, l = tokens.length; i < l; i++) {
    tok = tokens[i];

    if (tok.type === 'inline') {
      state.inline.parse(tok.content, state.options, state.env, tok.children);
    }
  }
}

function footnote_block(state) {
  var i,
      l,
      j,
      t,
      lastParagraph,
      list,
      tokens,
      current,
      currentLabel,
      level = 0,
      insideRef = false,
      refTokens = {};

  if (!state.env.footnotes) {
    return;
  }

  state.tokens = state.tokens.filter(function (tok) {
    if (tok.type === 'footnote_reference_open') {
      insideRef = true;
      current = [];
      currentLabel = tok.label;
      return false;
    }

    if (tok.type === 'footnote_reference_close') {
      insideRef = false; // prepend ':' to avoid conflict with Object.prototype members

      refTokens[':' + currentLabel] = current;
      return false;
    }

    if (insideRef) {
      current.push(tok);
    }

    return !insideRef;
  });

  if (!state.env.footnotes.list) {
    return;
  }

  list = state.env.footnotes.list;
  state.tokens.push({
    type: 'footnote_block_open',
    level: level++
  });

  for (i = 0, l = list.length; i < l; i++) {
    state.tokens.push({
      type: 'footnote_open',
      id: i,
      level: level++
    });

    if (list[i].tokens) {
      tokens = [];
      tokens.push({
        type: 'paragraph_open',
        tight: false,
        level: level++
      });
      tokens.push({
        type: 'inline',
        content: '',
        level: level,
        children: list[i].tokens
      });
      tokens.push({
        type: 'paragraph_close',
        tight: false,
        level: --level
      });
    } else if (list[i].label) {
      tokens = refTokens[':' + list[i].label];
    }

    state.tokens = state.tokens.concat(tokens);

    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {
      lastParagraph = state.tokens.pop();
    } else {
      lastParagraph = null;
    }

    t = list[i].count > 0 ? list[i].count : 1;

    for (j = 0; j < t; j++) {
      state.tokens.push({
        type: 'footnote_anchor',
        id: i,
        subId: j,
        level: level
      });
    }

    if (lastParagraph) {
      state.tokens.push(lastParagraph);
    }

    state.tokens.push({
      type: 'footnote_close',
      level: --level
    });
  }

  state.tokens.push({
    type: 'footnote_block_close',
    level: --level
  });
} // Enclose abbreviations in <abbr> tags
//


var PUNCT_CHARS = ' \n()[]\'".,!?-'; // from Google closure library
// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021

function regEscape(s) {
  return s.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1');
}

function abbr2(state) {
  var i,
      j,
      l,
      tokens,
      token,
      text,
      nodes,
      pos,
      level,
      reg,
      m,
      regText,
      blockTokens = state.tokens;

  if (!state.env.abbreviations) {
    return;
  }

  if (!state.env.abbrRegExp) {
    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {
      return x.substr(1);
    }).sort(function (a, b) {
      return b.length - a.length;
    }).map(regEscape).join('|') + ')' + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';
    state.env.abbrRegExp = new RegExp(regText, 'g');
  }

  reg = state.env.abbrRegExp;

  for (j = 0, l = blockTokens.length; j < l; j++) {
    if (blockTokens[j].type !== 'inline') {
      continue;
    }

    tokens = blockTokens[j].children; // We scan from the end, to keep position when new tags added.

    for (i = tokens.length - 1; i >= 0; i--) {
      token = tokens[i];

      if (token.type !== 'text') {
        continue;
      }

      pos = 0;
      text = token.content;
      reg.lastIndex = 0;
      level = token.level;
      nodes = [];

      while (m = reg.exec(text)) {
        if (reg.lastIndex > pos) {
          nodes.push({
            type: 'text',
            content: text.slice(pos, m.index + m[1].length),
            level: level
          });
        }

        nodes.push({
          type: 'abbr_open',
          title: state.env.abbreviations[':' + m[2]],
          level: level++
        });
        nodes.push({
          type: 'text',
          content: m[2],
          level: level
        });
        nodes.push({
          type: 'abbr_close',
          level: --level
        });
        pos = reg.lastIndex - m[3].length;
      }

      if (!nodes.length) {
        continue;
      }

      if (pos < text.length) {
        nodes.push({
          type: 'text',
          content: text.slice(pos),
          level: level
        });
      } // replace current node


      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));
    }
  }
} // Simple typographical replacements
//
// TODO:
// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾
// - miltiplication 2 x 4 -> 2 × 4


var RARE_RE = /\+-|\.\.|\?\?\?\?|!!!!|,,|--/;
var SCOPED_ABBR_RE = /\((c|tm|r|p)\)/ig;
var SCOPED_ABBR = {
  'c': '©',
  'r': '®',
  'p': '§',
  'tm': '™'
};

function replaceScopedAbbr(str) {
  if (str.indexOf('(') < 0) {
    return str;
  }

  return str.replace(SCOPED_ABBR_RE, function (match, name) {
    return SCOPED_ABBR[name.toLowerCase()];
  });
}

function index_browser_replace(state) {
  var i, token, text, inlineTokens, blkIdx;

  if (!state.options.typographer) {
    return;
  }

  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
    if (state.tokens[blkIdx].type !== 'inline') {
      continue;
    }

    inlineTokens = state.tokens[blkIdx].children;

    for (i = inlineTokens.length - 1; i >= 0; i--) {
      token = inlineTokens[i];

      if (token.type === 'text') {
        text = token.content;
        text = replaceScopedAbbr(text);

        if (RARE_RE.test(text)) {
          text = text.replace(/\+-/g, '±') // .., ..., ....... -> …
          // but ?..... & !..... -> ?.. & !..
          .replace(/\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash
          .replace(/(^|[^-])---([^-]|$)/mg, "$1\u2014$2") // en-dash
          .replace(/(^|\s)--(\s|$)/mg, "$1\u2013$2").replace(/(^|[^-\s])--([^-\s]|$)/mg, "$1\u2013$2");
        }

        token.content = text;
      }
    }
  }
} // Convert straight quotation marks to typographic ones
//


var QUOTE_TEST_RE = /['"]/;
var QUOTE_RE = /['"]/g;
var PUNCT_RE = /[-\s()\[\]]/;
var APOSTROPHE = '’'; // This function returns true if the character at `pos`
// could be inside a word.

function isLetter(str, pos) {
  if (pos < 0 || pos >= str.length) {
    return false;
  }

  return !PUNCT_RE.test(str[pos]);
}

function replaceAt(str, index, ch) {
  return str.substr(0, index) + ch + str.substr(index + 1);
}

function smartquotes(state) {
  /*eslint max-depth:0*/
  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item, canOpen, canClose, j, isSingle, blkIdx, tokens, stack;

  if (!state.options.typographer) {
    return;
  }

  stack = [];

  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {
    if (state.tokens[blkIdx].type !== 'inline') {
      continue;
    }

    tokens = state.tokens[blkIdx].children;
    stack.length = 0;

    for (i = 0; i < tokens.length; i++) {
      token = tokens[i];

      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) {
        continue;
      }

      thisLevel = tokens[i].level;

      for (j = stack.length - 1; j >= 0; j--) {
        if (stack[j].level <= thisLevel) {
          break;
        }
      }

      stack.length = j + 1;
      text = token.content;
      pos = 0;
      max = text.length;
      /*eslint no-labels:0,block-scoped-var:0*/

      OUTER: while (pos < max) {
        QUOTE_RE.lastIndex = pos;
        t = QUOTE_RE.exec(text);

        if (!t) {
          break;
        }

        lastSpace = !isLetter(text, t.index - 1);
        pos = t.index + 1;
        isSingle = t[0] === "'";
        nextSpace = !isLetter(text, pos);

        if (!nextSpace && !lastSpace) {
          // middle of word
          if (isSingle) {
            token.content = replaceAt(token.content, t.index, APOSTROPHE);
          }

          continue;
        }

        canOpen = !nextSpace;
        canClose = !lastSpace;

        if (canClose) {
          // this could be a closing quote, rewind the stack to get a match
          for (j = stack.length - 1; j >= 0; j--) {
            item = stack[j];

            if (stack[j].level < thisLevel) {
              break;
            }

            if (item.single === isSingle && stack[j].level === thisLevel) {
              item = stack[j];

              if (isSingle) {
                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);
                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);
              } else {
                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);
                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);
              }

              stack.length = j;
              continue OUTER;
            }
          }
        }

        if (canOpen) {
          stack.push({
            token: i,
            pos: t.index,
            single: isSingle,
            level: thisLevel
          });
        } else if (canClose && isSingle) {
          token.content = replaceAt(token.content, t.index, APOSTROPHE);
        }
      }
    }
  }
}
/**
 * Core parser `rules`
 */


var _rules = [['block', index_browser_block], ['abbr', abbr], ['references', references], ['inline', inline], ['footnote_tail', footnote_block], ['abbr2', abbr2], ['replacements', index_browser_replace], ['smartquotes', smartquotes]];
/**
 * Class for top level (`core`) parser rules
 *
 * @api private
 */

function Core() {
  this.options = {};
  this.ruler = new Ruler();

  for (var i = 0; i < _rules.length; i++) {
    this.ruler.push(_rules[i][0], _rules[i][1]);
  }
}
/**
 * Process rules with the given `state`
 *
 * @param  {Object} `state`
 * @api private
 */


Core.prototype.process = function (state) {
  var i, l, rules;
  rules = this.ruler.getRules('');

  for (i = 0, l = rules.length; i < l; i++) {
    rules[i](state);
  }
}; // Parser state class


function StateBlock(src, parser, options, env, tokens) {
  var ch, s, start, pos, len, indent, indent_found;
  this.src = src; // Shortcuts to simplify nested calls

  this.parser = parser;
  this.options = options;
  this.env = env; //
  // Internal state vartiables
  //

  this.tokens = tokens;
  this.bMarks = []; // line begin offsets for fast jumps

  this.eMarks = []; // line end offsets for fast jumps

  this.tShift = []; // indent for each line
  // block parser variables

  this.blkIndent = 0; // required block content indent
  // (for example, if we are in list)

  this.line = 0; // line index in src

  this.lineMax = 0; // lines count

  this.tight = false; // loose/tight mode for lists

  this.parentType = 'root'; // if `list`, block parser stops on two newlines

  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)

  this.level = 0; // renderer

  this.result = ''; // Create caches
  // Generate markers.

  s = this.src;
  indent = 0;
  indent_found = false;

  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {
    ch = s.charCodeAt(pos);

    if (!indent_found) {
      if (ch === 0x20
      /* space */
      ) {
        indent++;
        continue;
      } else {
        indent_found = true;
      }
    }

    if (ch === 0x0A || pos === len - 1) {
      if (ch !== 0x0A) {
        pos++;
      }

      this.bMarks.push(start);
      this.eMarks.push(pos);
      this.tShift.push(indent);
      indent_found = false;
      indent = 0;
      start = pos + 1;
    }
  } // Push fake entry to simplify cache bounds checks


  this.bMarks.push(s.length);
  this.eMarks.push(s.length);
  this.tShift.push(0);
  this.lineMax = this.bMarks.length - 1; // don't count last fake line
}

StateBlock.prototype.isEmpty = function isEmpty(line) {
  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];
};

StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {
  for (var max = this.lineMax; from < max; from++) {
    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {
      break;
    }
  }

  return from;
}; // Skip spaces from given position.


StateBlock.prototype.skipSpaces = function skipSpaces(pos) {
  for (var max = this.src.length; pos < max; pos++) {
    if (this.src.charCodeAt(pos) !== 0x20
    /* space */
    ) {
      break;
    }
  }

  return pos;
}; // Skip char codes from given position


StateBlock.prototype.skipChars = function skipChars(pos, code) {
  for (var max = this.src.length; pos < max; pos++) {
    if (this.src.charCodeAt(pos) !== code) {
      break;
    }
  }

  return pos;
}; // Skip char codes reverse from given position - 1


StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {
  if (pos <= min) {
    return pos;
  }

  while (pos > min) {
    if (code !== this.src.charCodeAt(--pos)) {
      return pos + 1;
    }
  }

  return pos;
}; // cut lines range from source.


StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {
  var i,
      first,
      last,
      queue,
      shift,
      line = begin;

  if (begin >= end) {
    return '';
  } // Opt: don't use push queue for single line;


  if (line + 1 === end) {
    first = this.bMarks[line] + Math.min(this.tShift[line], indent);
    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];
    return this.src.slice(first, last);
  }

  queue = new Array(end - begin);

  for (i = 0; line < end; line++, i++) {
    shift = this.tShift[line];

    if (shift > indent) {
      shift = indent;
    }

    if (shift < 0) {
      shift = 0;
    }

    first = this.bMarks[line] + shift;

    if (line + 1 < end || keepLastLF) {
      // No need for bounds check because we have fake entry on tail.
      last = this.eMarks[line] + 1;
    } else {
      last = this.eMarks[line];
    }

    queue[i] = this.src.slice(first, last);
  }

  return queue.join('');
}; // Code block (4 spaces padded)


function code(state, startLine, endLine
/*, silent*/
) {
  var nextLine, last;

  if (state.tShift[startLine] - state.blkIndent < 4) {
    return false;
  }

  last = nextLine = startLine + 1;

  while (nextLine < endLine) {
    if (state.isEmpty(nextLine)) {
      nextLine++;
      continue;
    }

    if (state.tShift[nextLine] - state.blkIndent >= 4) {
      nextLine++;
      last = nextLine;
      continue;
    }

    break;
  }

  state.line = nextLine;
  state.tokens.push({
    type: 'code',
    content: state.getLines(startLine, last, 4 + state.blkIndent, true),
    block: true,
    lines: [startLine, state.line],
    level: state.level
  });
  return true;
} // fences (``` lang, ~~~ lang)


function fences(state, startLine, endLine, silent) {
  var marker,
      len,
      params,
      nextLine,
      mem,
      haveEndMarker = false,
      pos = state.bMarks[startLine] + state.tShift[startLine],
      max = state.eMarks[startLine];

  if (pos + 3 > max) {
    return false;
  }

  marker = state.src.charCodeAt(pos);

  if (marker !== 0x7E
  /* ~ */
  && marker !== 0x60
  /* ` */
  ) {
    return false;
  } // scan marker length


  mem = pos;
  pos = state.skipChars(pos, marker);
  len = pos - mem;

  if (len < 3) {
    return false;
  }

  params = state.src.slice(pos, max).trim();

  if (params.indexOf('`') >= 0) {
    return false;
  } // Since start is found, we can report success here in validation mode


  if (silent) {
    return true;
  } // search end of block


  nextLine = startLine;

  for (;;) {
    nextLine++;

    if (nextLine >= endLine) {
      // unclosed block should be autoclosed by end of document.
      // also block seems to be autoclosed by end of parent
      break;
    }

    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];
    max = state.eMarks[nextLine];

    if (pos < max && state.tShift[nextLine] < state.blkIndent) {
      // non-empty line with negative indent should stop the list:
      // - ```
      //  test
      break;
    }

    if (state.src.charCodeAt(pos) !== marker) {
      continue;
    }

    if (state.tShift[nextLine] - state.blkIndent >= 4) {
      // closing fence should be indented less than 4 spaces
      continue;
    }

    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one

    if (pos - mem < len) {
      continue;
    } // make sure tail has spaces only


    pos = state.skipSpaces(pos);

    if (pos < max) {
      continue;
    }

    haveEndMarker = true; // found!

    break;
  } // If a fence has heading spaces, they should be removed from its inner block


  len = state.tShift[startLine];
  state.line = nextLine + (haveEndMarker ? 1 : 0);
  state.tokens.push({
    type: 'fence',
    params: params,
    content: state.getLines(startLine + 1, nextLine, len, true),
    lines: [startLine, state.line],
    level: state.level
  });
  return true;
} // Block quotes


function blockquote(state, startLine, endLine, silent) {
  var nextLine,
      lastLineEmpty,
      oldTShift,
      oldBMarks,
      oldIndent,
      oldParentType,
      lines,
      terminatorRules,
      i,
      l,
      terminate,
      pos = state.bMarks[startLine] + state.tShift[startLine],
      max = state.eMarks[startLine];

  if (pos > max) {
    return false;
  } // check the block quote marker


  if (state.src.charCodeAt(pos++) !== 0x3E
  /* > */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  } // we know that it's going to be a valid blockquote,
  // so no point trying to find the end of it in silent mode


  if (silent) {
    return true;
  } // skip one optional space after '>'


  if (state.src.charCodeAt(pos) === 0x20) {
    pos++;
  }

  oldIndent = state.blkIndent;
  state.blkIndent = 0;
  oldBMarks = [state.bMarks[startLine]];
  state.bMarks[startLine] = pos; // check if we have an empty blockquote

  pos = pos < max ? state.skipSpaces(pos) : pos;
  lastLineEmpty = pos >= max;
  oldTShift = [state.tShift[startLine]];
  state.tShift[startLine] = pos - state.bMarks[startLine];
  terminatorRules = state.parser.ruler.getRules('blockquote'); // Search the end of the block
  //
  // Block ends with either:
  //  1. an empty line outside:
  //     ```
  //     > test
  //
  //     ```
  //  2. an empty line inside:
  //     ```
  //     >
  //     test
  //     ```
  //  3. another tag
  //     ```
  //     > test
  //      - - -
  //     ```

  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {
    pos = state.bMarks[nextLine] + state.tShift[nextLine];
    max = state.eMarks[nextLine];

    if (pos >= max) {
      // Case 1: line is not inside the blockquote, and this line is empty.
      break;
    }

    if (state.src.charCodeAt(pos++) === 0x3E
    /* > */
    ) {
      // This line is inside the blockquote.
      // skip one optional space after '>'
      if (state.src.charCodeAt(pos) === 0x20) {
        pos++;
      }

      oldBMarks.push(state.bMarks[nextLine]);
      state.bMarks[nextLine] = pos;
      pos = pos < max ? state.skipSpaces(pos) : pos;
      lastLineEmpty = pos >= max;
      oldTShift.push(state.tShift[nextLine]);
      state.tShift[nextLine] = pos - state.bMarks[nextLine];
      continue;
    } // Case 2: line is not inside the blockquote, and the last line was empty.


    if (lastLineEmpty) {
      break;
    } // Case 3: another tag found.


    terminate = false;

    for (i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }

    if (terminate) {
      break;
    }

    oldBMarks.push(state.bMarks[nextLine]);
    oldTShift.push(state.tShift[nextLine]); // A negative number means that this is a paragraph continuation;
    //
    // Any negative number will do the job here, but it's better for it
    // to be large enough to make any bugs obvious.

    state.tShift[nextLine] = -1337;
  }

  oldParentType = state.parentType;
  state.parentType = 'blockquote';
  state.tokens.push({
    type: 'blockquote_open',
    lines: lines = [startLine, 0],
    level: state.level++
  });
  state.parser.tokenize(state, startLine, nextLine);
  state.tokens.push({
    type: 'blockquote_close',
    level: --state.level
  });
  state.parentType = oldParentType;
  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser
  // has already been here, but just to make sure we can do that.

  for (i = 0; i < oldTShift.length; i++) {
    state.bMarks[i + startLine] = oldBMarks[i];
    state.tShift[i + startLine] = oldTShift[i];
  }

  state.blkIndent = oldIndent;
  return true;
} // Horizontal rule


function hr(state, startLine, endLine, silent) {
  var marker,
      cnt,
      ch,
      pos = state.bMarks[startLine],
      max = state.eMarks[startLine];
  pos += state.tShift[startLine];

  if (pos > max) {
    return false;
  }

  marker = state.src.charCodeAt(pos++); // Check hr marker

  if (marker !== 0x2A
  /* * */
  && marker !== 0x2D
  /* - */
  && marker !== 0x5F
  /* _ */
  ) {
    return false;
  } // markers can be mixed with spaces, but there should be at least 3 one


  cnt = 1;

  while (pos < max) {
    ch = state.src.charCodeAt(pos++);

    if (ch !== marker && ch !== 0x20
    /* space */
    ) {
      return false;
    }

    if (ch === marker) {
      cnt++;
    }
  }

  if (cnt < 3) {
    return false;
  }

  if (silent) {
    return true;
  }

  state.line = startLine + 1;
  state.tokens.push({
    type: 'hr',
    lines: [startLine, state.line],
    level: state.level
  });
  return true;
} // Lists
// Search `[-+*][\n ]`, returns next pos arter marker on success
// or -1 on fail.


function skipBulletListMarker(state, startLine) {
  var marker, pos, max;
  pos = state.bMarks[startLine] + state.tShift[startLine];
  max = state.eMarks[startLine];

  if (pos >= max) {
    return -1;
  }

  marker = state.src.charCodeAt(pos++); // Check bullet

  if (marker !== 0x2A
  /* * */
  && marker !== 0x2D
  /* - */
  && marker !== 0x2B
  /* + */
  ) {
    return -1;
  }

  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {
    // " 1.test " - is not a list item
    return -1;
  }

  return pos;
} // Search `\d+[.)][\n ]`, returns next pos arter marker on success
// or -1 on fail.


function skipOrderedListMarker(state, startLine) {
  var ch,
      pos = state.bMarks[startLine] + state.tShift[startLine],
      max = state.eMarks[startLine];

  if (pos + 1 >= max) {
    return -1;
  }

  ch = state.src.charCodeAt(pos++);

  if (ch < 0x30
  /* 0 */
  || ch > 0x39
  /* 9 */
  ) {
    return -1;
  }

  for (;;) {
    // EOL -> fail
    if (pos >= max) {
      return -1;
    }

    ch = state.src.charCodeAt(pos++);

    if (ch >= 0x30
    /* 0 */
    && ch <= 0x39
    /* 9 */
    ) {
      continue;
    } // found valid marker


    if (ch === 0x29
    /* ) */
    || ch === 0x2e
    /* . */
    ) {
      break;
    }

    return -1;
  }

  if (pos < max && state.src.charCodeAt(pos) !== 0x20
  /* space */
  ) {
    // " 1.test " - is not a list item
    return -1;
  }

  return pos;
}

function markTightParagraphs(state, idx) {
  var i,
      l,
      level = state.level + 2;

  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
      state.tokens[i + 2].tight = true;
      state.tokens[i].tight = true;
      i += 2;
    }
  }
}

function list(state, startLine, endLine, silent) {
  var nextLine,
      indent,
      oldTShift,
      oldIndent,
      oldTight,
      oldParentType,
      start,
      posAfterMarker,
      max,
      indentAfterMarker,
      markerValue,
      markerCharCode,
      isOrdered,
      contentStart,
      listTokIdx,
      prevEmptyEnd,
      listLines,
      itemLines,
      tight = true,
      terminatorRules,
      i,
      l,
      terminate; // Detect list type and position after marker

  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {
    isOrdered = true;
  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {
    isOrdered = false;
  } else {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  } // We should terminate list on style change. Remember first one to compare.


  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately

  if (silent) {
    return true;
  } // Start list


  listTokIdx = state.tokens.length;

  if (isOrdered) {
    start = state.bMarks[startLine] + state.tShift[startLine];
    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));
    state.tokens.push({
      type: 'ordered_list_open',
      order: markerValue,
      lines: listLines = [startLine, 0],
      level: state.level++
    });
  } else {
    state.tokens.push({
      type: 'bullet_list_open',
      lines: listLines = [startLine, 0],
      level: state.level++
    });
  } //
  // Iterate list items
  //


  nextLine = startLine;
  prevEmptyEnd = false;
  terminatorRules = state.parser.ruler.getRules('list');

  while (nextLine < endLine) {
    contentStart = state.skipSpaces(posAfterMarker);
    max = state.eMarks[nextLine];

    if (contentStart >= max) {
      // trimming space in "-    \n  3" case, indent is 1 here
      indentAfterMarker = 1;
    } else {
      indentAfterMarker = contentStart - posAfterMarker;
    } // If we have more than 4 spaces, the indent is 1
    // (the rest is just indented code block)


    if (indentAfterMarker > 4) {
      indentAfterMarker = 1;
    } // If indent is less than 1, assume that it's one, example:
    //  "-\n  test"


    if (indentAfterMarker < 1) {
      indentAfterMarker = 1;
    } // "  -  test"
    //  ^^^^^ - calculating total length of this thing


    indent = posAfterMarker - state.bMarks[nextLine] + indentAfterMarker; // Run subparser & write tokens

    state.tokens.push({
      type: 'list_item_open',
      lines: itemLines = [startLine, 0],
      level: state.level++
    });
    oldIndent = state.blkIndent;
    oldTight = state.tight;
    oldTShift = state.tShift[startLine];
    oldParentType = state.parentType;
    state.tShift[startLine] = contentStart - state.bMarks[startLine];
    state.blkIndent = indent;
    state.tight = true;
    state.parentType = 'list';
    state.parser.tokenize(state, startLine, endLine, true); // If any of list item is tight, mark list as tight

    if (!state.tight || prevEmptyEnd) {
      tight = false;
    } // Item become loose if finish with empty line,
    // but we should filter last element, because it means list finish


    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);
    state.blkIndent = oldIndent;
    state.tShift[startLine] = oldTShift;
    state.tight = oldTight;
    state.parentType = oldParentType;
    state.tokens.push({
      type: 'list_item_close',
      level: --state.level
    });
    nextLine = startLine = state.line;
    itemLines[1] = nextLine;
    contentStart = state.bMarks[startLine];

    if (nextLine >= endLine) {
      break;
    }

    if (state.isEmpty(nextLine)) {
      break;
    } //
    // Try to check if list is terminated or continued.
    //


    if (state.tShift[nextLine] < state.blkIndent) {
      break;
    } // fail if terminating block found


    terminate = false;

    for (i = 0, l = terminatorRules.length; i < l; i++) {
      if (terminatorRules[i](state, nextLine, endLine, true)) {
        terminate = true;
        break;
      }
    }

    if (terminate) {
      break;
    } // fail if list has another type


    if (isOrdered) {
      posAfterMarker = skipOrderedListMarker(state, nextLine);

      if (posAfterMarker < 0) {
        break;
      }
    } else {
      posAfterMarker = skipBulletListMarker(state, nextLine);

      if (posAfterMarker < 0) {
        break;
      }
    }

    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {
      break;
    }
  } // Finilize list


  state.tokens.push({
    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',
    level: --state.level
  });
  listLines[1] = nextLine;
  state.line = nextLine; // mark paragraphs tight if needed

  if (tight) {
    markTightParagraphs(state, listTokIdx);
  }

  return true;
} // Process footnote reference list


function footnote(state, startLine, endLine, silent) {
  var oldBMark,
      oldTShift,
      oldParentType,
      pos,
      label,
      start = state.bMarks[startLine] + state.tShift[startLine],
      max = state.eMarks[startLine]; // line should be at least 5 chars - "[^x]:"

  if (start + 4 > max) {
    return false;
  }

  if (state.src.charCodeAt(start) !== 0x5B
  /* [ */
  ) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x5E
  /* ^ */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  for (pos = start + 2; pos < max; pos++) {
    if (state.src.charCodeAt(pos) === 0x20) {
      return false;
    }

    if (state.src.charCodeAt(pos) === 0x5D
    /* ] */
    ) {
      break;
    }
  }

  if (pos === start + 2) {
    return false;
  } // no empty footnote labels


  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A
  /* : */
  ) {
    return false;
  }

  if (silent) {
    return true;
  }

  pos++;

  if (!state.env.footnotes) {
    state.env.footnotes = {};
  }

  if (!state.env.footnotes.refs) {
    state.env.footnotes.refs = {};
  }

  label = state.src.slice(start + 2, pos - 2);
  state.env.footnotes.refs[':' + label] = -1;
  state.tokens.push({
    type: 'footnote_reference_open',
    label: label,
    level: state.level++
  });
  oldBMark = state.bMarks[startLine];
  oldTShift = state.tShift[startLine];
  oldParentType = state.parentType;
  state.tShift[startLine] = state.skipSpaces(pos) - pos;
  state.bMarks[startLine] = pos;
  state.blkIndent += 4;
  state.parentType = 'footnote';

  if (state.tShift[startLine] < state.blkIndent) {
    state.tShift[startLine] += state.blkIndent;
    state.bMarks[startLine] -= state.blkIndent;
  }

  state.parser.tokenize(state, startLine, endLine, true);
  state.parentType = oldParentType;
  state.blkIndent -= 4;
  state.tShift[startLine] = oldTShift;
  state.bMarks[startLine] = oldBMark;
  state.tokens.push({
    type: 'footnote_reference_close',
    level: --state.level
  });
  return true;
} // heading (#, ##, ...)


function heading(state, startLine, endLine, silent) {
  var ch,
      level,
      tmp,
      pos = state.bMarks[startLine] + state.tShift[startLine],
      max = state.eMarks[startLine];

  if (pos >= max) {
    return false;
  }

  ch = state.src.charCodeAt(pos);

  if (ch !== 0x23
  /* # */
  || pos >= max) {
    return false;
  } // count heading level


  level = 1;
  ch = state.src.charCodeAt(++pos);

  while (ch === 0x23
  /* # */
  && pos < max && level <= 6) {
    level++;
    ch = state.src.charCodeAt(++pos);
  }

  if (level > 6 || pos < max && ch !== 0x20
  /* space */
  ) {
    return false;
  }

  if (silent) {
    return true;
  } // Let's cut tails like '    ###  ' from the end of string


  max = state.skipCharsBack(max, 0x20, pos); // space

  tmp = state.skipCharsBack(max, 0x23, pos); // #

  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20
  /* space */
  ) {
    max = tmp;
  }

  state.line = startLine + 1;
  state.tokens.push({
    type: 'heading_open',
    hLevel: level,
    lines: [startLine, state.line],
    level: state.level
  }); // only if header is not empty

  if (pos < max) {
    state.tokens.push({
      type: 'inline',
      content: state.src.slice(pos, max).trim(),
      level: state.level + 1,
      lines: [startLine, state.line],
      children: []
    });
  }

  state.tokens.push({
    type: 'heading_close',
    hLevel: level,
    level: state.level
  });
  return true;
} // lheading (---, ===)


function lheading(state, startLine, endLine
/*, silent*/
) {
  var marker,
      pos,
      max,
      next = startLine + 1;

  if (next >= endLine) {
    return false;
  }

  if (state.tShift[next] < state.blkIndent) {
    return false;
  } // Scan next line


  if (state.tShift[next] - state.blkIndent > 3) {
    return false;
  }

  pos = state.bMarks[next] + state.tShift[next];
  max = state.eMarks[next];

  if (pos >= max) {
    return false;
  }

  marker = state.src.charCodeAt(pos);

  if (marker !== 0x2D
  /* - */
  && marker !== 0x3D
  /* = */
  ) {
    return false;
  }

  pos = state.skipChars(pos, marker);
  pos = state.skipSpaces(pos);

  if (pos < max) {
    return false;
  }

  pos = state.bMarks[startLine] + state.tShift[startLine];
  state.line = next + 1;
  state.tokens.push({
    type: 'heading_open',
    hLevel: marker === 0x3D
    /* = */
    ? 1 : 2,
    lines: [startLine, state.line],
    level: state.level
  });
  state.tokens.push({
    type: 'inline',
    content: state.src.slice(pos, state.eMarks[startLine]).trim(),
    level: state.level + 1,
    lines: [startLine, state.line - 1],
    children: []
  });
  state.tokens.push({
    type: 'heading_close',
    hLevel: marker === 0x3D
    /* = */
    ? 1 : 2,
    level: state.level
  });
  return true;
} // List of valid html blocks names, accorting to commonmark spec
// http://jgm.github.io/CommonMark/spec.html#html-blocks


var html_blocks = {};
['article', 'aside', 'button', 'blockquote', 'body', 'canvas', 'caption', 'col', 'colgroup', 'dd', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'iframe', 'li', 'map', 'object', 'ol', 'output', 'p', 'pre', 'progress', 'script', 'section', 'style', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'tr', 'thead', 'ul', 'video'].forEach(function (name) {
  html_blocks[name] = true;
}); // HTML block

var HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\s\/>]/;
var HTML_TAG_CLOSE_RE = /^<\/([a-zA-Z]{1,15})[\s>]/;

function isLetter$1(ch) {
  /*eslint no-bitwise:0*/
  var lc = ch | 0x20; // to lower case

  return lc >= 0x61
  /* a */
  && lc <= 0x7a
  /* z */
  ;
}

function htmlblock(state, startLine, endLine, silent) {
  var ch,
      match,
      nextLine,
      pos = state.bMarks[startLine],
      max = state.eMarks[startLine],
      shift = state.tShift[startLine];
  pos += shift;

  if (!state.options.html) {
    return false;
  }

  if (shift > 3 || pos + 2 >= max) {
    return false;
  }

  if (state.src.charCodeAt(pos) !== 0x3C
  /* < */
  ) {
    return false;
  }

  ch = state.src.charCodeAt(pos + 1);

  if (ch === 0x21
  /* ! */
  || ch === 0x3F
  /* ? */
  ) {
    // Directive start / comment start / processing instruction start
    if (silent) {
      return true;
    }
  } else if (ch === 0x2F
  /* / */
  || isLetter$1(ch)) {
    // Probably start or end of tag
    if (ch === 0x2F
    /* \ */
    ) {
      // closing tag
      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);

      if (!match) {
        return false;
      }
    } else {
      // opening tag
      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);

      if (!match) {
        return false;
      }
    } // Make sure tag name is valid


    if (html_blocks[match[1].toLowerCase()] !== true) {
      return false;
    }

    if (silent) {
      return true;
    }
  } else {
    return false;
  } // If we are here - we detected HTML block.
  // Let's roll down till empty line (block end).


  nextLine = startLine + 1;

  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {
    nextLine++;
  }

  state.line = nextLine;
  state.tokens.push({
    type: 'htmlblock',
    level: state.level,
    lines: [startLine, state.line],
    content: state.getLines(startLine, nextLine, 0, true)
  });
  return true;
} // GFM table, non-standard


function getLine(state, line) {
  var pos = state.bMarks[line] + state.blkIndent,
      max = state.eMarks[line];
  return state.src.substr(pos, max - pos);
}

function table(state, startLine, endLine, silent) {
  var ch, lineText, pos, i, nextLine, rows, cell, aligns, t, tableLines, tbodyLines; // should have at least three lines

  if (startLine + 2 > endLine) {
    return false;
  }

  nextLine = startLine + 1;

  if (state.tShift[nextLine] < state.blkIndent) {
    return false;
  } // first character of the second line should be '|' or '-'


  pos = state.bMarks[nextLine] + state.tShift[nextLine];

  if (pos >= state.eMarks[nextLine]) {
    return false;
  }

  ch = state.src.charCodeAt(pos);

  if (ch !== 0x7C
  /* | */
  && ch !== 0x2D
  /* - */
  && ch !== 0x3A
  /* : */
  ) {
    return false;
  }

  lineText = getLine(state, startLine + 1);

  if (!/^[-:| ]+$/.test(lineText)) {
    return false;
  }

  rows = lineText.split('|');

  if (rows <= 2) {
    return false;
  }

  aligns = [];

  for (i = 0; i < rows.length; i++) {
    t = rows[i].trim();

    if (!t) {
      // allow empty columns before and after table, but not in between columns;
      // e.g. allow ` |---| `, disallow ` ---||--- `
      if (i === 0 || i === rows.length - 1) {
        continue;
      } else {
        return false;
      }
    }

    if (!/^:?-+:?$/.test(t)) {
      return false;
    }

    if (t.charCodeAt(t.length - 1) === 0x3A
    /* : */
    ) {
      aligns.push(t.charCodeAt(0) === 0x3A
      /* : */
      ? 'center' : 'right');
    } else if (t.charCodeAt(0) === 0x3A
    /* : */
    ) {
      aligns.push('left');
    } else {
      aligns.push('');
    }
  }

  lineText = getLine(state, startLine).trim();

  if (lineText.indexOf('|') === -1) {
    return false;
  }

  rows = lineText.replace(/^\||\|$/g, '').split('|');

  if (aligns.length !== rows.length) {
    return false;
  }

  if (silent) {
    return true;
  }

  state.tokens.push({
    type: 'table_open',
    lines: tableLines = [startLine, 0],
    level: state.level++
  });
  state.tokens.push({
    type: 'thead_open',
    lines: [startLine, startLine + 1],
    level: state.level++
  });
  state.tokens.push({
    type: 'tr_open',
    lines: [startLine, startLine + 1],
    level: state.level++
  });

  for (i = 0; i < rows.length; i++) {
    state.tokens.push({
      type: 'th_open',
      align: aligns[i],
      lines: [startLine, startLine + 1],
      level: state.level++
    });
    state.tokens.push({
      type: 'inline',
      content: rows[i].trim(),
      lines: [startLine, startLine + 1],
      level: state.level,
      children: []
    });
    state.tokens.push({
      type: 'th_close',
      level: --state.level
    });
  }

  state.tokens.push({
    type: 'tr_close',
    level: --state.level
  });
  state.tokens.push({
    type: 'thead_close',
    level: --state.level
  });
  state.tokens.push({
    type: 'tbody_open',
    lines: tbodyLines = [startLine + 2, 0],
    level: state.level++
  });

  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {
    if (state.tShift[nextLine] < state.blkIndent) {
      break;
    }

    lineText = getLine(state, nextLine).trim();

    if (lineText.indexOf('|') === -1) {
      break;
    }

    rows = lineText.replace(/^\||\|$/g, '').split('|');
    state.tokens.push({
      type: 'tr_open',
      level: state.level++
    });

    for (i = 0; i < rows.length; i++) {
      state.tokens.push({
        type: 'td_open',
        align: aligns[i],
        level: state.level++
      }); // 0x7c === '|'

      cell = rows[i].substring(rows[i].charCodeAt(0) === 0x7c ? 1 : 0, rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length).trim();
      state.tokens.push({
        type: 'inline',
        content: cell,
        level: state.level,
        children: []
      });
      state.tokens.push({
        type: 'td_close',
        level: --state.level
      });
    }

    state.tokens.push({
      type: 'tr_close',
      level: --state.level
    });
  }

  state.tokens.push({
    type: 'tbody_close',
    level: --state.level
  });
  state.tokens.push({
    type: 'table_close',
    level: --state.level
  });
  tableLines[1] = tbodyLines[1] = nextLine;
  state.line = nextLine;
  return true;
} // Definition lists
// Search `[:~][\n ]`, returns next pos after marker on success
// or -1 on fail.


function skipMarker(state, line) {
  var pos,
      marker,
      start = state.bMarks[line] + state.tShift[line],
      max = state.eMarks[line];

  if (start >= max) {
    return -1;
  } // Check bullet


  marker = state.src.charCodeAt(start++);

  if (marker !== 0x7E
  /* ~ */
  && marker !== 0x3A
  /* : */
  ) {
    return -1;
  }

  pos = state.skipSpaces(start); // require space after ":"

  if (start === pos) {
    return -1;
  } // no empty definitions, e.g. "  : "


  if (pos >= max) {
    return -1;
  }

  return pos;
}

function markTightParagraphs$1(state, idx) {
  var i,
      l,
      level = state.level + 2;

  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {
    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {
      state.tokens[i + 2].tight = true;
      state.tokens[i].tight = true;
      i += 2;
    }
  }
}

function deflist(state, startLine, endLine, silent) {
  var contentStart, ddLine, dtLine, itemLines, listLines, listTokIdx, nextLine, oldIndent, oldDDIndent, oldParentType, oldTShift, oldTight, prevEmptyEnd, tight;

  if (silent) {
    // quirk: validation mode validates a dd block only, not a whole deflist
    if (state.ddIndent < 0) {
      return false;
    }

    return skipMarker(state, startLine) >= 0;
  }

  nextLine = startLine + 1;

  if (state.isEmpty(nextLine)) {
    if (++nextLine > endLine) {
      return false;
    }
  }

  if (state.tShift[nextLine] < state.blkIndent) {
    return false;
  }

  contentStart = skipMarker(state, nextLine);

  if (contentStart < 0) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  } // Start list


  listTokIdx = state.tokens.length;
  state.tokens.push({
    type: 'dl_open',
    lines: listLines = [startLine, 0],
    level: state.level++
  }); //
  // Iterate list items
  //

  dtLine = startLine;
  ddLine = nextLine; // One definition list can contain multiple DTs,
  // and one DT can be followed by multiple DDs.
  //
  // Thus, there is two loops here, and label is
  // needed to break out of the second one
  //

  /*eslint no-labels:0,block-scoped-var:0*/

  OUTER: for (;;) {
    tight = true;
    prevEmptyEnd = false;
    state.tokens.push({
      type: 'dt_open',
      lines: [dtLine, dtLine],
      level: state.level++
    });
    state.tokens.push({
      type: 'inline',
      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),
      level: state.level + 1,
      lines: [dtLine, dtLine],
      children: []
    });
    state.tokens.push({
      type: 'dt_close',
      level: --state.level
    });

    for (;;) {
      state.tokens.push({
        type: 'dd_open',
        lines: itemLines = [nextLine, 0],
        level: state.level++
      });
      oldTight = state.tight;
      oldDDIndent = state.ddIndent;
      oldIndent = state.blkIndent;
      oldTShift = state.tShift[ddLine];
      oldParentType = state.parentType;
      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;
      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];
      state.tight = true;
      state.parentType = 'deflist';
      state.parser.tokenize(state, ddLine, endLine, true); // If any of list item is tight, mark list as tight

      if (!state.tight || prevEmptyEnd) {
        tight = false;
      } // Item become loose if finish with empty line,
      // but we should filter last element, because it means list finish


      prevEmptyEnd = state.line - ddLine > 1 && state.isEmpty(state.line - 1);
      state.tShift[ddLine] = oldTShift;
      state.tight = oldTight;
      state.parentType = oldParentType;
      state.blkIndent = oldIndent;
      state.ddIndent = oldDDIndent;
      state.tokens.push({
        type: 'dd_close',
        level: --state.level
      });
      itemLines[1] = nextLine = state.line;

      if (nextLine >= endLine) {
        break OUTER;
      }

      if (state.tShift[nextLine] < state.blkIndent) {
        break OUTER;
      }

      contentStart = skipMarker(state, nextLine);

      if (contentStart < 0) {
        break;
      }

      ddLine = nextLine; // go to the next loop iteration:
      // insert DD tag and repeat checking
    }

    if (nextLine >= endLine) {
      break;
    }

    dtLine = nextLine;

    if (state.isEmpty(dtLine)) {
      break;
    }

    if (state.tShift[dtLine] < state.blkIndent) {
      break;
    }

    ddLine = dtLine + 1;

    if (ddLine >= endLine) {
      break;
    }

    if (state.isEmpty(ddLine)) {
      ddLine++;
    }

    if (ddLine >= endLine) {
      break;
    }

    if (state.tShift[ddLine] < state.blkIndent) {
      break;
    }

    contentStart = skipMarker(state, ddLine);

    if (contentStart < 0) {
      break;
    } // go to the next loop iteration:
    // insert DT and DD tags and repeat checking

  } // Finilize list


  state.tokens.push({
    type: 'dl_close',
    level: --state.level
  });
  listLines[1] = nextLine;
  state.line = nextLine; // mark paragraphs tight if needed

  if (tight) {
    markTightParagraphs$1(state, listTokIdx);
  }

  return true;
} // Paragraph


function paragraph(state, startLine
/*, endLine*/
) {
  var endLine,
      content,
      terminate,
      i,
      l,
      nextLine = startLine + 1,
      terminatorRules;
  endLine = state.lineMax; // jump line-by-line until empty one or EOF

  if (nextLine < endLine && !state.isEmpty(nextLine)) {
    terminatorRules = state.parser.ruler.getRules('paragraph');

    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {
      // this would be a code block normally, but after paragraph
      // it's considered a lazy continuation regardless of what's there
      if (state.tShift[nextLine] - state.blkIndent > 3) {
        continue;
      } // Some tags can terminate paragraph without empty line.


      terminate = false;

      for (i = 0, l = terminatorRules.length; i < l; i++) {
        if (terminatorRules[i](state, nextLine, endLine, true)) {
          terminate = true;
          break;
        }
      }

      if (terminate) {
        break;
      }
    }
  }

  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();
  state.line = nextLine;

  if (content.length) {
    state.tokens.push({
      type: 'paragraph_open',
      tight: false,
      lines: [startLine, state.line],
      level: state.level
    });
    state.tokens.push({
      type: 'inline',
      content: content,
      level: state.level + 1,
      lines: [startLine, state.line],
      children: []
    });
    state.tokens.push({
      type: 'paragraph_close',
      tight: false,
      level: state.level
    });
  }

  return true;
}
/**
 * Parser rules
 */


var _rules$1 = [['code', code], ['fences', fences, ['paragraph', 'blockquote', 'list']], ['blockquote', blockquote, ['paragraph', 'blockquote', 'list']], ['hr', hr, ['paragraph', 'blockquote', 'list']], ['list', list, ['paragraph', 'blockquote']], ['footnote', footnote, ['paragraph']], ['heading', heading, ['paragraph', 'blockquote']], ['lheading', lheading], ['htmlblock', htmlblock, ['paragraph', 'blockquote']], ['table', table, ['paragraph']], ['deflist', deflist, ['paragraph']], ['paragraph', paragraph]];
/**
 * Block Parser class
 *
 * @api private
 */

function ParserBlock() {
  this.ruler = new Ruler();

  for (var i = 0; i < _rules$1.length; i++) {
    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {
      alt: (_rules$1[i][2] || []).slice()
    });
  }
}
/**
 * Generate tokens for the given input range.
 *
 * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc
 * @param  {Number} `startLine`
 * @param  {Number} `endLine`
 * @api private
 */


ParserBlock.prototype.tokenize = function (state, startLine, endLine) {
  var rules = this.ruler.getRules('');
  var len = rules.length;
  var line = startLine;
  var hasEmptyLines = false;
  var ok, i;

  while (line < endLine) {
    state.line = line = state.skipEmptyLines(line);

    if (line >= endLine) {
      break;
    } // Termination condition for nested calls.
    // Nested calls currently used for blockquotes & lists


    if (state.tShift[line] < state.blkIndent) {
      break;
    } // Try all possible rules.
    // On success, rule should:
    //
    // - update `state.line`
    // - update `state.tokens`
    // - return true


    for (i = 0; i < len; i++) {
      ok = rules[i](state, line, endLine, false);

      if (ok) {
        break;
      }
    } // set state.tight iff we had an empty line before current tag
    // i.e. latest empty line should not count


    state.tight = !hasEmptyLines; // paragraph might "eat" one newline after it in nested lists

    if (state.isEmpty(state.line - 1)) {
      hasEmptyLines = true;
    }

    line = state.line;

    if (line < endLine && state.isEmpty(line)) {
      hasEmptyLines = true;
      line++; // two empty lines should stop the parser in list mode

      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) {
        break;
      }

      state.line = line;
    }
  }
};

var TABS_SCAN_RE = /[\n\t]/g;
var NEWLINES_RE = /\r[\n\u0085]|[\u2424\u2028\u0085]/g;
var SPACES_RE = /\u00a0/g;
/**
 * Tokenize the given `str`.
 *
 * @param  {String} `str` Source string
 * @param  {Object} `options`
 * @param  {Object} `env`
 * @param  {Array} `outTokens`
 * @api private
 */

ParserBlock.prototype.parse = function (str, options, env, outTokens) {
  var state,
      lineStart = 0,
      lastTabPos = 0;

  if (!str) {
    return [];
  } // Normalize spaces


  str = str.replace(SPACES_RE, ' '); // Normalize newlines

  str = str.replace(NEWLINES_RE, '\n'); // Replace tabs with proper number of spaces (1..4)

  if (str.indexOf('\t') >= 0) {
    str = str.replace(TABS_SCAN_RE, function (match, offset) {
      var result;

      if (str.charCodeAt(offset) === 0x0A) {
        lineStart = offset + 1;
        lastTabPos = 0;
        return match;
      }

      result = '    '.slice((offset - lineStart - lastTabPos) % 4);
      lastTabPos = offset - lineStart + 1;
      return result;
    });
  }

  state = new StateBlock(str, this, options, env, outTokens);
  this.tokenize(state, state.line, state.lineMax);
}; // Skip text characters for text token, place those to pending buffer
// and increment current pos
// Rule to skip pure text
// '{}$%@~+=:' reserved for extentions


function isTerminatorChar(ch) {
  switch (ch) {
    case 0x0A
    /* \n */
    :
    case 0x5C
    /* \ */
    :
    case 0x60
    /* ` */
    :
    case 0x2A
    /* * */
    :
    case 0x5F
    /* _ */
    :
    case 0x5E
    /* ^ */
    :
    case 0x5B
    /* [ */
    :
    case 0x5D
    /* ] */
    :
    case 0x21
    /* ! */
    :
    case 0x26
    /* & */
    :
    case 0x3C
    /* < */
    :
    case 0x3E
    /* > */
    :
    case 0x7B
    /* { */
    :
    case 0x7D
    /* } */
    :
    case 0x24
    /* $ */
    :
    case 0x25
    /* % */
    :
    case 0x40
    /* @ */
    :
    case 0x7E
    /* ~ */
    :
    case 0x2B
    /* + */
    :
    case 0x3D
    /* = */
    :
    case 0x3A
    /* : */
    :
      return true;

    default:
      return false;
  }
}

function index_browser_text(state, silent) {
  var pos = state.pos;

  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {
    pos++;
  }

  if (pos === state.pos) {
    return false;
  }

  if (!silent) {
    state.pending += state.src.slice(state.pos, pos);
  }

  state.pos = pos;
  return true;
} // Proceess '\n'


function newline(state, silent) {
  var pmax,
      max,
      pos = state.pos;

  if (state.src.charCodeAt(pos) !== 0x0A
  /* \n */
  ) {
    return false;
  }

  pmax = state.pending.length - 1;
  max = state.posMax; // '  \n' -> hardbreak
  // Lookup in pending chars is bad practice! Don't copy to other rules!
  // Pending string is stored in concat mode, indexed lookups will cause
  // convertion to flat mode.

  if (!silent) {
    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {
      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {
        // Strip out all trailing spaces on this line.
        for (var i = pmax - 2; i >= 0; i--) {
          if (state.pending.charCodeAt(i) !== 0x20) {
            state.pending = state.pending.substring(0, i + 1);
            break;
          }
        }

        state.push({
          type: 'hardbreak',
          level: state.level
        });
      } else {
        state.pending = state.pending.slice(0, -1);
        state.push({
          type: 'softbreak',
          level: state.level
        });
      }
    } else {
      state.push({
        type: 'softbreak',
        level: state.level
      });
    }
  }

  pos++; // skip heading spaces for next line

  while (pos < max && state.src.charCodeAt(pos) === 0x20) {
    pos++;
  }

  state.pos = pos;
  return true;
} // Proceess escaped chars and hardbreaks


var ESCAPED = [];

for (var index_browser_i = 0; index_browser_i < 256; index_browser_i++) {
  ESCAPED.push(0);
}

'\\!"#$%&\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {
  ESCAPED[ch.charCodeAt(0)] = 1;
});

function index_browser_escape(state, silent) {
  var ch,
      pos = state.pos,
      max = state.posMax;

  if (state.src.charCodeAt(pos) !== 0x5C
  /* \ */
  ) {
    return false;
  }

  pos++;

  if (pos < max) {
    ch = state.src.charCodeAt(pos);

    if (ch < 256 && ESCAPED[ch] !== 0) {
      if (!silent) {
        state.pending += state.src[pos];
      }

      state.pos += 2;
      return true;
    }

    if (ch === 0x0A) {
      if (!silent) {
        state.push({
          type: 'hardbreak',
          level: state.level
        });
      }

      pos++; // skip leading whitespaces from next line

      while (pos < max && state.src.charCodeAt(pos) === 0x20) {
        pos++;
      }

      state.pos = pos;
      return true;
    }
  }

  if (!silent) {
    state.pending += '\\';
  }

  state.pos++;
  return true;
} // Parse backticks


function backticks(state, silent) {
  var start,
      max,
      marker,
      matchStart,
      matchEnd,
      pos = state.pos,
      ch = state.src.charCodeAt(pos);

  if (ch !== 0x60
  /* ` */
  ) {
    return false;
  }

  start = pos;
  pos++;
  max = state.posMax;

  while (pos < max && state.src.charCodeAt(pos) === 0x60
  /* ` */
  ) {
    pos++;
  }

  marker = state.src.slice(start, pos);
  matchStart = matchEnd = pos;

  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {
    matchEnd = matchStart + 1;

    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60
    /* ` */
    ) {
      matchEnd++;
    }

    if (matchEnd - matchStart === marker.length) {
      if (!silent) {
        state.push({
          type: 'code',
          content: state.src.slice(pos, matchStart).replace(/[ \n]+/g, ' ').trim(),
          block: false,
          level: state.level
        });
      }

      state.pos = matchEnd;
      return true;
    }
  }

  if (!silent) {
    state.pending += marker;
  }

  state.pos += marker.length;
  return true;
} // Process ~~deleted text~~


function del(state, silent) {
  var found,
      pos,
      stack,
      max = state.posMax,
      start = state.pos,
      lastChar,
      nextChar;

  if (state.src.charCodeAt(start) !== 0x7E
  /* ~ */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  if (start + 4 >= max) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x7E
  /* ~ */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
  nextChar = state.src.charCodeAt(start + 2);

  if (lastChar === 0x7E
  /* ~ */
  ) {
    return false;
  }

  if (nextChar === 0x7E
  /* ~ */
  ) {
    return false;
  }

  if (nextChar === 0x20 || nextChar === 0x0A) {
    return false;
  }

  pos = start + 2;

  while (pos < max && state.src.charCodeAt(pos) === 0x7E
  /* ~ */
  ) {
    pos++;
  }

  if (pos > start + 3) {
    // sequence of 4+ markers taking as literal, same as in a emphasis
    state.pos += pos - start;

    if (!silent) {
      state.pending += state.src.slice(start, pos);
    }

    return true;
  }

  state.pos = start + 2;
  stack = 1;

  while (state.pos + 1 < max) {
    if (state.src.charCodeAt(state.pos) === 0x7E
    /* ~ */
    ) {
      if (state.src.charCodeAt(state.pos + 1) === 0x7E
      /* ~ */
      ) {
        lastChar = state.src.charCodeAt(state.pos - 1);
        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;

        if (nextChar !== 0x7E
        /* ~ */
        && lastChar !== 0x7E
        /* ~ */
        ) {
          if (lastChar !== 0x20 && lastChar !== 0x0A) {
            // closing '~~'
            stack--;
          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
            // opening '~~'
            stack++;
          } // else {
          //  // standalone ' ~~ ' indented with spaces
          // }


          if (stack <= 0) {
            found = true;
            break;
          }
        }
      }
    }

    state.parser.skipToken(state);
  }

  if (!found) {
    // parser failed to find ending tag, so it's not valid emphasis
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + 2;

  if (!silent) {
    state.push({
      type: 'del_open',
      level: state.level++
    });
    state.parser.tokenize(state);
    state.push({
      type: 'del_close',
      level: --state.level
    });
  }

  state.pos = state.posMax + 2;
  state.posMax = max;
  return true;
} // Process ++inserted text++


function ins(state, silent) {
  var found,
      pos,
      stack,
      max = state.posMax,
      start = state.pos,
      lastChar,
      nextChar;

  if (state.src.charCodeAt(start) !== 0x2B
  /* + */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  if (start + 4 >= max) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x2B
  /* + */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
  nextChar = state.src.charCodeAt(start + 2);

  if (lastChar === 0x2B
  /* + */
  ) {
    return false;
  }

  if (nextChar === 0x2B
  /* + */
  ) {
    return false;
  }

  if (nextChar === 0x20 || nextChar === 0x0A) {
    return false;
  }

  pos = start + 2;

  while (pos < max && state.src.charCodeAt(pos) === 0x2B
  /* + */
  ) {
    pos++;
  }

  if (pos !== start + 2) {
    // sequence of 3+ markers taking as literal, same as in a emphasis
    state.pos += pos - start;

    if (!silent) {
      state.pending += state.src.slice(start, pos);
    }

    return true;
  }

  state.pos = start + 2;
  stack = 1;

  while (state.pos + 1 < max) {
    if (state.src.charCodeAt(state.pos) === 0x2B
    /* + */
    ) {
      if (state.src.charCodeAt(state.pos + 1) === 0x2B
      /* + */
      ) {
        lastChar = state.src.charCodeAt(state.pos - 1);
        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;

        if (nextChar !== 0x2B
        /* + */
        && lastChar !== 0x2B
        /* + */
        ) {
          if (lastChar !== 0x20 && lastChar !== 0x0A) {
            // closing '++'
            stack--;
          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
            // opening '++'
            stack++;
          } // else {
          //  // standalone ' ++ ' indented with spaces
          // }


          if (stack <= 0) {
            found = true;
            break;
          }
        }
      }
    }

    state.parser.skipToken(state);
  }

  if (!found) {
    // parser failed to find ending tag, so it's not valid emphasis
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + 2;

  if (!silent) {
    state.push({
      type: 'ins_open',
      level: state.level++
    });
    state.parser.tokenize(state);
    state.push({
      type: 'ins_close',
      level: --state.level
    });
  }

  state.pos = state.posMax + 2;
  state.posMax = max;
  return true;
} // Process ==highlighted text==


function mark(state, silent) {
  var found,
      pos,
      stack,
      max = state.posMax,
      start = state.pos,
      lastChar,
      nextChar;

  if (state.src.charCodeAt(start) !== 0x3D
  /* = */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  if (start + 4 >= max) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x3D
  /* = */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;
  nextChar = state.src.charCodeAt(start + 2);

  if (lastChar === 0x3D
  /* = */
  ) {
    return false;
  }

  if (nextChar === 0x3D
  /* = */
  ) {
    return false;
  }

  if (nextChar === 0x20 || nextChar === 0x0A) {
    return false;
  }

  pos = start + 2;

  while (pos < max && state.src.charCodeAt(pos) === 0x3D
  /* = */
  ) {
    pos++;
  }

  if (pos !== start + 2) {
    // sequence of 3+ markers taking as literal, same as in a emphasis
    state.pos += pos - start;

    if (!silent) {
      state.pending += state.src.slice(start, pos);
    }

    return true;
  }

  state.pos = start + 2;
  stack = 1;

  while (state.pos + 1 < max) {
    if (state.src.charCodeAt(state.pos) === 0x3D
    /* = */
    ) {
      if (state.src.charCodeAt(state.pos + 1) === 0x3D
      /* = */
      ) {
        lastChar = state.src.charCodeAt(state.pos - 1);
        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;

        if (nextChar !== 0x3D
        /* = */
        && lastChar !== 0x3D
        /* = */
        ) {
          if (lastChar !== 0x20 && lastChar !== 0x0A) {
            // closing '=='
            stack--;
          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {
            // opening '=='
            stack++;
          } // else {
          //  // standalone ' == ' indented with spaces
          // }


          if (stack <= 0) {
            found = true;
            break;
          }
        }
      }
    }

    state.parser.skipToken(state);
  }

  if (!found) {
    // parser failed to find ending tag, so it's not valid emphasis
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + 2;

  if (!silent) {
    state.push({
      type: 'mark_open',
      level: state.level++
    });
    state.parser.tokenize(state);
    state.push({
      type: 'mark_close',
      level: --state.level
    });
  }

  state.pos = state.posMax + 2;
  state.posMax = max;
  return true;
} // Process *this* and _that_


function isAlphaNum(code) {
  return code >= 0x30
  /* 0 */
  && code <= 0x39
  /* 9 */
  || code >= 0x41
  /* A */
  && code <= 0x5A
  /* Z */
  || code >= 0x61
  /* a */
  && code <= 0x7A
  /* z */
  ;
} // parse sequence of emphasis markers,
// "start" should point at a valid marker


function scanDelims(state, start) {
  var pos = start,
      lastChar,
      nextChar,
      count,
      can_open = true,
      can_close = true,
      max = state.posMax,
      marker = state.src.charCodeAt(start);
  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;

  while (pos < max && state.src.charCodeAt(pos) === marker) {
    pos++;
  }

  if (pos >= max) {
    can_open = false;
  }

  count = pos - start;

  if (count >= 4) {
    // sequence of four or more unescaped markers can't start/end an emphasis
    can_open = can_close = false;
  } else {
    nextChar = pos < max ? state.src.charCodeAt(pos) : -1; // check whitespace conditions

    if (nextChar === 0x20 || nextChar === 0x0A) {
      can_open = false;
    }

    if (lastChar === 0x20 || lastChar === 0x0A) {
      can_close = false;
    }

    if (marker === 0x5F
    /* _ */
    ) {
      // check if we aren't inside the word
      if (isAlphaNum(lastChar)) {
        can_open = false;
      }

      if (isAlphaNum(nextChar)) {
        can_close = false;
      }
    }
  }

  return {
    can_open: can_open,
    can_close: can_close,
    delims: count
  };
}

function emphasis(state, silent) {
  var startCount,
      count,
      found,
      oldCount,
      newCount,
      stack,
      res,
      max = state.posMax,
      start = state.pos,
      marker = state.src.charCodeAt(start);

  if (marker !== 0x5F
  /* _ */
  && marker !== 0x2A
  /* * */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  res = scanDelims(state, start);
  startCount = res.delims;

  if (!res.can_open) {
    state.pos += startCount;

    if (!silent) {
      state.pending += state.src.slice(start, state.pos);
    }

    return true;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  state.pos = start + startCount;
  stack = [startCount];

  while (state.pos < max) {
    if (state.src.charCodeAt(state.pos) === marker) {
      res = scanDelims(state, state.pos);
      count = res.delims;

      if (res.can_close) {
        oldCount = stack.pop();
        newCount = count;

        while (oldCount !== newCount) {
          if (newCount < oldCount) {
            stack.push(oldCount - newCount);
            break;
          } // assert(newCount > oldCount)


          newCount -= oldCount;

          if (stack.length === 0) {
            break;
          }

          state.pos += oldCount;
          oldCount = stack.pop();
        }

        if (stack.length === 0) {
          startCount = oldCount;
          found = true;
          break;
        }

        state.pos += count;
        continue;
      }

      if (res.can_open) {
        stack.push(count);
      }

      state.pos += count;
      continue;
    }

    state.parser.skipToken(state);
  }

  if (!found) {
    // parser failed to find ending tag, so it's not valid emphasis
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + startCount;

  if (!silent) {
    if (startCount === 2 || startCount === 3) {
      state.push({
        type: 'strong_open',
        level: state.level++
      });
    }

    if (startCount === 1 || startCount === 3) {
      state.push({
        type: 'em_open',
        level: state.level++
      });
    }

    state.parser.tokenize(state);

    if (startCount === 1 || startCount === 3) {
      state.push({
        type: 'em_close',
        level: --state.level
      });
    }

    if (startCount === 2 || startCount === 3) {
      state.push({
        type: 'strong_close',
        level: --state.level
      });
    }
  }

  state.pos = state.posMax + startCount;
  state.posMax = max;
  return true;
} // Process ~subscript~
// same as UNESCAPE_MD_RE plus a space


var UNESCAPE_RE = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

function sub(state, silent) {
  var found,
      content,
      max = state.posMax,
      start = state.pos;

  if (state.src.charCodeAt(start) !== 0x7E
  /* ~ */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  if (start + 2 >= max) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  state.pos = start + 1;

  while (state.pos < max) {
    if (state.src.charCodeAt(state.pos) === 0x7E
    /* ~ */
    ) {
      found = true;
      break;
    }

    state.parser.skipToken(state);
  }

  if (!found || start + 1 === state.pos) {
    state.pos = start;
    return false;
  }

  content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside

  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + 1;

  if (!silent) {
    state.push({
      type: 'sub',
      level: state.level,
      content: content.replace(UNESCAPE_RE, '$1')
    });
  }

  state.pos = state.posMax + 1;
  state.posMax = max;
  return true;
} // Process ^superscript^
// same as UNESCAPE_MD_RE plus a space


var UNESCAPE_RE$1 = /\\([ \\!"#$%&'()*+,.\/:;<=>?@[\]^_`{|}~-])/g;

function sup(state, silent) {
  var found,
      content,
      max = state.posMax,
      start = state.pos;

  if (state.src.charCodeAt(start) !== 0x5E
  /* ^ */
  ) {
    return false;
  }

  if (silent) {
    return false;
  } // don't run any pairs in validation mode


  if (start + 2 >= max) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  state.pos = start + 1;

  while (state.pos < max) {
    if (state.src.charCodeAt(state.pos) === 0x5E
    /* ^ */
    ) {
      found = true;
      break;
    }

    state.parser.skipToken(state);
  }

  if (!found || start + 1 === state.pos) {
    state.pos = start;
    return false;
  }

  content = state.src.slice(start + 1, state.pos); // don't allow unescaped spaces/newlines inside

  if (content.match(/(^|[^\\])(\\\\)*\s/)) {
    state.pos = start;
    return false;
  } // found!


  state.posMax = state.pos;
  state.pos = start + 1;

  if (!silent) {
    state.push({
      type: 'sup',
      level: state.level,
      content: content.replace(UNESCAPE_RE$1, '$1')
    });
  }

  state.pos = state.posMax + 1;
  state.posMax = max;
  return true;
} // Process [links](<to> "stuff")


function index_browser_links(state, silent) {
  var labelStart,
      labelEnd,
      label,
      href,
      title,
      pos,
      ref,
      code,
      isImage = false,
      oldPos = state.pos,
      max = state.posMax,
      start = state.pos,
      marker = state.src.charCodeAt(start);

  if (marker === 0x21
  /* ! */
  ) {
    isImage = true;
    marker = state.src.charCodeAt(++start);
  }

  if (marker !== 0x5B
  /* [ */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  labelStart = start + 1;
  labelEnd = parseLinkLabel(state, start); // parser failed to find ']', so it's not a valid link

  if (labelEnd < 0) {
    return false;
  }

  pos = labelEnd + 1;

  if (pos < max && state.src.charCodeAt(pos) === 0x28
  /* ( */
  ) {
    //
    // Inline link
    //
    // [link](  <href>  "title"  )
    //        ^^ skipping these spaces
    pos++;

    for (; pos < max; pos++) {
      code = state.src.charCodeAt(pos);

      if (code !== 0x20 && code !== 0x0A) {
        break;
      }
    }

    if (pos >= max) {
      return false;
    } // [link](  <href>  "title"  )
    //          ^^^^^^ parsing link destination


    start = pos;

    if (parseLinkDestination(state, pos)) {
      href = state.linkContent;
      pos = state.pos;
    } else {
      href = '';
    } // [link](  <href>  "title"  )
    //                ^^ skipping these spaces


    start = pos;

    for (; pos < max; pos++) {
      code = state.src.charCodeAt(pos);

      if (code !== 0x20 && code !== 0x0A) {
        break;
      }
    } // [link](  <href>  "title"  )
    //                  ^^^^^^^ parsing link title


    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {
      title = state.linkContent;
      pos = state.pos; // [link](  <href>  "title"  )
      //                         ^^ skipping these spaces

      for (; pos < max; pos++) {
        code = state.src.charCodeAt(pos);

        if (code !== 0x20 && code !== 0x0A) {
          break;
        }
      }
    } else {
      title = '';
    }

    if (pos >= max || state.src.charCodeAt(pos) !== 0x29
    /* ) */
    ) {
      state.pos = oldPos;
      return false;
    }

    pos++;
  } else {
    //
    // Link reference
    //
    // do not allow nested reference links
    if (state.linkLevel > 0) {
      return false;
    } // [foo]  [bar]
    //      ^^ optional whitespace (can include newlines)


    for (; pos < max; pos++) {
      code = state.src.charCodeAt(pos);

      if (code !== 0x20 && code !== 0x0A) {
        break;
      }
    }

    if (pos < max && state.src.charCodeAt(pos) === 0x5B
    /* [ */
    ) {
      start = pos + 1;
      pos = parseLinkLabel(state, pos);

      if (pos >= 0) {
        label = state.src.slice(start, pos++);
      } else {
        pos = start - 1;
      }
    } // covers label === '' and label === undefined
    // (collapsed reference link and shortcut reference link respectively)


    if (!label) {
      if (typeof label === 'undefined') {
        pos = labelEnd + 1;
      }

      label = state.src.slice(labelStart, labelEnd);
    }

    ref = state.env.references[normalizeReference(label)];

    if (!ref) {
      state.pos = oldPos;
      return false;
    }

    href = ref.href;
    title = ref.title;
  } //
  // We found the end of the link, and know for a fact it's a valid link;
  // so all that's left to do is to call tokenizer.
  //


  if (!silent) {
    state.pos = labelStart;
    state.posMax = labelEnd;

    if (isImage) {
      state.push({
        type: 'image',
        src: href,
        title: title,
        alt: state.src.substr(labelStart, labelEnd - labelStart),
        level: state.level
      });
    } else {
      state.push({
        type: 'link_open',
        href: href,
        title: title,
        level: state.level++
      });
      state.linkLevel++;
      state.parser.tokenize(state);
      state.linkLevel--;
      state.push({
        type: 'link_close',
        level: --state.level
      });
    }
  }

  state.pos = pos;
  state.posMax = max;
  return true;
} // Process inline footnotes (^[...])


function footnote_inline(state, silent) {
  var labelStart,
      labelEnd,
      footnoteId,
      oldLength,
      max = state.posMax,
      start = state.pos;

  if (start + 2 >= max) {
    return false;
  }

  if (state.src.charCodeAt(start) !== 0x5E
  /* ^ */
  ) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x5B
  /* [ */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  labelStart = start + 2;
  labelEnd = parseLinkLabel(state, start + 1); // parser failed to find ']', so it's not a valid note

  if (labelEnd < 0) {
    return false;
  } // We found the end of the link, and know for a fact it's a valid link;
  // so all that's left to do is to call tokenizer.
  //


  if (!silent) {
    if (!state.env.footnotes) {
      state.env.footnotes = {};
    }

    if (!state.env.footnotes.list) {
      state.env.footnotes.list = [];
    }

    footnoteId = state.env.footnotes.list.length;
    state.pos = labelStart;
    state.posMax = labelEnd;
    state.push({
      type: 'footnote_ref',
      id: footnoteId,
      level: state.level
    });
    state.linkLevel++;
    oldLength = state.tokens.length;
    state.parser.tokenize(state);
    state.env.footnotes.list[footnoteId] = {
      tokens: state.tokens.splice(oldLength)
    };
    state.linkLevel--;
  }

  state.pos = labelEnd + 1;
  state.posMax = max;
  return true;
} // Process footnote references ([^...])


function footnote_ref(state, silent) {
  var label,
      pos,
      footnoteId,
      footnoteSubId,
      max = state.posMax,
      start = state.pos; // should be at least 4 chars - "[^x]"

  if (start + 3 > max) {
    return false;
  }

  if (!state.env.footnotes || !state.env.footnotes.refs) {
    return false;
  }

  if (state.src.charCodeAt(start) !== 0x5B
  /* [ */
  ) {
    return false;
  }

  if (state.src.charCodeAt(start + 1) !== 0x5E
  /* ^ */
  ) {
    return false;
  }

  if (state.level >= state.options.maxNesting) {
    return false;
  }

  for (pos = start + 2; pos < max; pos++) {
    if (state.src.charCodeAt(pos) === 0x20) {
      return false;
    }

    if (state.src.charCodeAt(pos) === 0x0A) {
      return false;
    }

    if (state.src.charCodeAt(pos) === 0x5D
    /* ] */
    ) {
      break;
    }
  }

  if (pos === start + 2) {
    return false;
  } // no empty footnote labels


  if (pos >= max) {
    return false;
  }

  pos++;
  label = state.src.slice(start + 2, pos - 1);

  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') {
    return false;
  }

  if (!silent) {
    if (!state.env.footnotes.list) {
      state.env.footnotes.list = [];
    }

    if (state.env.footnotes.refs[':' + label] < 0) {
      footnoteId = state.env.footnotes.list.length;
      state.env.footnotes.list[footnoteId] = {
        label: label,
        count: 0
      };
      state.env.footnotes.refs[':' + label] = footnoteId;
    } else {
      footnoteId = state.env.footnotes.refs[':' + label];
    }

    footnoteSubId = state.env.footnotes.list[footnoteId].count;
    state.env.footnotes.list[footnoteId].count++;
    state.push({
      type: 'footnote_ref',
      id: footnoteId,
      subId: footnoteSubId,
      level: state.level
    });
  }

  state.pos = pos;
  state.posMax = max;
  return true;
} // List of valid url schemas, accorting to commonmark spec
// http://jgm.github.io/CommonMark/spec.html#autolinks


var url_schemas = ['coap', 'doi', 'javascript', 'aaa', 'aaas', 'about', 'acap', 'cap', 'cid', 'crid', 'data', 'dav', 'dict', 'dns', 'file', 'ftp', 'geo', 'go', 'gopher', 'h323', 'http', 'https', 'iax', 'icap', 'im', 'imap', 'info', 'ipp', 'iris', 'iris.beep', 'iris.xpc', 'iris.xpcs', 'iris.lwz', 'ldap', 'mailto', 'mid', 'msrp', 'msrps', 'mtqp', 'mupdate', 'news', 'nfs', 'ni', 'nih', 'nntp', 'opaquelocktoken', 'pop', 'pres', 'rtsp', 'service', 'session', 'shttp', 'sieve', 'sip', 'sips', 'sms', 'snmp', 'soap.beep', 'soap.beeps', 'tag', 'tel', 'telnet', 'tftp', 'thismessage', 'tn3270', 'tip', 'tv', 'urn', 'vemmi', 'ws', 'wss', 'xcon', 'xcon-userid', 'xmlrpc.beep', 'xmlrpc.beeps', 'xmpp', 'z39.50r', 'z39.50s', 'adiumxtra', 'afp', 'afs', 'aim', 'apt', 'attachment', 'aw', 'beshare', 'bitcoin', 'bolo', 'callto', 'chrome', 'chrome-extension', 'com-eventbrite-attendee', 'content', 'cvs', 'dlna-playsingle', 'dlna-playcontainer', 'dtn', 'dvb', 'ed2k', 'facetime', 'feed', 'finger', 'fish', 'gg', 'git', 'gizmoproject', 'gtalk', 'hcp', 'icon', 'ipn', 'irc', 'irc6', 'ircs', 'itms', 'jar', 'jms', 'keyparc', 'lastfm', 'ldaps', 'magnet', 'maps', 'market', 'message', 'mms', 'ms-help', 'msnim', 'mumble', 'mvn', 'notes', 'oid', 'palm', 'paparazzi', 'platform', 'proxy', 'psyc', 'query', 'res', 'resource', 'rmi', 'rsync', 'rtmp', 'secondlife', 'sftp', 'sgn', 'skype', 'smb', 'soldat', 'spotify', 'ssh', 'steam', 'svn', 'teamspeak', 'things', 'udp', 'unreal', 'ut2004', 'ventrilo', 'view-source', 'webcal', 'wtai', 'wyciwyg', 'xfire', 'xri', 'ymsgr']; // Process autolinks '<protocol:...>'

/*eslint max-len:0*/

var EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;
var AUTOLINK_RE = /^<([a-zA-Z.\-]{1,25}):([^<>\x00-\x20]*)>/;

function autolink(state, silent) {
  var tail,
      linkMatch,
      emailMatch,
      url,
      fullUrl,
      pos = state.pos;

  if (state.src.charCodeAt(pos) !== 0x3C
  /* < */
  ) {
    return false;
  }

  tail = state.src.slice(pos);

  if (tail.indexOf('>') < 0) {
    return false;
  }

  linkMatch = tail.match(AUTOLINK_RE);

  if (linkMatch) {
    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) {
      return false;
    }

    url = linkMatch[0].slice(1, -1);
    fullUrl = normalizeLink(url);

    if (!state.parser.validateLink(url)) {
      return false;
    }

    if (!silent) {
      state.push({
        type: 'link_open',
        href: fullUrl,
        level: state.level
      });
      state.push({
        type: 'text',
        content: url,
        level: state.level + 1
      });
      state.push({
        type: 'link_close',
        level: state.level
      });
    }

    state.pos += linkMatch[0].length;
    return true;
  }

  emailMatch = tail.match(EMAIL_RE);

  if (emailMatch) {
    url = emailMatch[0].slice(1, -1);
    fullUrl = normalizeLink('mailto:' + url);

    if (!state.parser.validateLink(fullUrl)) {
      return false;
    }

    if (!silent) {
      state.push({
        type: 'link_open',
        href: fullUrl,
        level: state.level
      });
      state.push({
        type: 'text',
        content: url,
        level: state.level + 1
      });
      state.push({
        type: 'link_close',
        level: state.level
      });
    }

    state.pos += emailMatch[0].length;
    return true;
  }

  return false;
} // Regexps to match html elements


function replace$1(regex, options) {
  regex = regex.source;
  options = options || '';
  return function self(name, val) {
    if (!name) {
      return new RegExp(regex, options);
    }

    val = val.source || val;
    regex = regex.replace(name, val);
    return self;
  };
}

var attr_name = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;
var unquoted = /[^"'=<>`\x00-\x20]+/;
var single_quoted = /'[^']*'/;
var double_quoted = /"[^"]*"/;
/*eslint no-spaced-func:0*/

var attr_value = replace$1(/(?:unquoted|single_quoted|double_quoted)/)('unquoted', unquoted)('single_quoted', single_quoted)('double_quoted', double_quoted)();
var attribute = replace$1(/(?:\s+attr_name(?:\s*=\s*attr_value)?)/)('attr_name', attr_name)('attr_value', attr_value)();
var open_tag = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\s*\/?>/)('attribute', attribute)();
var close_tag = /<\/[A-Za-z][A-Za-z0-9]*\s*>/;
var comment = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;
var processing = /<[?].*?[?]>/;
var declaration = /<![A-Z]+\s+[^>]*>/;
var cdata = /<!\[CDATA\[[\s\S]*?\]\]>/;
var HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)('open_tag', open_tag)('close_tag', close_tag)('comment', comment)('processing', processing)('declaration', declaration)('cdata', cdata)(); // Process html tags

function isLetter$2(ch) {
  /*eslint no-bitwise:0*/
  var lc = ch | 0x20; // to lower case

  return lc >= 0x61
  /* a */
  && lc <= 0x7a
  /* z */
  ;
}

function htmltag(state, silent) {
  var ch,
      match,
      max,
      pos = state.pos;

  if (!state.options.html) {
    return false;
  } // Check start


  max = state.posMax;

  if (state.src.charCodeAt(pos) !== 0x3C
  /* < */
  || pos + 2 >= max) {
    return false;
  } // Quick fail on second char


  ch = state.src.charCodeAt(pos + 1);

  if (ch !== 0x21
  /* ! */
  && ch !== 0x3F
  /* ? */
  && ch !== 0x2F
  /* / */
  && !isLetter$2(ch)) {
    return false;
  }

  match = state.src.slice(pos).match(HTML_TAG_RE);

  if (!match) {
    return false;
  }

  if (!silent) {
    state.push({
      type: 'htmltag',
      content: state.src.slice(pos, pos + match[0].length),
      level: state.level
    });
  }

  state.pos += match[0].length;
  return true;
} // Process html entity - &#123;, &#xAF;, &quot;, ...


var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;
var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;

function entity(state, silent) {
  var ch,
      code,
      match,
      pos = state.pos,
      max = state.posMax;

  if (state.src.charCodeAt(pos) !== 0x26
  /* & */
  ) {
    return false;
  }

  if (pos + 1 < max) {
    ch = state.src.charCodeAt(pos + 1);

    if (ch === 0x23
    /* # */
    ) {
      match = state.src.slice(pos).match(DIGITAL_RE);

      if (match) {
        if (!silent) {
          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);
          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);
        }

        state.pos += match[0].length;
        return true;
      }
    } else {
      match = state.src.slice(pos).match(NAMED_RE);

      if (match) {
        var decoded = decodeEntity(match[1]);

        if (match[1] !== decoded) {
          if (!silent) {
            state.pending += decoded;
          }

          state.pos += match[0].length;
          return true;
        }
      }
    }
  }

  if (!silent) {
    state.pending += '&';
  }

  state.pos++;
  return true;
}
/**
 * Inline Parser `rules`
 */


var _rules$2 = [['text', index_browser_text], ['newline', newline], ['escape', index_browser_escape], ['backticks', backticks], ['del', del], ['ins', ins], ['mark', mark], ['emphasis', emphasis], ['sub', sub], ['sup', sup], ['links', index_browser_links], ['footnote_inline', footnote_inline], ['footnote_ref', footnote_ref], ['autolink', autolink], ['htmltag', htmltag], ['entity', entity]];
/**
 * Inline Parser class. Note that link validation is stricter
 * in Remarkable than what is specified by CommonMark. If you
 * want to change this you can use a custom validator.
 *
 * @api private
 */

function ParserInline() {
  this.ruler = new Ruler();

  for (var i = 0; i < _rules$2.length; i++) {
    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);
  } // Can be overridden with a custom validator


  this.validateLink = validateLink;
}
/**
 * Skip a single token by running all rules in validation mode.
 * Returns `true` if any rule reports success.
 *
 * @param  {Object} `state`
 * @api privage
 */


ParserInline.prototype.skipToken = function (state) {
  var rules = this.ruler.getRules('');
  var len = rules.length;
  var pos = state.pos;
  var i, cached_pos;

  if ((cached_pos = state.cacheGet(pos)) > 0) {
    state.pos = cached_pos;
    return;
  }

  for (i = 0; i < len; i++) {
    if (rules[i](state, true)) {
      state.cacheSet(pos, state.pos);
      return;
    }
  }

  state.pos++;
  state.cacheSet(pos, state.pos);
};
/**
 * Generate tokens for the given input range.
 *
 * @param  {Object} `state`
 * @api private
 */


ParserInline.prototype.tokenize = function (state) {
  var rules = this.ruler.getRules('');
  var len = rules.length;
  var end = state.posMax;
  var ok, i;

  while (state.pos < end) {
    // Try all possible rules.
    // On success, the rule should:
    //
    // - update `state.pos`
    // - update `state.tokens`
    // - return true
    for (i = 0; i < len; i++) {
      ok = rules[i](state, false);

      if (ok) {
        break;
      }
    }

    if (ok) {
      if (state.pos >= end) {
        break;
      }

      continue;
    }

    state.pending += state.src[state.pos++];
  }

  if (state.pending) {
    state.pushPending();
  }
};
/**
 * Parse the given input string.
 *
 * @param  {String} `str`
 * @param  {Object} `options`
 * @param  {Object} `env`
 * @param  {Array} `outTokens`
 * @api private
 */


ParserInline.prototype.parse = function (str, options, env, outTokens) {
  var state = new StateInline(str, this, options, env, outTokens);
  this.tokenize(state);
};
/**
 * Validate the given `url` by checking for bad protocols.
 *
 * @param  {String} `url`
 * @return {Boolean}
 */


function validateLink(url) {
  var BAD_PROTOCOLS = ['vbscript', 'javascript', 'file', 'data'];
  var str = url.trim().toLowerCase(); // Care about digital entities "javascript&#x3A;alert(1)"

  str = replaceEntities(str);

  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {
    return false;
  }

  return true;
} // Remarkable default options


var defaultConfig = {
  options: {
    html: false,
    // Enable HTML tags in source
    xhtmlOut: false,
    // Use '/' to close single tags (<br />)
    breaks: false,
    // Convert '\n' in paragraphs into <br>
    langPrefix: 'language-',
    // CSS language prefix for fenced blocks
    linkTarget: '',
    // set target to open link in
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
    quotes: '“”‘’',
    // Highlighter function. Should return escaped HTML,
    // or '' if input not changed
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20 // Internal protection, recursion limit

  },
  components: {
    core: {
      rules: ['block', 'inline', 'references', 'replacements', 'smartquotes', 'references', 'abbr2', 'footnote_tail']
    },
    block: {
      rules: ['blockquote', 'code', 'fences', 'footnote', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph', 'table']
    },
    inline: {
      rules: ['autolink', 'backticks', 'del', 'emphasis', 'entity', 'escape', 'footnote_ref', 'htmltag', 'links', 'newline', 'text']
    }
  }
}; // Remarkable default options

var fullConfig = {
  options: {
    html: false,
    // Enable HTML tags in source
    xhtmlOut: false,
    // Use '/' to close single tags (<br />)
    breaks: false,
    // Convert '\n' in paragraphs into <br>
    langPrefix: 'language-',
    // CSS language prefix for fenced blocks
    linkTarget: '',
    // set target to open link in
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
    quotes: '“”‘’',
    // Highlighter function. Should return escaped HTML,
    // or '' if input not changed
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20 // Internal protection, recursion limit

  },
  components: {
    // Don't restrict core/block/inline rules
    core: {},
    block: {},
    inline: {}
  }
}; // Commonmark default options

var commonmarkConfig = {
  options: {
    html: true,
    // Enable HTML tags in source
    xhtmlOut: true,
    // Use '/' to close single tags (<br />)
    breaks: false,
    // Convert '\n' in paragraphs into <br>
    langPrefix: 'language-',
    // CSS language prefix for fenced blocks
    linkTarget: '',
    // set target to open link in
    // Enable some language-neutral replacements + quotes beautification
    typographer: false,
    // Double + single quotes replacement pairs, when typographer enabled,
    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.
    quotes: '“”‘’',
    // Highlighter function. Should return escaped HTML,
    // or '' if input not changed
    //
    // function (/*str, lang*/) { return ''; }
    //
    highlight: null,
    maxNesting: 20 // Internal protection, recursion limit

  },
  components: {
    core: {
      rules: ['block', 'inline', 'references', 'abbr2']
    },
    block: {
      rules: ['blockquote', 'code', 'fences', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph']
    },
    inline: {
      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'htmltag', 'links', 'newline', 'text']
    }
  }
};
/**
 * Preset configs
 */

var config = {
  'default': defaultConfig,
  'full': fullConfig,
  'commonmark': commonmarkConfig
};
/**
 * The `StateCore` class manages state.
 *
 * @param {Object} `instance` Remarkable instance
 * @param {String} `str` Markdown string
 * @param {Object} `env`
 */

function StateCore(instance, str, env) {
  this.src = str;
  this.env = env;
  this.options = instance.options;
  this.tokens = [];
  this.inlineMode = false;
  this.inline = instance.inline;
  this.block = instance.block;
  this.renderer = instance.renderer;
  this.typographer = instance.typographer;
}
/**
 * The main `Remarkable` class. Create an instance of
 * `Remarkable` with a `preset` and/or `options`.
 *
 * @param {String} `preset` If no preset is given, `default` is used.
 * @param {Object} `options`
 */


function Remarkable(preset, options) {
  if (typeof preset !== 'string') {
    options = preset;
    preset = 'default';
  }

  if (options && options.linkify != null) {
    console.warn('linkify option is removed. Use linkify plugin instead:\n\n' + 'import Remarkable from \'remarkable\';\n' + 'import linkify from \'remarkable/linkify\';\n' + 'new Remarkable().use(linkify)\n');
  }

  this.inline = new ParserInline();
  this.block = new ParserBlock();
  this.core = new Core();
  this.renderer = new Renderer();
  this.ruler = new Ruler();
  this.options = {};
  this.configure(config[preset]);
  this.set(options || {});
}
/**
 * Set options as an alternative to passing them
 * to the constructor.
 *
 * ```js
 * md.set({typographer: true});
 * ```
 * @param {Object} `options`
 * @api public
 */


Remarkable.prototype.set = function (options) {
  index_browser_assign(this.options, options);
};
/**
 * Batch loader for components rules states, and options
 *
 * @param  {Object} `presets`
 */


Remarkable.prototype.configure = function (presets) {
  var self = this;

  if (!presets) {
    throw new Error('Wrong `remarkable` preset, check name/content');
  }

  if (presets.options) {
    self.set(presets.options);
  }

  if (presets.components) {
    Object.keys(presets.components).forEach(function (name) {
      if (presets.components[name].rules) {
        self[name].ruler.enable(presets.components[name].rules, true);
      }
    });
  }
};
/**
 * Use a plugin.
 *
 * ```js
 * var md = new Remarkable();
 *
 * md.use(plugin1)
 *   .use(plugin2, opts)
 *   .use(plugin3);
 * ```
 *
 * @param  {Function} `plugin`
 * @param  {Object} `options`
 * @return {Object} `Remarkable` for chaining
 */


Remarkable.prototype.use = function (plugin, options) {
  plugin(this, options);
  return this;
};
/**
 * Parse the input `string` and return a tokens array.
 * Modifies `env` with definitions data.
 *
 * @param  {String} `string`
 * @param  {Object} `env`
 * @return {Array} Array of tokens
 */


Remarkable.prototype.parse = function (str, env) {
  var state = new StateCore(this, str, env);
  this.core.process(state);
  return state.tokens;
};
/**
 * The main `.render()` method that does all the magic :)
 *
 * @param  {String} `string`
 * @param  {Object} `env`
 * @return {String} Rendered HTML.
 */


Remarkable.prototype.render = function (str, env) {
  env = env || {};
  return this.renderer.render(this.parse(str, env), this.options, env);
};
/**
 * Parse the given content `string` as a single string.
 *
 * @param  {String} `string`
 * @param  {Object} `env`
 * @return {Array} Array of tokens
 */


Remarkable.prototype.parseInline = function (str, env) {
  var state = new StateCore(this, str, env);
  state.inlineMode = true;
  this.core.process(state);
  return state.tokens;
};
/**
 * Render a single content `string`, without wrapping it
 * to paragraphs
 *
 * @param  {String} `str`
 * @param  {Object} `env`
 * @return {String}
 */


Remarkable.prototype.renderInline = function (str, env) {
  env = env || {};
  return this.renderer.render(this.parseInline(str, env), this.options, env);
};


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/utils.js
/**
 * Assigns (shallow copies) the properties of `src` onto `dest`, if the
 * corresponding property on `dest` === `undefined`.
 *
 * @param {Object} dest The destination object.
 * @param {Object} src The source object.
 * @return {Object} The destination object (`dest`)
 */
function defaults(dest, src) {
  for (var prop in src) {
    if (src.hasOwnProperty(prop) && dest[prop] === undefined) {
      dest[prop] = src[prop];
    }
  }

  return dest;
}
/**
 * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the
 * end of the string (by default, two periods: '..'). If the `str` length does not exceed
 * `len`, the string will be returned unchanged.
 *
 * @param {String} str The string to truncate and add an ellipsis to.
 * @param {Number} truncateLen The length to truncate the string at.
 * @param {String} [ellipsisChars=...] The ellipsis character(s) to add to the end of `str`
 *   when truncated. Defaults to '...'
 */

function ellipsis(str, truncateLen, ellipsisChars) {
  var ellipsisLength;

  if (str.length > truncateLen) {
    if (ellipsisChars == null) {
      ellipsisChars = '&hellip;';
      ellipsisLength = 3;
    } else {
      ellipsisLength = ellipsisChars.length;
    }

    str = str.substring(0, truncateLen - ellipsisLength) + ellipsisChars;
  }

  return str;
}
/**
 * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).
 *
 * @param {Array} arr The array to find an element of.
 * @param {*} element The element to find in the array, and return the index of.
 * @return {Number} The index of the `element`, or -1 if it was not found.
 */

function indexOf(arr, element) {
  // @ts-ignore - As far as TypeScript is concerned, this method will always
  // exist (lowest "lib" in TS is "ES5"). Hence we need to ignore this error
  // to support IE8 which only implements ES3 and doesn't have this method
  if (Array.prototype.indexOf) {
    return arr.indexOf(element);
  } else {
    for (var i = 0, len = arr.length; i < len; i++) {
      if (arr[i] === element) return i;
    }

    return -1;
  }
}
/**
 * Removes array elements based on a filtering function. Mutates the input
 * array.
 *
 * Using this instead of the ES5 Array.prototype.filter() function, to allow
 * Autolinker compatibility with IE8, and also to prevent creating many new
 * arrays in memory for filtering.
 *
 * @param {Array} arr The array to remove elements from. This array is
 *   mutated.
 * @param {Function} fn A function which should return `true` to
 *   remove an element.
 * @return {Array} The mutated input `arr`.
 */

function remove(arr, fn) {
  for (var i = arr.length - 1; i >= 0; i--) {
    if (fn(arr[i]) === true) {
      arr.splice(i, 1);
    }
  }
}
/**
 * Performs the functionality of what modern browsers do when `String.prototype.split()` is called
 * with a regular expression that contains capturing parenthesis.
 *
 * For example:
 *
 *     // Modern browsers:
 *     "a,b,c".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]
 *
 *     // Old IE (including IE8):
 *     "a,b,c".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]
 *
 * This method emulates the functionality of modern browsers for the old IE case.
 *
 * @param {String} str The string to split.
 * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting
 *   character(s) will be spliced into the array, as in the "modern browsers" example in the
 *   description of this method.
 *   Note #1: the supplied regular expression **must** have the 'g' flag specified.
 *   Note #2: for simplicity's sake, the regular expression does not need
 *   to contain capturing parenthesis - it will be assumed that any match has them.
 * @return {String[]} The split array of strings, with the splitting character(s) included.
 */

function splitAndCapture(str, splitRegex) {
  if (!splitRegex.global) throw new Error("`splitRegex` must have the 'g' flag set");
  var result = [],
      lastIdx = 0,
      match;

  while (match = splitRegex.exec(str)) {
    result.push(str.substring(lastIdx, match.index));
    result.push(match[0]); // push the splitting char(s)

    lastIdx = match.index + match[0].length;
  }

  result.push(str.substring(lastIdx));
  return result;
}
/**
 * Function that should never be called but is used to check that every
 * enum value is handled using TypeScript's 'never' type.
 */

function throwUnhandledCaseError(theValue) {
  throw new Error("Unhandled case for value: '" + theValue + "'");
}
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/html-tag.js

/**
 * @class Autolinker.HtmlTag
 * @extends Object
 *
 * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.
 *
 * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use
 * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.
 *
 * ## Examples
 *
 * Example instantiation:
 *
 *     var tag = new Autolinker.HtmlTag( {
 *         tagName : 'a',
 *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },
 *         innerHtml : 'Google'
 *     } );
 *
 *     tag.toAnchorString();  // <a href="http://google.com" class="external-link">Google</a>
 *
 *     // Individual accessor methods
 *     tag.getTagName();                 // 'a'
 *     tag.getAttr( 'href' );            // 'http://google.com'
 *     tag.hasClass( 'external-link' );  // true
 *
 *
 * Using mutator methods (which may be used in combination with instantiation config properties):
 *
 *     var tag = new Autolinker.HtmlTag();
 *     tag.setTagName( 'a' );
 *     tag.setAttr( 'href', 'http://google.com' );
 *     tag.addClass( 'external-link' );
 *     tag.setInnerHtml( 'Google' );
 *
 *     tag.getTagName();                 // 'a'
 *     tag.getAttr( 'href' );            // 'http://google.com'
 *     tag.hasClass( 'external-link' );  // true
 *
 *     tag.toAnchorString();  // <a href="http://google.com" class="external-link">Google</a>
 *
 *
 * ## Example use within a {@link Autolinker#replaceFn replaceFn}
 *
 *     var html = Autolinker.link( "Test google.com", {
 *         replaceFn : function( match ) {
 *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text
 *             tag.setAttr( 'rel', 'nofollow' );
 *
 *             return tag;
 *         }
 *     } );
 *
 *     // generated html:
 *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
 *
 *
 * ## Example use with a new tag for the replacement
 *
 *     var html = Autolinker.link( "Test google.com", {
 *         replaceFn : function( match ) {
 *             var tag = new Autolinker.HtmlTag( {
 *                 tagName : 'button',
 *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },
 *                 innerHtml : 'Load URL: ' + match.getAnchorText()
 *             } );
 *
 *             return tag;
 *         }
 *     } );
 *
 *     // generated html:
 *     //   Test <button title="Load URL: http://google.com">Load URL: google.com</button>
 */

var html_tag_HtmlTag =
/** @class */
function () {
  /**
   * @method constructor
   * @param {Object} [cfg] The configuration properties for this class, in an Object (map)
   */
  function HtmlTag(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }
    /**
     * @cfg {String} tagName
     *
     * The tag name. Ex: 'a', 'button', etc.
     *
     * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}
     * is executed.
     */


    this.tagName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Object.<String, String>} attrs
     *
     * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the
     * values are the attribute values.
     */

    this.attrs = {}; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String} innerHTML
     *
     * The inner HTML for the tag.
     */

    this.innerHTML = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @protected
     * @property {RegExp} whitespaceRegex
     *
     * Regular expression used to match whitespace in a string of CSS classes.
     */

    this.whitespaceRegex = /\s+/; // default value just to get the above doc comment in the ES5 output and documentation generator

    this.tagName = cfg.tagName || '';
    this.attrs = cfg.attrs || {};
    this.innerHTML = cfg.innerHtml || cfg.innerHTML || ''; // accept either the camelCased form or the fully capitalized acronym as in the DOM
  }
  /**
   * Sets the tag name that will be used to generate the tag with.
   *
   * @param {String} tagName
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setTagName = function (tagName) {
    this.tagName = tagName;
    return this;
  };
  /**
   * Retrieves the tag name.
   *
   * @return {String}
   */


  HtmlTag.prototype.getTagName = function () {
    return this.tagName || '';
  };
  /**
   * Sets an attribute on the HtmlTag.
   *
   * @param {String} attrName The attribute name to set.
   * @param {String} attrValue The attribute value to set.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setAttr = function (attrName, attrValue) {
    var tagAttrs = this.getAttrs();
    tagAttrs[attrName] = attrValue;
    return this;
  };
  /**
   * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.
   *
   * @param {String} attrName The attribute name to retrieve.
   * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.
   */


  HtmlTag.prototype.getAttr = function (attrName) {
    return this.getAttrs()[attrName];
  };
  /**
   * Sets one or more attributes on the HtmlTag.
   *
   * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setAttrs = function (attrs) {
    Object.assign(this.getAttrs(), attrs);
    return this;
  };
  /**
   * Retrieves the attributes Object (map) for the HtmlTag.
   *
   * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.
   */


  HtmlTag.prototype.getAttrs = function () {
    return this.attrs || (this.attrs = {});
  };
  /**
   * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.
   *
   * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setClass = function (cssClass) {
    return this.setAttr('class', cssClass);
  };
  /**
   * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.
   *
   * @param {String} cssClass One or more space-separated CSS classes to add.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.addClass = function (cssClass) {
    var classAttr = this.getClass(),
        whitespaceRegex = this.whitespaceRegex,
        classes = !classAttr ? [] : classAttr.split(whitespaceRegex),
        newClasses = cssClass.split(whitespaceRegex),
        newClass;

    while (newClass = newClasses.shift()) {
      if (indexOf(classes, newClass) === -1) {
        classes.push(newClass);
      }
    }

    this.getAttrs()['class'] = classes.join(" ");
    return this;
  };
  /**
   * Convenience method to remove one or more CSS classes from the HtmlTag.
   *
   * @param {String} cssClass One or more space-separated CSS classes to remove.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.removeClass = function (cssClass) {
    var classAttr = this.getClass(),
        whitespaceRegex = this.whitespaceRegex,
        classes = !classAttr ? [] : classAttr.split(whitespaceRegex),
        removeClasses = cssClass.split(whitespaceRegex),
        removeClass;

    while (classes.length && (removeClass = removeClasses.shift())) {
      var idx = indexOf(classes, removeClass);

      if (idx !== -1) {
        classes.splice(idx, 1);
      }
    }

    this.getAttrs()['class'] = classes.join(" ");
    return this;
  };
  /**
   * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when
   * there are multiple.
   *
   * @return {String}
   */


  HtmlTag.prototype.getClass = function () {
    return this.getAttrs()['class'] || "";
  };
  /**
   * Convenience method to check if the tag has a CSS class or not.
   *
   * @param {String} cssClass The CSS class to check for.
   * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.
   */


  HtmlTag.prototype.hasClass = function (cssClass) {
    return (' ' + this.getClass() + ' ').indexOf(' ' + cssClass + ' ') !== -1;
  };
  /**
   * Sets the inner HTML for the tag.
   *
   * @param {String} html The inner HTML to set.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setInnerHTML = function (html) {
    this.innerHTML = html;
    return this;
  };
  /**
   * Backwards compatibility method name.
   *
   * @param {String} html The inner HTML to set.
   * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.
   */


  HtmlTag.prototype.setInnerHtml = function (html) {
    return this.setInnerHTML(html);
  };
  /**
   * Retrieves the inner HTML for the tag.
   *
   * @return {String}
   */


  HtmlTag.prototype.getInnerHTML = function () {
    return this.innerHTML || "";
  };
  /**
   * Backward compatibility method name.
   *
   * @return {String}
   */


  HtmlTag.prototype.getInnerHtml = function () {
    return this.getInnerHTML();
  };
  /**
   * Override of superclass method used to generate the HTML string for the tag.
   *
   * @return {String}
   */


  HtmlTag.prototype.toAnchorString = function () {
    var tagName = this.getTagName(),
        attrsStr = this.buildAttrsStr();
    attrsStr = attrsStr ? ' ' + attrsStr : ''; // prepend a space if there are actually attributes

    return ['<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>'].join("");
  };
  /**
   * Support method for {@link #toAnchorString}, returns the string space-separated key="value" pairs, used to populate
   * the stringified HtmlTag.
   *
   * @protected
   * @return {String} Example return: `attr1="value1" attr2="value2"`
   */


  HtmlTag.prototype.buildAttrsStr = function () {
    if (!this.attrs) return ""; // no `attrs` Object (map) has been set, return empty string

    var attrs = this.getAttrs(),
        attrsArr = [];

    for (var prop in attrs) {
      if (attrs.hasOwnProperty(prop)) {
        attrsArr.push(prop + '="' + attrs[prop] + '"');
      }
    }

    return attrsArr.join(" ");
  };

  return HtmlTag;
}();


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/truncate/truncate-smart.js
/**
 * Date: 2015-10-05
 * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)
 *
 * A truncation feature, where the ellipsis will be placed at a section within
 * the URL making it still somewhat human readable.
 *
 * @param {String} url						 A URL.
 * @param {Number} truncateLen		 The maximum length of the truncated output URL string.
 * @param {String} ellipsisChars	 The characters to place within the url, e.g. "...".
 * @return {String} The truncated URL.
 */
function truncateSmart(url, truncateLen, ellipsisChars) {
  var ellipsisLengthBeforeParsing;
  var ellipsisLength;

  if (ellipsisChars == null) {
    ellipsisChars = '&hellip;';
    ellipsisLength = 3;
    ellipsisLengthBeforeParsing = 8;
  } else {
    ellipsisLength = ellipsisChars.length;
    ellipsisLengthBeforeParsing = ellipsisChars.length;
  }

  var parse_url = function parse_url(url) {
    var urlObj = {};
    var urlSub = url;
    var match = urlSub.match(/^([a-z]+):\/\//i);

    if (match) {
      urlObj.scheme = match[1];
      urlSub = urlSub.substr(match[0].length);
    }

    match = urlSub.match(/^(.*?)(?=(\?|#|\/|$))/i);

    if (match) {
      urlObj.host = match[1];
      urlSub = urlSub.substr(match[0].length);
    }

    match = urlSub.match(/^\/(.*?)(?=(\?|#|$))/i);

    if (match) {
      urlObj.path = match[1];
      urlSub = urlSub.substr(match[0].length);
    }

    match = urlSub.match(/^\?(.*?)(?=(#|$))/i);

    if (match) {
      urlObj.query = match[1];
      urlSub = urlSub.substr(match[0].length);
    }

    match = urlSub.match(/^#(.*?)$/i);

    if (match) {
      urlObj.fragment = match[1]; //urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.
    }

    return urlObj;
  };

  var buildUrl = function buildUrl(urlObj) {
    var url = "";

    if (urlObj.scheme && urlObj.host) {
      url += urlObj.scheme + "://";
    }

    if (urlObj.host) {
      url += urlObj.host;
    }

    if (urlObj.path) {
      url += "/" + urlObj.path;
    }

    if (urlObj.query) {
      url += "?" + urlObj.query;
    }

    if (urlObj.fragment) {
      url += "#" + urlObj.fragment;
    }

    return url;
  };

  var buildSegment = function buildSegment(segment, remainingAvailableLength) {
    var remainingAvailableLengthHalf = remainingAvailableLength / 2,
        startOffset = Math.ceil(remainingAvailableLengthHalf),
        endOffset = -1 * Math.floor(remainingAvailableLengthHalf),
        end = "";

    if (endOffset < 0) {
      end = segment.substr(endOffset);
    }

    return segment.substr(0, startOffset) + ellipsisChars + end;
  };

  if (url.length <= truncateLen) {
    return url;
  }

  var availableLength = truncateLen - ellipsisLength;
  var urlObj = parse_url(url); // Clean up the URL

  if (urlObj.query) {
    var matchQuery = urlObj.query.match(/^(.*?)(?=(\?|\#))(.*?)$/i);

    if (matchQuery) {
      // Malformed URL; two or more "?". Removed any content behind the 2nd.
      urlObj.query = urlObj.query.substr(0, matchQuery[1].length);
      url = buildUrl(urlObj);
    }
  }

  if (url.length <= truncateLen) {
    return url;
  }

  if (urlObj.host) {
    urlObj.host = urlObj.host.replace(/^www\./, "");
    url = buildUrl(urlObj);
  }

  if (url.length <= truncateLen) {
    return url;
  } // Process and build the URL


  var str = "";

  if (urlObj.host) {
    str += urlObj.host;
  }

  if (str.length >= availableLength) {
    if (urlObj.host.length == truncateLen) {
      return (urlObj.host.substr(0, truncateLen - ellipsisLength) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);
    }

    return buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);
  }

  var pathAndQuery = "";

  if (urlObj.path) {
    pathAndQuery += "/" + urlObj.path;
  }

  if (urlObj.query) {
    pathAndQuery += "?" + urlObj.query;
  }

  if (pathAndQuery) {
    if ((str + pathAndQuery).length >= availableLength) {
      if ((str + pathAndQuery).length == truncateLen) {
        return (str + pathAndQuery).substr(0, truncateLen);
      }

      var remainingAvailableLength = availableLength - str.length;
      return (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);
    } else {
      str += pathAndQuery;
    }
  }

  if (urlObj.fragment) {
    var fragment = "#" + urlObj.fragment;

    if ((str + fragment).length >= availableLength) {
      if ((str + fragment).length == truncateLen) {
        return (str + fragment).substr(0, truncateLen);
      }

      var remainingAvailableLength2 = availableLength - str.length;
      return (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);
    } else {
      str += fragment;
    }
  }

  if (urlObj.scheme && urlObj.host) {
    var scheme = urlObj.scheme + "://";

    if ((str + scheme).length < availableLength) {
      return (scheme + str).substr(0, truncateLen);
    }
  }

  if (str.length <= truncateLen) {
    return str;
  }

  var end = "";

  if (availableLength > 0) {
    end = str.substr(-1 * Math.floor(availableLength / 2));
  }

  return (str.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);
}
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/truncate/truncate-middle.js
/**
 * Date: 2015-10-05
 * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)
 *
 * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.
 *
 * @param {String} url             A URL.
 * @param {Number} truncateLen     The maximum length of the truncated output URL string.
 * @param {String} ellipsisChars   The characters to place within the url, e.g. "..".
 * @return {String} The truncated URL.
 */
function truncateMiddle(url, truncateLen, ellipsisChars) {
  if (url.length <= truncateLen) {
    return url;
  }

  var ellipsisLengthBeforeParsing;
  var ellipsisLength;

  if (ellipsisChars == null) {
    ellipsisChars = '&hellip;';
    ellipsisLengthBeforeParsing = 8;
    ellipsisLength = 3;
  } else {
    ellipsisLengthBeforeParsing = ellipsisChars.length;
    ellipsisLength = ellipsisChars.length;
  }

  var availableLength = truncateLen - ellipsisLength;
  var end = "";

  if (availableLength > 0) {
    end = url.substr(-1 * Math.floor(availableLength / 2));
  }

  return (url.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);
}
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/truncate/truncate-end.js

/**
 * A truncation feature where the ellipsis will be placed at the end of the URL.
 *
 * @param {String} anchorText
 * @param {Number} truncateLen The maximum length of the truncated output URL string.
 * @param {String} ellipsisChars The characters to place within the url, e.g. "..".
 * @return {String} The truncated URL.
 */

function truncateEnd(anchorText, truncateLen, ellipsisChars) {
  return ellipsis(anchorText, truncateLen, ellipsisChars);
}
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/anchor-tag-builder.js




/**
 * @protected
 * @class Autolinker.AnchorTagBuilder
 * @extends Object
 *
 * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is
 * found.
 *
 * Normally this class is instantiated, configured, and used internally by an
 * {@link Autolinker} instance, but may actually be used indirectly in a
 * {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag}
 * instances which may be modified before returning from the
 * {@link Autolinker#replaceFn replaceFn}. For example:
 *
 *     var html = Autolinker.link( "Test google.com", {
 *         replaceFn : function( match ) {
 *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance
 *             tag.setAttr( 'rel', 'nofollow' );
 *
 *             return tag;
 *         }
 *     } );
 *
 *     // generated html:
 *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
 */

var anchor_tag_builder_AnchorTagBuilder =
/** @class */
function () {
  /**
   * @method constructor
   * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).
   */
  function AnchorTagBuilder(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }
    /**
     * @cfg {Boolean} newWindow
     * @inheritdoc Autolinker#newWindow
     */


    this.newWindow = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Object} truncate
     * @inheritdoc Autolinker#truncate
     */

    this.truncate = {}; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String} className
     * @inheritdoc Autolinker#className
     */

    this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    this.newWindow = cfg.newWindow || false;
    this.truncate = cfg.truncate || {};
    this.className = cfg.className || '';
  }
  /**
   * Generates the actual anchor (&lt;a&gt;) tag to use in place of the
   * matched text, via its `match` object.
   *
   * @param {Autolinker.match.Match} match The Match instance to generate an
   *   anchor tag from.
   * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.
   */


  AnchorTagBuilder.prototype.build = function (match) {
    return new html_tag_HtmlTag({
      tagName: 'a',
      attrs: this.createAttrs(match),
      innerHtml: this.processAnchorText(match.getAnchorText())
    });
  };
  /**
   * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)
   *   tag being generated.
   *
   * @protected
   * @param {Autolinker.match.Match} match The Match instance to generate an
   *   anchor tag from.
   * @return {Object} A key/value Object (map) of the anchor tag's attributes.
   */


  AnchorTagBuilder.prototype.createAttrs = function (match) {
    var attrs = {
      'href': match.getAnchorHref() // we'll always have the `href` attribute

    };
    var cssClass = this.createCssClass(match);

    if (cssClass) {
      attrs['class'] = cssClass;
    }

    if (this.newWindow) {
      attrs['target'] = "_blank";
      attrs['rel'] = "noopener noreferrer"; // Issue #149. See https://mathiasbynens.github.io/rel-noopener/
    }

    if (this.truncate) {
      if (this.truncate.length && this.truncate.length < match.getAnchorText().length) {
        attrs['title'] = match.getAnchorHref();
      }
    }

    return attrs;
  };
  /**
   * Creates the CSS class that will be used for a given anchor tag, based on
   * the `matchType` and the {@link #className} config.
   *
   * Example returns:
   *
   * - ""                                      // no {@link #className}
   * - "myLink myLink-url"                     // url match
   * - "myLink myLink-email"                   // email match
   * - "myLink myLink-phone"                   // phone match
   * - "myLink myLink-hashtag"                 // hashtag match
   * - "myLink myLink-mention myLink-twitter"  // mention match with Twitter service
   *
   * @protected
   * @param {Autolinker.match.Match} match The Match instance to generate an
   *   anchor tag from.
   * @return {String} The CSS class string for the link. Example return:
   *   "myLink myLink-url". If no {@link #className} was configured, returns
   *   an empty string.
   */


  AnchorTagBuilder.prototype.createCssClass = function (match) {
    var className = this.className;

    if (!className) {
      return "";
    } else {
      var returnClasses = [className],
          cssClassSuffixes = match.getCssClassSuffixes();

      for (var i = 0, len = cssClassSuffixes.length; i < len; i++) {
        returnClasses.push(className + '-' + cssClassSuffixes[i]);
      }

      return returnClasses.join(' ');
    }
  };
  /**
   * Processes the `anchorText` by truncating the text according to the
   * {@link #truncate} config.
   *
   * @private
   * @param {String} anchorText The anchor tag's text (i.e. what will be
   *   displayed).
   * @return {String} The processed `anchorText`.
   */


  AnchorTagBuilder.prototype.processAnchorText = function (anchorText) {
    anchorText = this.doTruncate(anchorText);
    return anchorText;
  };
  /**
   * Performs the truncation of the `anchorText` based on the {@link #truncate}
   * option. If the `anchorText` is longer than the length specified by the
   * {@link #truncate} option, the truncation is performed based on the
   * `location` property. See {@link #truncate} for details.
   *
   * @private
   * @param {String} anchorText The anchor tag's text (i.e. what will be
   *   displayed).
   * @return {String} The truncated anchor text.
   */


  AnchorTagBuilder.prototype.doTruncate = function (anchorText) {
    var truncate = this.truncate;
    if (!truncate || !truncate.length) return anchorText;
    var truncateLength = truncate.length,
        truncateLocation = truncate.location;

    if (truncateLocation === 'smart') {
      return truncateSmart(anchorText, truncateLength);
    } else if (truncateLocation === 'middle') {
      return truncateMiddle(anchorText, truncateLength);
    } else {
      return truncateEnd(anchorText, truncateLength);
    }
  };

  return AnchorTagBuilder;
}();


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/match.js
/**
 * @abstract
 * @class Autolinker.match.Match
 *
 * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a
 * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.
 *
 * For example:
 *
 *     var input = "...";  // string with URLs, Email Addresses, and Mentions (Twitter, Instagram, Soundcloud)
 *
 *     var linkedText = Autolinker.link( input, {
 *         replaceFn : function( match ) {
 *             console.log( "href = ", match.getAnchorHref() );
 *             console.log( "text = ", match.getAnchorText() );
 *
 *             switch( match.getType() ) {
 *                 case 'url' :
 *                     console.log( "url: ", match.getUrl() );
 *
 *                 case 'email' :
 *                     console.log( "email: ", match.getEmail() );
 *
 *                 case 'mention' :
 *                     console.log( "mention: ", match.getMention() );
 *             }
 *         }
 *     } );
 *
 * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.
 */
var Match =
/** @class */
function () {
  /**
   * @member Autolinker.match.Match
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */
  function Match(cfg) {
    /**
     * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)
     *
     * Reference to the AnchorTagBuilder instance to use to generate an anchor
     * tag for the Match.
     */
    this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator

    /**
     * @cfg {String} matchedText (required)
     *
     * The original text that was matched by the {@link Autolinker.matcher.Matcher}.
     */

    this.matchedText = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Number} offset (required)
     *
     * The offset of where the match was made in the input string.
     */

    this.offset = 0; // default value just to get the above doc comment in the ES5 output and documentation generator

    this.tagBuilder = cfg.tagBuilder;
    this.matchedText = cfg.matchedText;
    this.offset = cfg.offset;
  }
  /**
   * Returns the original text that was matched.
   *
   * @return {String}
   */


  Match.prototype.getMatchedText = function () {
    return this.matchedText;
  };
  /**
   * Sets the {@link #offset} of where the match was made in the input string.
   *
   * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,
   * and will therefore set an original offset that is relative to the HTML
   * text node itself. However, we want this offset to be relative to the full
   * HTML input string, and thus if using {@link Autolinker#parse} (rather
   * than calling a {@link Autolinker.matcher.Matcher} directly), then this
   * offset is corrected after the Matcher itself has done its job.
   *
   * @param {Number} offset
   */


  Match.prototype.setOffset = function (offset) {
    this.offset = offset;
  };
  /**
   * Returns the offset of where the match was made in the input string. This
   * is the 0-based index of the match.
   *
   * @return {Number}
   */


  Match.prototype.getOffset = function () {
    return this.offset;
  };
  /**
   * Returns the CSS class suffix(es) for this match.
   *
   * A CSS class suffix is appended to the {@link Autolinker#className} in
   * the {@link Autolinker.AnchorTagBuilder} when a match is translated into
   * an anchor tag.
   *
   * For example, if {@link Autolinker#className} was configured as 'myLink',
   * and this method returns `[ 'url' ]`, the final class name of the element
   * will become: 'myLink myLink-url'.
   *
   * The match may provide multiple CSS class suffixes to be appended to the
   * {@link Autolinker#className} in order to facilitate better styling
   * options for different match criteria. See {@link Autolinker.match.Mention}
   * for an example.
   *
   * By default, this method returns a single array with the match's
   * {@link #getType type} name, but may be overridden by subclasses.
   *
   * @return {String[]}
   */


  Match.prototype.getCssClassSuffixes = function () {
    return [this.getType()];
  };
  /**
   * Builds and returns an {@link Autolinker.HtmlTag} instance based on the
   * Match.
   *
   * This can be used to easily generate anchor tags from matches, and either
   * return their HTML string, or modify them before doing so.
   *
   * Example Usage:
   *
   *     var tag = match.buildTag();
   *     tag.addClass( 'cordova-link' );
   *     tag.setAttr( 'target', '_system' );
   *
   *     tag.toAnchorString();  // <a href="http://google.com" class="cordova-link" target="_system">Google</a>
   *
   * Example Usage in {@link Autolinker#replaceFn}:
   *
   *     var html = Autolinker.link( "Test google.com", {
   *         replaceFn : function( match ) {
   *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance
   *             tag.setAttr( 'rel', 'nofollow' );
   *
   *             return tag;
   *         }
   *     } );
   *
   *     // generated html:
   *     //   Test <a href="http://google.com" target="_blank" rel="nofollow">google.com</a>
   */


  Match.prototype.buildTag = function () {
    return this.tagBuilder.build(this);
  };

  return Match;
}();


// CONCATENATED MODULE: ./node_modules/tslib/tslib.es6.js
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var _extendStatics = function extendStatics(d, b) {
  _extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) {
      if (b.hasOwnProperty(p)) d[p] = b[p];
    }
  };

  return _extendStatics(d, b);
};

function __extends(d, b) {
  _extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var _assign = function __assign() {
  _assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }

    return t;
  };

  return _assign.apply(this, arguments);
};


function __rest(s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m) {
    if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
  }
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function next() {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }

  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/email-match.js


/**
 * @class Autolinker.match.Email
 * @extends Autolinker.match.Match
 *
 * Represents a Email match found in an input string which should be Autolinked.
 *
 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
 */

var email_match_EmailMatch =
/** @class */
function (_super) {
  __extends(EmailMatch, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */


  function EmailMatch(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {String} email (required)
     *
     * The email address that was matched.
     */


    _this.email = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    _this.email = cfg.email;
    return _this;
  }
  /**
   * Returns a string name for the type of match that this class represents.
   * For the case of EmailMatch, returns 'email'.
   *
   * @return {String}
   */


  EmailMatch.prototype.getType = function () {
    return 'email';
  };
  /**
   * Returns the email address that was matched.
   *
   * @return {String}
   */


  EmailMatch.prototype.getEmail = function () {
    return this.email;
  };
  /**
   * Returns the anchor href that should be generated for the match.
   *
   * @return {String}
   */


  EmailMatch.prototype.getAnchorHref = function () {
    return 'mailto:' + this.email;
  };
  /**
   * Returns the anchor text that should be generated for the match.
   *
   * @return {String}
   */


  EmailMatch.prototype.getAnchorText = function () {
    return this.email;
  };

  return EmailMatch;
}(Match);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/hashtag-match.js


/**
 * @class Autolinker.match.Hashtag
 * @extends Autolinker.match.Match
 *
 * Represents a Hashtag match found in an input string which should be
 * Autolinked.
 *
 * See this class's superclass ({@link Autolinker.match.Match}) for more
 * details.
 */

var hashtag_match_HashtagMatch =
/** @class */
function (_super) {
  __extends(HashtagMatch, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */


  function HashtagMatch(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {String} serviceName
     *
     * The service to point hashtag matches to. See {@link Autolinker#hashtag}
     * for available values.
     */


    _this.serviceName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String} hashtag (required)
     *
     * The HashtagMatch that was matched, without the '#'.
     */

    _this.hashtag = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    _this.serviceName = cfg.serviceName;
    _this.hashtag = cfg.hashtag;
    return _this;
  }
  /**
   * Returns a string name for the type of match that this class represents.
   * For the case of HashtagMatch, returns 'hashtag'.
   *
   * @return {String}
   */


  HashtagMatch.prototype.getType = function () {
    return 'hashtag';
  };
  /**
   * Returns the configured {@link #serviceName} to point the HashtagMatch to.
   * Ex: 'facebook', 'twitter'.
   *
   * @return {String}
   */


  HashtagMatch.prototype.getServiceName = function () {
    return this.serviceName;
  };
  /**
   * Returns the matched hashtag, without the '#' character.
   *
   * @return {String}
   */


  HashtagMatch.prototype.getHashtag = function () {
    return this.hashtag;
  };
  /**
   * Returns the anchor href that should be generated for the match.
   *
   * @return {String}
   */


  HashtagMatch.prototype.getAnchorHref = function () {
    var serviceName = this.serviceName,
        hashtag = this.hashtag;

    switch (serviceName) {
      case 'twitter':
        return 'https://twitter.com/hashtag/' + hashtag;

      case 'facebook':
        return 'https://www.facebook.com/hashtag/' + hashtag;

      case 'instagram':
        return 'https://instagram.com/explore/tags/' + hashtag;

      default:
        // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.
        throw new Error('Unknown service name to point hashtag to: ' + serviceName);
    }
  };
  /**
   * Returns the anchor text that should be generated for the match.
   *
   * @return {String}
   */


  HashtagMatch.prototype.getAnchorText = function () {
    return '#' + this.hashtag;
  };

  return HashtagMatch;
}(Match);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/mention-match.js


/**
 * @class Autolinker.match.Mention
 * @extends Autolinker.match.Match
 *
 * Represents a Mention match found in an input string which should be Autolinked.
 *
 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
 */

var mention_match_MentionMatch =
/** @class */
function (_super) {
  __extends(MentionMatch, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */


  function MentionMatch(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {String} serviceName
     *
     * The service to point mention matches to. See {@link Autolinker#mention}
     * for available values.
     */


    _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String} mention (required)
     *
     * The Mention that was matched, without the '@' character.
     */

    _this.mention = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    _this.mention = cfg.mention;
    _this.serviceName = cfg.serviceName;
    return _this;
  }
  /**
   * Returns a string name for the type of match that this class represents.
   * For the case of MentionMatch, returns 'mention'.
   *
   * @return {String}
   */


  MentionMatch.prototype.getType = function () {
    return 'mention';
  };
  /**
   * Returns the mention, without the '@' character.
   *
   * @return {String}
   */


  MentionMatch.prototype.getMention = function () {
    return this.mention;
  };
  /**
   * Returns the configured {@link #serviceName} to point the mention to.
   * Ex: 'instagram', 'twitter', 'soundcloud'.
   *
   * @return {String}
   */


  MentionMatch.prototype.getServiceName = function () {
    return this.serviceName;
  };
  /**
   * Returns the anchor href that should be generated for the match.
   *
   * @return {String}
   */


  MentionMatch.prototype.getAnchorHref = function () {
    switch (this.serviceName) {
      case 'twitter':
        return 'https://twitter.com/' + this.mention;

      case 'instagram':
        return 'https://instagram.com/' + this.mention;

      case 'soundcloud':
        return 'https://soundcloud.com/' + this.mention;

      default:
        // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.
        throw new Error('Unknown service name to point mention to: ' + this.serviceName);
    }
  };
  /**
   * Returns the anchor text that should be generated for the match.
   *
   * @return {String}
   */


  MentionMatch.prototype.getAnchorText = function () {
    return '@' + this.mention;
  };
  /**
   * Returns the CSS class suffixes that should be used on a tag built with
   * the match. See {@link Autolinker.match.Match#getCssClassSuffixes} for
   * details.
   *
   * @return {String[]}
   */


  MentionMatch.prototype.getCssClassSuffixes = function () {
    var cssClassSuffixes = _super.prototype.getCssClassSuffixes.call(this),
        serviceName = this.getServiceName();

    if (serviceName) {
      cssClassSuffixes.push(serviceName);
    }

    return cssClassSuffixes;
  };

  return MentionMatch;
}(Match);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/phone-match.js


/**
 * @class Autolinker.match.Phone
 * @extends Autolinker.match.Match
 *
 * Represents a Phone number match found in an input string which should be
 * Autolinked.
 *
 * See this class's superclass ({@link Autolinker.match.Match}) for more
 * details.
 */

var phone_match_PhoneMatch =
/** @class */
function (_super) {
  __extends(PhoneMatch, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */


  function PhoneMatch(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @protected
     * @property {String} number (required)
     *
     * The phone number that was matched, without any delimiter characters.
     *
     * Note: This is a string to allow for prefixed 0's.
     */


    _this.number = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @protected
     * @property  {Boolean} plusSign (required)
     *
     * `true` if the matched phone number started with a '+' sign. We'll include
     * it in the `tel:` URL if so, as this is needed for international numbers.
     *
     * Ex: '+1 (123) 456 7879'
     */

    _this.plusSign = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    _this.number = cfg.number;
    _this.plusSign = cfg.plusSign;
    return _this;
  }
  /**
   * Returns a string name for the type of match that this class represents.
   * For the case of PhoneMatch, returns 'phone'.
   *
   * @return {String}
   */


  PhoneMatch.prototype.getType = function () {
    return 'phone';
  };
  /**
   * Returns the phone number that was matched as a string, without any
   * delimiter characters.
   *
   * Note: This is a string to allow for prefixed 0's.
   *
   * @return {String}
   */


  PhoneMatch.prototype.getPhoneNumber = function () {
    return this.number;
  };
  /**
   * Alias of {@link #getPhoneNumber}, returns the phone number that was
   * matched as a string, without any delimiter characters.
   *
   * Note: This is a string to allow for prefixed 0's.
   *
   * @return {String}
   */


  PhoneMatch.prototype.getNumber = function () {
    return this.getPhoneNumber();
  };
  /**
   * Returns the anchor href that should be generated for the match.
   *
   * @return {String}
   */


  PhoneMatch.prototype.getAnchorHref = function () {
    return 'tel:' + (this.plusSign ? '+' : '') + this.number;
  };
  /**
   * Returns the anchor text that should be generated for the match.
   *
   * @return {String}
   */


  PhoneMatch.prototype.getAnchorText = function () {
    return this.matchedText;
  };

  return PhoneMatch;
}(Match);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/url-match.js


/**
 * @class Autolinker.match.Url
 * @extends Autolinker.match.Match
 *
 * Represents a Url match found in an input string which should be Autolinked.
 *
 * See this class's superclass ({@link Autolinker.match.Match}) for more details.
 */

var url_match_UrlMatch =
/** @class */
function (_super) {
  __extends(UrlMatch, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match
   *   instance, specified in an Object (map).
   */


  function UrlMatch(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {String} url (required)
     *
     * The url that was matched.
     */


    _this.url = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {"scheme"/"www"/"tld"} urlMatchType (required)
     *
     * The type of URL match that this class represents. This helps to determine
     * if the match was made in the original text with a prefixed scheme (ex:
     * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or
     * was matched by a known top-level domain (ex: 'google.com').
     */

    _this.urlMatchType = 'scheme'; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} protocolUrlMatch (required)
     *
     * `true` if the URL is a match which already has a protocol (i.e.
     * 'http://'), `false` if the match was from a 'www' or known TLD match.
     */

    _this.protocolUrlMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} protocolRelativeMatch (required)
     *
     * `true` if the URL is a protocol-relative match. A protocol-relative match
     * is a URL that starts with '//', and will be either http:// or https://
     * based on the protocol that the site is loaded under.
     */

    _this.protocolRelativeMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Object} stripPrefix (required)
     *
     * The Object form of {@link Autolinker#cfg-stripPrefix}.
     */

    _this.stripPrefix = {
      scheme: true,
      www: true
    }; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} stripTrailingSlash (required)
     * @inheritdoc Autolinker#cfg-stripTrailingSlash
     */

    _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} decodePercentEncoding (required)
     * @inheritdoc Autolinker#cfg-decodePercentEncoding
     */

    _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @private
     * @property {RegExp} schemePrefixRegex
     *
     * A regular expression used to remove the 'http://' or 'https://' from
     * URLs.
     */

    _this.schemePrefixRegex = /^(https?:\/\/)?/i;
    /**
     * @private
     * @property {RegExp} wwwPrefixRegex
     *
     * A regular expression used to remove the 'www.' from URLs.
     */

    _this.wwwPrefixRegex = /^(https?:\/\/)?(www\.)?/i;
    /**
     * @private
     * @property {RegExp} protocolRelativeRegex
     *
     * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes
     * of {@link #getAnchorText}. A protocol-relative URL is, for example, "//yahoo.com"
     */

    _this.protocolRelativeRegex = /^\/\//;
    /**
     * @private
     * @property {Boolean} protocolPrepended
     *
     * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the
     * {@link #url} did not have a protocol)
     */

    _this.protocolPrepended = false;
    _this.urlMatchType = cfg.urlMatchType;
    _this.url = cfg.url;
    _this.protocolUrlMatch = cfg.protocolUrlMatch;
    _this.protocolRelativeMatch = cfg.protocolRelativeMatch;
    _this.stripPrefix = cfg.stripPrefix;
    _this.stripTrailingSlash = cfg.stripTrailingSlash;
    _this.decodePercentEncoding = cfg.decodePercentEncoding;
    return _this;
  }
  /**
   * Returns a string name for the type of match that this class represents.
   * For the case of UrlMatch, returns 'url'.
   *
   * @return {String}
   */


  UrlMatch.prototype.getType = function () {
    return 'url';
  };
  /**
   * Returns a string name for the type of URL match that this class
   * represents.
   *
   * This helps to determine if the match was made in the original text with a
   * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:
   * 'www.google.com'), or was matched by a known top-level domain (ex:
   * 'google.com').
   *
   * @return {"scheme"/"www"/"tld"}
   */


  UrlMatch.prototype.getUrlMatchType = function () {
    return this.urlMatchType;
  };
  /**
   * Returns the url that was matched, assuming the protocol to be 'http://' if the original
   * match was missing a protocol.
   *
   * @return {String}
   */


  UrlMatch.prototype.getUrl = function () {
    var url = this.url; // if the url string doesn't begin with a protocol, assume 'http://'

    if (!this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended) {
      url = this.url = 'http://' + url;
      this.protocolPrepended = true;
    }

    return url;
  };
  /**
   * Returns the anchor href that should be generated for the match.
   *
   * @return {String}
   */


  UrlMatch.prototype.getAnchorHref = function () {
    var url = this.getUrl();
    return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html
  };
  /**
   * Returns the anchor text that should be generated for the match.
   *
   * @return {String}
   */


  UrlMatch.prototype.getAnchorText = function () {
    var anchorText = this.getMatchedText();

    if (this.protocolRelativeMatch) {
      // Strip off any protocol-relative '//' from the anchor text
      anchorText = this.stripProtocolRelativePrefix(anchorText);
    }

    if (this.stripPrefix.scheme) {
      anchorText = this.stripSchemePrefix(anchorText);
    }

    if (this.stripPrefix.www) {
      anchorText = this.stripWwwPrefix(anchorText);
    }

    if (this.stripTrailingSlash) {
      anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one
    }

    if (this.decodePercentEncoding) {
      anchorText = this.removePercentEncoding(anchorText);
    }

    return anchorText;
  }; // ---------------------------------------
  // Utility Functionality

  /**
   * Strips the scheme prefix (such as "http://" or "https://") from the given
   * `url`.
   *
   * @private
   * @param {String} url The text of the anchor that is being generated, for
   *   which to strip off the url scheme.
   * @return {String} The `url`, with the scheme stripped.
   */


  UrlMatch.prototype.stripSchemePrefix = function (url) {
    return url.replace(this.schemePrefixRegex, '');
  };
  /**
   * Strips the 'www' prefix from the given `url`.
   *
   * @private
   * @param {String} url The text of the anchor that is being generated, for
   *   which to strip off the 'www' if it exists.
   * @return {String} The `url`, with the 'www' stripped.
   */


  UrlMatch.prototype.stripWwwPrefix = function (url) {
    return url.replace(this.wwwPrefixRegex, '$1'); // leave any scheme ($1), it one exists
  };
  /**
   * Strips any protocol-relative '//' from the anchor text.
   *
   * @private
   * @param {String} text The text of the anchor that is being generated, for which to strip off the
   *   protocol-relative prefix (such as stripping off "//")
   * @return {String} The `anchorText`, with the protocol-relative prefix stripped.
   */


  UrlMatch.prototype.stripProtocolRelativePrefix = function (text) {
    return text.replace(this.protocolRelativeRegex, '');
  };
  /**
   * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.
   *
   * @private
   * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing
   *   slash ('/') that may exist.
   * @return {String} The `anchorText`, with the trailing slash removed.
   */


  UrlMatch.prototype.removeTrailingSlash = function (anchorText) {
    if (anchorText.charAt(anchorText.length - 1) === '/') {
      anchorText = anchorText.slice(0, -1);
    }

    return anchorText;
  };
  /**
   * Decodes percent-encoded characters from the given `anchorText`, in
   * preparation for the text to be displayed.
   *
   * @private
   * @param {String} anchorText The text of the anchor that is being
   *   generated, for which to decode any percent-encoded characters.
   * @return {String} The `anchorText`, with the percent-encoded characters
   *   decoded.
   */


  UrlMatch.prototype.removePercentEncoding = function (anchorText) {
    // First, convert a few of the known % encodings to the corresponding
    // HTML entities that could accidentally be interpretted as special
    // HTML characters
    var preProcessedEntityAnchorText = anchorText.replace(/%22/gi, '&quot;') // " char
    .replace(/%26/gi, '&amp;') // & char
    .replace(/%27/gi, '&#39;') // ' char
    .replace(/%3C/gi, '&lt;') // < char
    .replace(/%3E/gi, '&gt;'); // > char

    try {
      // Now attempt to decode the rest of the anchor text
      return decodeURIComponent(preProcessedEntityAnchorText);
    } catch (e) {
      // Invalid % escape sequence in the anchor text
      return preProcessedEntityAnchorText;
    }
  };

  return UrlMatch;
}(Match);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/matcher.js
/**
 * @abstract
 * @class Autolinker.matcher.Matcher
 *
 * An abstract class and interface for individual matchers to find matches in
 * an input string with linkified versions of them.
 *
 * Note that Matchers do not take HTML into account - they must be fed the text
 * nodes of any HTML string, which is handled by {@link Autolinker#parse}.
 */
var Matcher =
/** @class */
function () {
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Matcher
   *   instance, specified in an Object (map).
   */
  function Matcher(cfg) {
    /**
     * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)
     *
     * Reference to the AnchorTagBuilder instance to use to generate HTML tags
     * for {@link Autolinker.match.Match Matches}.
     */
    this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator

    this.tagBuilder = cfg.tagBuilder;
  }

  return Matcher;
}();


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/regex-lib.js
/*
 * This file builds and stores a library of the common regular expressions used
 * by the Autolinker utility.
 *
 * Other regular expressions may exist ad-hoc, but these are generally the
 * regular expressions that are shared between source files.
 */

/**
 * Regular expression to match upper and lowercase ASCII letters
 */
var letterRe = /[A-Za-z]/;
/**
 * Regular expression to match ASCII digits
 */

var digitRe = /[\d]/;
/**
 * Regular expression to match everything *except* ASCII digits
 */

var nonDigitRe = /[\D]/;
/**
 * Regular expression to match whitespace
 */

var whitespaceRe = /\s/;
/**
 * Regular expression to match quote characters
 */

var quoteRe = /['"]/;
/**
 * Regular expression to match the range of ASCII control characters (0-31), and
 * the backspace char (127)
 */

var controlCharsRe = /[\x00-\x1F\x7F]/;
/**
 * The string form of a regular expression that would match all of the
 * alphabetic ("letter") chars in the unicode character set when placed in a
 * RegExp character class (`[]`). This includes all international alphabetic
 * characters.
 *
 * These would be the characters matched by unicode regex engines `\p{L}`
 * escape ("all letters").
 *
 * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)
 * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Letter'
 *   regex's bmp
 *
 * VERY IMPORTANT: This set of characters is defined inside of a Regular
 *   Expression literal rather than a string literal to prevent UglifyJS from
 *   compressing the unicode escape sequences into their actual unicode
 *   characters. If Uglify compresses these into the unicode characters
 *   themselves, this results in the error "Range out of order in character
 *   class" when these characters are used inside of a Regular Expression
 *   character class (`[]`). See usages of this const. Alternatively, we can set
 *   the UglifyJS option `ascii_only` to true for the build, but that doesn't
 *   help others who are pulling in Autolinker into their own build and running
 *   UglifyJS themselves.
 */

var alphaCharsStr = /A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC/.source; // see note in above variable description

/**
 * The string form of a regular expression that would match all emoji characters
 * Based on the emoji regex defined in this article: https://thekevinscott.com/emojis-in-javascript/
 */

var emojiStr = /\u2700-\u27bf\udde6-\uddff\ud800-\udbff\udc00-\udfff\ufe0e\ufe0f\u0300-\u036f\ufe20-\ufe23\u20d0-\u20f0\ud83c\udffb-\udfff\u200d\u3299\u3297\u303d\u3030\u24c2\ud83c\udd70-\udd71\udd7e-\udd7f\udd8e\udd91-\udd9a\udde6-\uddff\ude01-\ude02\ude1a\ude2f\ude32-\ude3a\ude50-\ude51\u203c\u2049\u25aa-\u25ab\u25b6\u25c0\u25fb-\u25fe\u00a9\u00ae\u2122\u2139\udc04\u2600-\u26FF\u2b05\u2b06\u2b07\u2b1b\u2b1c\u2b50\u2b55\u231a\u231b\u2328\u23cf\u23e9-\u23f3\u23f8-\u23fa\udccf\u2935\u2934\u2190-\u21ff/.source;
/**
 * The string form of a regular expression that would match all of the
 * combining mark characters in the unicode character set when placed in a
 * RegExp character class (`[]`).
 *
 * These would be the characters matched by unicode regex engines `\p{M}`
 * escape ("all marks").
 *
 * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)
 * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Mark'
 *   regex's bmp
 *
 * VERY IMPORTANT: This set of characters is defined inside of a Regular
 *   Expression literal rather than a string literal to prevent UglifyJS from
 *   compressing the unicode escape sequences into their actual unicode
 *   characters. If Uglify compresses these into the unicode characters
 *   themselves, this results in the error "Range out of order in character
 *   class" when these characters are used inside of a Regular Expression
 *   character class (`[]`). See usages of this const. Alternatively, we can set
 *   the UglifyJS option `ascii_only` to true for the build, but that doesn't
 *   help others who are pulling in Autolinker into their own build and running
 *   UglifyJS themselves.
 */

var marksStr = /\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D4-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u192B\u1930-\u193B\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFB-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C5\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F/.source; // see note in above variable description

/**
 * The string form of a regular expression that would match all of the
 * alphabetic ("letter") chars, emoji, and combining marks in the unicode character set
 * when placed in a RegExp character class (`[]`). This includes all
 * international alphabetic characters.
 *
 * These would be the characters matched by unicode regex engines `\p{L}\p{M}`
 * escapes and emoji characters.
 */

var alphaCharsAndMarksStr = alphaCharsStr + emojiStr + marksStr;
/**
 * The string form of a regular expression that would match all of the
 * decimal number chars in the unicode character set when placed in a RegExp
 * character class (`[]`).
 *
 * These would be the characters matched by unicode regex engines `\p{Nd}`
 * escape ("all decimal numbers")
 *
 * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)
 * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Decimal_Number'
 *   regex's bmp
 *
 * VERY IMPORTANT: This set of characters is defined inside of a Regular
 *   Expression literal rather than a string literal to prevent UglifyJS from
 *   compressing the unicode escape sequences into their actual unicode
 *   characters. If Uglify compresses these into the unicode characters
 *   themselves, this results in the error "Range out of order in character
 *   class" when these characters are used inside of a Regular Expression
 *   character class (`[]`). See usages of this const. Alternatively, we can set
 *   the UglifyJS option `ascii_only` to true for the build, but that doesn't
 *   help others who are pulling in Autolinker into their own build and running
 *   UglifyJS themselves.
 */

var decimalNumbersStr = /0-9\u0660-\u0669\u06F0-\u06F9\u07C0-\u07C9\u0966-\u096F\u09E6-\u09EF\u0A66-\u0A6F\u0AE6-\u0AEF\u0B66-\u0B6F\u0BE6-\u0BEF\u0C66-\u0C6F\u0CE6-\u0CEF\u0D66-\u0D6F\u0DE6-\u0DEF\u0E50-\u0E59\u0ED0-\u0ED9\u0F20-\u0F29\u1040-\u1049\u1090-\u1099\u17E0-\u17E9\u1810-\u1819\u1946-\u194F\u19D0-\u19D9\u1A80-\u1A89\u1A90-\u1A99\u1B50-\u1B59\u1BB0-\u1BB9\u1C40-\u1C49\u1C50-\u1C59\uA620-\uA629\uA8D0-\uA8D9\uA900-\uA909\uA9D0-\uA9D9\uA9F0-\uA9F9\uAA50-\uAA59\uABF0-\uABF9\uFF10-\uFF19/.source; // see note in above variable description

/**
 * The string form of a regular expression that would match all of the
 * letters and decimal number chars in the unicode character set when placed in
 * a RegExp character class (`[]`).
 *
 * These would be the characters matched by unicode regex engines
 * `[\p{L}\p{Nd}]` escape ("all letters and decimal numbers")
 */

var alphaNumericCharsStr = alphaCharsAndMarksStr + decimalNumbersStr;
/**
 * The string form of a regular expression that would match all of the
 * letters, combining marks, and decimal number chars in the unicode character
 * set when placed in a RegExp character class (`[]`).
 *
 * These would be the characters matched by unicode regex engines
 * `[\p{L}\p{M}\p{Nd}]` escape ("all letters, combining marks, and decimal
 * numbers")
 */

var alphaNumericAndMarksCharsStr = alphaCharsAndMarksStr + decimalNumbersStr; // Simplified IP regular expression

var ipStr = '(?:[' + decimalNumbersStr + ']{1,3}\\.){3}[' + decimalNumbersStr + ']{1,3}'; // Protected domain label which do not allow "-" character on the beginning and the end of a single label

var domainLabelStr = '[' + alphaNumericAndMarksCharsStr + '](?:[' + alphaNumericAndMarksCharsStr + '\\-]{0,61}[' + alphaNumericAndMarksCharsStr + '])?';

var getDomainLabelStr = function getDomainLabelStr(group) {
  return '(?=(' + domainLabelStr + '))\\' + group;
};
/**
 * A function to match domain names of a URL or email address.
 * Ex: 'google', 'yahoo', 'some-other-company', etc.
 */


var getDomainNameStr = function getDomainNameStr(group) {
  return '(?:' + getDomainLabelStr(group) + '(?:\\.' + getDomainLabelStr(group + 1) + '){0,126}|' + ipStr + ')';
};
/**
 * A regular expression to match domain names of a URL or email address.
 * Ex: 'google', 'yahoo', 'some-other-company', etc.
 */

var domainNameRegex = new RegExp('[' + alphaNumericAndMarksCharsStr + '.\\-]*[' + alphaNumericAndMarksCharsStr + '\\-]');
/**
 * A regular expression that is simply the character class of the characters
 * that may be used in a domain name, minus the '-' or '.'
 */

var domainNameCharRegex = new RegExp("[" + alphaNumericAndMarksCharsStr + "]");
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/tld-regex.js
// NOTE: THIS IS A GENERATED FILE
// To update with the latest TLD list, run `npm run update-tld-regex` or `yarn update-tld-regex` (depending on which you have installed)
var tldRegex = /(?:xn--vermgensberatung-pwb|xn--vermgensberater-ctb|xn--clchc0ea0b2g2a9gcd|xn--w4r85el8fhu5dnra|northwesternmutual|travelersinsurance|vermögensberatung|xn--3oq18vl8pn36a|xn--5su34j936bgsg|xn--bck1b9a5dre4c|xn--mgbai9azgqp6j|xn--mgberp4a5d4ar|xn--xkc2dl3a5ee0h|vermögensberater|xn--fzys8d69uvgm|xn--mgba7c0bbn0a|xn--xkc2al3hye2a|americanexpress|kerryproperties|sandvikcoromant|xn--i1b6b1a6a2e|xn--kcrx77d1x4a|xn--lgbbat1ad8j|xn--mgba3a4f16a|xn--mgbaakc7dvf|xn--mgbc0a9azcg|xn--nqv7fs00ema|afamilycompany|americanfamily|bananarepublic|cancerresearch|cookingchannel|kerrylogistics|weatherchannel|xn--54b7fta0cc|xn--6qq986b3xl|xn--80aqecdr1a|xn--b4w605ferd|xn--fiq228c5hs|xn--h2breg3eve|xn--jlq61u9w7b|xn--mgba3a3ejt|xn--mgbaam7a8h|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a71e|xn--mgbca7dzdo|xn--mgbi4ecexp|xn--mgbx4cd0ab|xn--rvc1e0am3e|international|lifeinsurance|spreadbetting|travelchannel|wolterskluwer|xn--eckvdtc9d|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--h2brj9c8c|xn--tiq49xqyj|xn--yfro4i67o|xn--ygbi2ammx|construction|lplfinancial|scholarships|versicherung|xn--3e0b707e|xn--45br5cyl|xn--80adxhks|xn--80asehdb|xn--8y0a063a|xn--gckr3f0f|xn--mgb9awbf|xn--mgbab2bd|xn--mgbgu82a|xn--mgbpl2fh|xn--mgbt3dhd|xn--mk1bu44c|xn--ngbc5azd|xn--ngbe9e0a|xn--ogbpf8fl|xn--qcka1pmc|accountants|barclaycard|blackfriday|blockbuster|bridgestone|calvinklein|contractors|creditunion|engineering|enterprises|foodnetwork|investments|kerryhotels|lamborghini|motorcycles|olayangroup|photography|playstation|productions|progressive|redumbrella|rightathome|williamhill|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--3bst00m|xn--3ds443g|xn--3hcrj9c|xn--42c2d9a|xn--45brj9c|xn--55qw42g|xn--6frz82g|xn--80ao21a|xn--9krt00a|xn--cck2b3b|xn--czr694b|xn--d1acj3b|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fjq720a|xn--flw351e|xn--g2xx48c|xn--gecrj9c|xn--gk3at1e|xn--h2brj9c|xn--hxt814e|xn--imr513n|xn--j6w193g|xn--jvr189m|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--mgbbh1a|xn--mgbtx2b|xn--mix891f|xn--nyqy26a|xn--otu796d|xn--pbt977c|xn--pgbs0dh|xn--q9jyb4c|xn--rhqv96g|xn--rovu88b|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--vuq861b|xn--w4rs40l|xn--xhq521b|xn--zfr164b|சிங்கப்பூர்|accountant|apartments|associates|basketball|bnpparibas|boehringer|capitalone|consulting|creditcard|cuisinella|eurovision|extraspace|foundation|healthcare|immobilien|industries|management|mitsubishi|nationwide|newholland|nextdirect|onyourside|properties|protection|prudential|realestate|republican|restaurant|schaeffler|swiftcover|tatamotors|technology|telefonica|university|vistaprint|vlaanderen|volkswagen|xn--30rr7y|xn--3pxu8k|xn--45q11c|xn--4gbrim|xn--55qx5d|xn--5tzm5g|xn--80aswg|xn--90a3ac|xn--9dbq2a|xn--9et52u|xn--c2br7g|xn--cg4bki|xn--czrs0t|xn--czru2d|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--io0a7i|xn--kput3i|xn--mxtq1m|xn--o3cw4h|xn--pssy2u|xn--unup4y|xn--wgbh1c|xn--wgbl6a|xn--y9a3aq|accenture|alfaromeo|allfinanz|amsterdam|analytics|aquarelle|barcelona|bloomberg|christmas|community|directory|education|equipment|fairwinds|financial|firestone|fresenius|frontdoor|fujixerox|furniture|goldpoint|hisamitsu|homedepot|homegoods|homesense|honeywell|institute|insurance|kuokgroup|ladbrokes|lancaster|landrover|lifestyle|marketing|marshalls|melbourne|microsoft|panasonic|passagens|pramerica|richardli|scjohnson|shangrila|solutions|statebank|statefarm|stockholm|travelers|vacations|xn--90ais|xn--c1avg|xn--d1alf|xn--e1a4c|xn--fhbei|xn--j1aef|xn--j1amh|xn--l1acc|xn--ngbrx|xn--nqv7f|xn--p1acf|xn--tckwe|xn--vhquv|yodobashi|abudhabi|airforce|allstate|attorney|barclays|barefoot|bargains|baseball|boutique|bradesco|broadway|brussels|budapest|builders|business|capetown|catering|catholic|chrysler|cipriani|cityeats|cleaning|clinique|clothing|commbank|computer|delivery|deloitte|democrat|diamonds|discount|discover|download|engineer|ericsson|esurance|etisalat|everbank|exchange|feedback|fidelity|firmdale|football|frontier|goodyear|grainger|graphics|guardian|hdfcbank|helsinki|holdings|hospital|infiniti|ipiranga|istanbul|jpmorgan|lighting|lundbeck|marriott|maserati|mckinsey|memorial|merckmsd|mortgage|movistar|observer|partners|pharmacy|pictures|plumbing|property|redstone|reliance|saarland|samsclub|security|services|shopping|showtime|softbank|software|stcgroup|supplies|symantec|training|uconnect|vanguard|ventures|verisign|woodside|xn--90ae|xn--node|xn--p1ai|xn--qxam|yokohama|السعودية|abogado|academy|agakhan|alibaba|android|athleta|auction|audible|auspost|avianca|banamex|bauhaus|bentley|bestbuy|booking|brother|bugatti|capital|caravan|careers|cartier|channel|charity|chintai|citadel|clubmed|college|cologne|comcast|company|compare|contact|cooking|corsica|country|coupons|courses|cricket|cruises|dentist|digital|domains|exposed|express|farmers|fashion|ferrari|ferrero|finance|fishing|fitness|flights|florist|flowers|forsale|frogans|fujitsu|gallery|genting|godaddy|grocery|guitars|hamburg|hangout|hitachi|holiday|hosting|hoteles|hotmail|hyundai|iselect|ismaili|jewelry|juniper|kitchen|komatsu|lacaixa|lancome|lanxess|lasalle|latrobe|leclerc|liaison|limited|lincoln|markets|metlife|monster|netbank|netflix|network|neustar|okinawa|oldnavy|organic|origins|philips|pioneer|politie|realtor|recipes|rentals|reviews|rexroth|samsung|sandvik|schmidt|schwarz|science|shiksha|shriram|singles|staples|starhub|storage|support|surgery|systems|temasek|theater|theatre|tickets|tiffany|toshiba|trading|walmart|wanggou|watches|weather|website|wedding|whoswho|windows|winners|xfinity|yamaxun|youtube|zuerich|католик|اتصالات|الجزائر|العليان|پاکستان|كاثوليك|موبايلي|இந்தியா|abarth|abbott|abbvie|active|africa|agency|airbus|airtel|alipay|alsace|alstom|anquan|aramco|author|bayern|beauty|berlin|bharti|blanco|bostik|boston|broker|camera|career|caseih|casino|center|chanel|chrome|church|circle|claims|clinic|coffee|comsec|condos|coupon|credit|cruise|dating|datsun|dealer|degree|dental|design|direct|doctor|dunlop|dupont|durban|emerck|energy|estate|events|expert|family|flickr|futbol|gallup|garden|george|giving|global|google|gratis|health|hermes|hiphop|hockey|hotels|hughes|imamat|insure|intuit|jaguar|joburg|juegos|kaufen|kinder|kindle|kosher|lancia|latino|lawyer|lefrak|living|locker|london|luxury|madrid|maison|makeup|market|mattel|mobile|mobily|monash|mormon|moscow|museum|mutual|nagoya|natura|nissan|nissay|norton|nowruz|office|olayan|online|oracle|orange|otsuka|pfizer|photos|physio|piaget|pictet|quebec|racing|realty|reisen|repair|report|review|rocher|rogers|ryukyu|safety|sakura|sanofi|school|schule|search|secure|select|shouji|soccer|social|stream|studio|supply|suzuki|swatch|sydney|taipei|taobao|target|tattoo|tennis|tienda|tjmaxx|tkmaxx|toyota|travel|unicom|viajes|viking|villas|virgin|vision|voting|voyage|vuelos|walter|warman|webcam|xihuan|yachts|yandex|zappos|москва|онлайн|ابوظبي|ارامكو|الاردن|المغرب|امارات|فلسطين|مليسيا|भारतम्|இலங்கை|ファッション|actor|adult|aetna|amfam|amica|apple|archi|audio|autos|azure|baidu|beats|bible|bingo|black|boats|bosch|build|canon|cards|chase|cheap|cisco|citic|click|cloud|coach|codes|crown|cymru|dabur|dance|deals|delta|dodge|drive|dubai|earth|edeka|email|epost|epson|faith|fedex|final|forex|forum|gallo|games|gifts|gives|glade|glass|globo|gmail|green|gripe|group|gucci|guide|homes|honda|horse|house|hyatt|ikano|intel|irish|iveco|jetzt|koeln|kyoto|lamer|lease|legal|lexus|lilly|linde|lipsy|lixil|loans|locus|lotte|lotto|lupin|macys|mango|media|miami|money|mopar|movie|nadex|nexus|nikon|ninja|nokia|nowtv|omega|osaka|paris|parts|party|phone|photo|pizza|place|poker|praxi|press|prime|promo|quest|radio|rehab|reise|ricoh|rocks|rodeo|rugby|salon|sener|seven|sharp|shell|shoes|skype|sling|smart|smile|solar|space|sport|stada|store|study|style|sucks|swiss|tatar|tires|tirol|tmall|today|tokyo|tools|toray|total|tours|trade|trust|tunes|tushu|ubank|vegas|video|vodka|volvo|wales|watch|weber|weibo|works|world|xerox|yahoo|zippo|ایران|بازار|بھارت|سودان|سورية|همراه|भारोत|संगठन|বাংলা|భారత్|ഭാരതം|嘉里大酒店|aarp|able|adac|aero|aigo|akdn|ally|amex|arab|army|arpa|arte|asda|asia|audi|auto|baby|band|bank|bbva|beer|best|bike|bing|blog|blue|bofa|bond|book|buzz|cafe|call|camp|care|cars|casa|case|cash|cbre|cern|chat|citi|city|club|cool|coop|cyou|data|date|dclk|deal|dell|desi|diet|dish|docs|doha|duck|duns|dvag|erni|fage|fail|fans|farm|fast|fiat|fido|film|fire|fish|flir|food|ford|free|fund|game|gbiz|gent|ggee|gift|gmbh|gold|golf|goog|guge|guru|hair|haus|hdfc|help|here|hgtv|host|hsbc|icbc|ieee|imdb|immo|info|itau|java|jeep|jobs|jprs|kddi|kiwi|kpmg|kred|land|lego|lgbt|lidl|life|like|limo|link|live|loan|loft|love|ltda|luxe|maif|meet|meme|menu|mini|mint|mobi|moda|moto|name|navy|news|next|nico|nike|ollo|open|page|pars|pccw|pics|ping|pink|play|plus|pohl|porn|post|prod|prof|qpon|raid|read|reit|rent|rest|rich|rmit|room|rsvp|ruhr|safe|sale|sarl|save|saxo|scor|scot|seat|seek|sexy|shaw|shia|shop|show|silk|sina|site|skin|sncf|sohu|song|sony|spot|star|surf|talk|taxi|team|tech|teva|tiaa|tips|town|toys|tube|vana|visa|viva|vivo|vote|voto|wang|weir|wien|wiki|wine|work|xbox|yoga|zara|zero|zone|дети|сайт|بارت|بيتك|ڀارت|تونس|شبكة|عراق|عمان|موقع|भारत|ভারত|ভাৰত|ਭਾਰਤ|ભારત|ଭାରତ|ಭಾರತ|ලංකා|グーグル|クラウド|ポイント|大众汽车|组织机构|電訊盈科|香格里拉|aaa|abb|abc|aco|ads|aeg|afl|aig|anz|aol|app|art|aws|axa|bar|bbc|bbt|bcg|bcn|bet|bid|bio|biz|bms|bmw|bnl|bom|boo|bot|box|buy|bzh|cab|cal|cam|car|cat|cba|cbn|cbs|ceb|ceo|cfa|cfd|com|crs|csc|dad|day|dds|dev|dhl|diy|dnp|dog|dot|dtv|dvr|eat|eco|edu|esq|eus|fan|fit|fly|foo|fox|frl|ftr|fun|fyi|gal|gap|gdn|gea|gle|gmo|gmx|goo|gop|got|gov|hbo|hiv|hkt|hot|how|ibm|ice|icu|ifm|inc|ing|ink|int|ist|itv|jcb|jcp|jio|jll|jmp|jnj|jot|joy|kfh|kia|kim|kpn|krd|lat|law|lds|llc|lol|lpl|ltd|man|map|mba|med|men|mil|mit|mlb|mls|mma|moe|moi|mom|mov|msd|mtn|mtr|nab|nba|nec|net|new|nfl|ngo|nhk|now|nra|nrw|ntt|nyc|obi|off|one|ong|onl|ooo|org|ott|ovh|pay|pet|phd|pid|pin|pnc|pro|pru|pub|pwc|qvc|red|ren|ril|rio|rip|run|rwe|sap|sas|sbi|sbs|sca|scb|ses|sew|sex|sfr|ski|sky|soy|srl|srt|stc|tab|tax|tci|tdk|tel|thd|tjx|top|trv|tui|tvs|ubs|uno|uol|ups|vet|vig|vin|vip|wed|win|wme|wow|wtc|wtf|xin|xxx|xyz|you|yun|zip|бел|ком|қаз|мкд|мон|орг|рус|срб|укр|հայ|קום|عرب|قطر|كوم|مصر|कॉम|नेट|คอม|ไทย|ストア|セール|みんな|中文网|天主教|我爱你|新加坡|淡马锡|诺基亚|飞利浦|ac|ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw|ελ|бг|ею|рф|გე|닷넷|닷컴|삼성|한국|コム|世界|中信|中国|中國|企业|佛山|信息|健康|八卦|公司|公益|台湾|台灣|商城|商店|商标|嘉里|在线|大拿|娱乐|家電|工行|广东|微博|慈善|手机|手表|招聘|政务|政府|新闻|时尚|書籍|机构|游戏|澳門|点看|珠宝|移动|网址|网店|网站|网络|联通|谷歌|购物|通販|集团|食品|餐厅|香港)/;
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/email-matcher.js





 // For debugging: search for other "For debugging" lines
// import CliTable from 'cli-table';
// RegExp objects which are shared by all instances of EmailMatcher. These are
// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is
// called multiple times, thus instantiating EmailMatcher and its RegExp 
// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). 
// See descriptions of the properties where they are used for details about them

var email_matcher_localPartCharRegex = new RegExp("[" + alphaNumericAndMarksCharsStr + "!#$%&'*+/=?^_`{|}~-]");
var email_matcher_strictTldRegex = new RegExp("^" + tldRegex.source + "$");
/**
 * @class Autolinker.matcher.Email
 * @extends Autolinker.matcher.Matcher
 *
 * Matcher to find email matches in an input string.
 *
 * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.
 */

var email_matcher_EmailMatcher =
/** @class */
function (_super) {
  __extends(EmailMatcher, _super);

  function EmailMatcher() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * Valid characters that can be used in the "local" part of an email address,
     * i.e. the "name" part of "name@site.com"
     */


    _this.localPartCharRegex = email_matcher_localPartCharRegex;
    /**
     * Stricter TLD regex which adds a beginning and end check to ensure
     * the string is a valid TLD
     */

    _this.strictTldRegex = email_matcher_strictTldRegex;
    return _this;
  }
  /**
   * @inheritdoc
   */


  EmailMatcher.prototype.parseMatches = function (text) {
    var tagBuilder = this.tagBuilder,
        localPartCharRegex = this.localPartCharRegex,
        strictTldRegex = this.strictTldRegex,
        matches = [],
        len = text.length,
        noCurrentEmailMatch = new CurrentEmailMatch(); // for matching a 'mailto:' prefix

    var mailtoTransitions = {
      'm': 'a',
      'a': 'i',
      'i': 'l',
      'l': 't',
      't': 'o',
      'o': ':'
    };
    var charIdx = 0,
        state = 0
    /* NonEmailMatch */
    ,
        currentEmailMatch = noCurrentEmailMatch; // For debugging: search for other "For debugging" lines
    // const table = new CliTable( {
    // 	head: [ 'charIdx', 'char', 'state', 'charIdx', 'currentEmailAddress.idx', 'hasDomainDot' ]
    // } );

    while (charIdx < len) {
      var char = text.charAt(charIdx); // For debugging: search for other "For debugging" lines
      // table.push( 
      // 	[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ] 
      // );

      switch (state) {
        case 0
        /* NonEmailMatch */
        :
          stateNonEmailAddress(char);
          break;

        case 1
        /* Mailto */
        :
          stateMailTo(text.charAt(charIdx - 1), char);
          break;

        case 2
        /* LocalPart */
        :
          stateLocalPart(char);
          break;

        case 3
        /* LocalPartDot */
        :
          stateLocalPartDot(char);
          break;

        case 4
        /* AtSign */
        :
          stateAtSign(char);
          break;

        case 5
        /* DomainChar */
        :
          stateDomainChar(char);
          break;

        case 6
        /* DomainHyphen */
        :
          stateDomainHyphen(char);
          break;

        case 7
        /* DomainDot */
        :
          stateDomainDot(char);
          break;

        default:
          throwUnhandledCaseError(state);
      } // For debugging: search for other "For debugging" lines
      // table.push( 
      // 	[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ] 
      // );


      charIdx++;
    } // Capture any valid match at the end of the string


    captureMatchIfValidAndReset(); // For debugging: search for other "For debugging" lines
    //console.log( '\n' + table.toString() );

    return matches; // Handles the state when we're not in an email address

    function stateNonEmailAddress(char) {
      if (char === 'm') {
        beginEmailMatch(1
        /* Mailto */
        );
      } else if (localPartCharRegex.test(char)) {
        beginEmailMatch();
      } else {// not an email address character, continue
      }
    } // Handles if we're reading a 'mailto:' prefix on the string


    function stateMailTo(prevChar, char) {
      if (prevChar === ':') {
        // We've reached the end of the 'mailto:' prefix
        if (localPartCharRegex.test(char)) {
          state = 2
          /* LocalPart */
          ;
          currentEmailMatch = new CurrentEmailMatch(_assign(_assign({}, currentEmailMatch), {
            hasMailtoPrefix: true
          }));
        } else {
          // we've matched 'mailto:' but didn't get anything meaningful
          // immediately afterwards (for example, we encountered a 
          // space character, or an '@' character which formed 'mailto:@'
          resetToNonEmailMatchState();
        }
      } else if (mailtoTransitions[prevChar] === char) {// We're currently reading the 'mailto:' prefix, stay in
        // Mailto state
      } else if (localPartCharRegex.test(char)) {
        // We we're reading a prefix of 'mailto:', but encountered a
        // different character that didn't continue the prefix
        state = 2
        /* LocalPart */
        ;
      } else if (char === '.') {
        // We we're reading a prefix of 'mailto:', but encountered a
        // dot character
        state = 3
        /* LocalPartDot */
        ;
      } else if (char === '@') {
        // We we're reading a prefix of 'mailto:', but encountered a
        // an @ character
        state = 4
        /* AtSign */
        ;
      } else {
        // not an email address character, return to "NonEmailAddress" state
        resetToNonEmailMatchState();
      }
    } // Handles the state when we're currently in the "local part" of an 
    // email address (as opposed to the "domain part")


    function stateLocalPart(char) {
      if (char === '.') {
        state = 3
        /* LocalPartDot */
        ;
      } else if (char === '@') {
        state = 4
        /* AtSign */
        ;
      } else if (localPartCharRegex.test(char)) {// stay in the "local part" of the email address
      } else {
        // not an email address character, return to "NonEmailAddress" state
        resetToNonEmailMatchState();
      }
    } // Handles the state where we've read 


    function stateLocalPartDot(char) {
      if (char === '.') {
        // We read a second '.' in a row, not a valid email address 
        // local part
        resetToNonEmailMatchState();
      } else if (char === '@') {
        // We read the '@' character immediately after a dot ('.'), not 
        // an email address
        resetToNonEmailMatchState();
      } else if (localPartCharRegex.test(char)) {
        state = 2
        /* LocalPart */
        ;
      } else {
        // Anything else, not an email address
        resetToNonEmailMatchState();
      }
    }

    function stateAtSign(char) {
      if (domainNameCharRegex.test(char)) {
        state = 5
        /* DomainChar */
        ;
      } else {
        // Anything else, not an email address
        resetToNonEmailMatchState();
      }
    }

    function stateDomainChar(char) {
      if (char === '.') {
        state = 7
        /* DomainDot */
        ;
      } else if (char === '-') {
        state = 6
        /* DomainHyphen */
        ;
      } else if (domainNameCharRegex.test(char)) {// Stay in the DomainChar state
      } else {
        // Anything else, we potentially matched if the criteria has
        // been met
        captureMatchIfValidAndReset();
      }
    }

    function stateDomainHyphen(char) {
      if (char === '-' || char === '.') {
        // Not valid to have two hyphens ("--") or hypen+dot ("-.")
        captureMatchIfValidAndReset();
      } else if (domainNameCharRegex.test(char)) {
        state = 5
        /* DomainChar */
        ;
      } else {
        // Anything else
        captureMatchIfValidAndReset();
      }
    }

    function stateDomainDot(char) {
      if (char === '.' || char === '-') {
        // not valid to have two dots ("..") or dot+hypen (".-")
        captureMatchIfValidAndReset();
      } else if (domainNameCharRegex.test(char)) {
        state = 5
        /* DomainChar */
        ; // After having read a '.' and then a valid domain character,
        // we now know that the domain part of the email is valid, and
        // we have found at least a partial EmailMatch (however, the
        // email address may have additional characters from this point)

        currentEmailMatch = new CurrentEmailMatch(_assign(_assign({}, currentEmailMatch), {
          hasDomainDot: true
        }));
      } else {
        // Anything else
        captureMatchIfValidAndReset();
      }
    }

    function beginEmailMatch(newState) {
      if (newState === void 0) {
        newState = 2
        /* LocalPart */
        ;
      }

      state = newState;
      currentEmailMatch = new CurrentEmailMatch({
        idx: charIdx
      });
    }

    function resetToNonEmailMatchState() {
      state = 0
      /* NonEmailMatch */
      ;
      currentEmailMatch = noCurrentEmailMatch;
    }
    /*
     * Captures the current email address as an EmailMatch if it's valid,
     * and resets the state to read another email address.
     */


    function captureMatchIfValidAndReset() {
      if (currentEmailMatch.hasDomainDot) {
        // we need at least one dot in the domain to be considered a valid email address
        var matchedText = text.slice(currentEmailMatch.idx, charIdx); // If we read a '.' or '-' char that ended the email address
        // (valid domain name characters, but only valid email address
        // characters if they are followed by something else), strip 
        // it off now

        if (/[-.]$/.test(matchedText)) {
          matchedText = matchedText.slice(0, -1);
        }

        var emailAddress = currentEmailMatch.hasMailtoPrefix ? matchedText.slice('mailto:'.length) : matchedText; // if the email address has a valid TLD, add it to the list of matches

        if (doesEmailHaveValidTld(emailAddress)) {
          matches.push(new email_match_EmailMatch({
            tagBuilder: tagBuilder,
            matchedText: matchedText,
            offset: currentEmailMatch.idx,
            email: emailAddress
          }));
        }
      }

      resetToNonEmailMatchState();
      /**
       * Determines if the given email address has a valid TLD or not
       * @param {string} emailAddress - email address
       * @return {Boolean} - true is email have valid TLD, false otherwise
       */

      function doesEmailHaveValidTld(emailAddress) {
        var emailAddressTld = emailAddress.split('.').pop() || '';
        var emailAddressNormalized = emailAddressTld.toLowerCase();
        var isValidTld = strictTldRegex.test(emailAddressNormalized);
        return isValidTld;
      }
    }
  };

  return EmailMatcher;
}(Matcher);



var CurrentEmailMatch =
/** @class */
function () {
  function CurrentEmailMatch(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    this.idx = cfg.idx !== undefined ? cfg.idx : -1;
    this.hasMailtoPrefix = !!cfg.hasMailtoPrefix;
    this.hasDomainDot = !!cfg.hasDomainDot;
  }

  return CurrentEmailMatch;
}();
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/url-match-validator.js

/**
 * @private
 * @class Autolinker.matcher.UrlMatchValidator
 * @singleton
 *
 * Used by Autolinker to filter out false URL positives from the
 * {@link Autolinker.matcher.Url UrlMatcher}.
 *
 * Due to the limitations of regular expressions (including the missing feature
 * of look-behinds in JS regular expressions), we cannot always determine the
 * validity of a given match. This class applies a bit of additional logic to
 * filter out any false positives that have been matched by the
 * {@link Autolinker.matcher.Url UrlMatcher}.
 */

var url_match_validator_UrlMatchValidator =
/** @class */
function () {
  function UrlMatchValidator() {}
  /**
   * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}
   * is valid. Will return `false` for:
   *
   * 1) URL matches which do not have at least have one period ('.') in the
   *    domain name (effectively skipping over matches like "abc:def").
   *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')
   * 2) URL matches which do not have at least one word character in the
   *    domain name (effectively skipping over matches like "git:1.0").
   *    However, URL matches with a protocol will be allowed (ex: 'intra-net://271219.76')
   * 3) A protocol-relative url match (a URL beginning with '//') whose
   *    previous character is a word character (effectively skipping over
   *    strings like "abc//google.com")
   *
   * Otherwise, returns `true`.
   *
   * @param {String} urlMatch The matched URL, if there was one. Will be an
   *   empty string if the match is not a URL match.
   * @param {String} protocolUrlMatch The match URL string for a protocol
   *   match. Ex: 'http://yahoo.com'. This is used to match something like
   *   'http://localhost', where we won't double check that the domain name
   *   has at least one '.' in it.
   * @return {Boolean} `true` if the match given is valid and should be
   *   processed, or `false` if the match is invalid and/or should just not be
   *   processed.
   */


  UrlMatchValidator.isValid = function (urlMatch, protocolUrlMatch) {
    if (protocolUrlMatch && !this.isValidUriScheme(protocolUrlMatch) || this.urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')
    this.urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like "git:1.0"
    !this.isValidIpAddress(urlMatch) || // Except if it's an IP address
    this.containsMultipleDots(urlMatch)) {
      return false;
    }

    return true;
  };

  UrlMatchValidator.isValidIpAddress = function (uriSchemeMatch) {
    var newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);
    var uriScheme = uriSchemeMatch.match(newRegex);
    return uriScheme !== null;
  };

  UrlMatchValidator.containsMultipleDots = function (urlMatch) {
    var stringBeforeSlash = urlMatch;

    if (this.hasFullProtocolRegex.test(urlMatch)) {
      stringBeforeSlash = urlMatch.split('://')[1];
    }

    return stringBeforeSlash.split('/')[0].indexOf("..") > -1;
  };
  /**
   * Determines if the URI scheme is a valid scheme to be autolinked. Returns
   * `false` if the scheme is 'javascript:' or 'vbscript:'
   *
   * @private
   * @param {String} uriSchemeMatch The match URL string for a full URI scheme
   *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.
   * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.
   */


  UrlMatchValidator.isValidUriScheme = function (uriSchemeMatch) {
    var uriSchemeMatchArr = uriSchemeMatch.match(this.uriSchemeRegex),
        uriScheme = uriSchemeMatchArr && uriSchemeMatchArr[0].toLowerCase();
    return uriScheme !== 'javascript:' && uriScheme !== 'vbscript:';
  };
  /**
   * Determines if a URL match does not have either:
   *
   * a) a full protocol (i.e. 'http://'), or
   * b) at least one dot ('.') in the domain name (for a non-full-protocol
   *    match).
   *
   * Either situation is considered an invalid URL (ex: 'git:d' does not have
   * either the '://' part, or at least one dot in the domain name. If the
   * match was 'git:abc.com', we would consider this valid.)
   *
   * @private
   * @param {String} urlMatch The matched URL, if there was one. Will be an
   *   empty string if the match is not a URL match.
   * @param {String} protocolUrlMatch The match URL string for a protocol
   *   match. Ex: 'http://yahoo.com'. This is used to match something like
   *   'http://localhost', where we won't double check that the domain name
   *   has at least one '.' in it.
   * @return {Boolean} `true` if the URL match does not have a full protocol,
   *   or at least one dot ('.') in a non-full-protocol match.
   */


  UrlMatchValidator.urlMatchDoesNotHaveProtocolOrDot = function (urlMatch, protocolUrlMatch) {
    return !!urlMatch && (!protocolUrlMatch || !this.hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1;
  };
  /**
   * Determines if a URL match does not have either:
   *
   * a) a full protocol (i.e. 'http://'), or
   * b) at least one word character after the protocol (i.e. in the domain name)
   *
   * At least one letter character must exist in the domain name after a
   * protocol match. Ex: skip over something like "git:1.0"
   *
   * @private
   * @param {String} urlMatch The matched URL, if there was one. Will be an
   *   empty string if the match is not a URL match.
   * @param {String} protocolUrlMatch The match URL string for a protocol
   *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we
   *   have a protocol in the URL string, in order to check for a word
   *   character after the protocol separator (':').
   * @return {Boolean} `true` if the URL match does not have a full protocol, or
   * at least one word character in it, `false` otherwise.
   */


  UrlMatchValidator.urlMatchDoesNotHaveAtLeastOneWordChar = function (urlMatch, protocolUrlMatch) {
    if (urlMatch && protocolUrlMatch) {
      return !this.hasFullProtocolRegex.test(protocolUrlMatch) && !this.hasWordCharAfterProtocolRegex.test(urlMatch);
    } else {
      return false;
    }
  };
  /**
   * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'
   *
   * @private
   * @property {RegExp} hasFullProtocolRegex
   */


  UrlMatchValidator.hasFullProtocolRegex = /^[A-Za-z][-.+A-Za-z0-9]*:\/\//;
  /**
   * Regex to find the URI scheme, such as 'mailto:'.
   *
   * This is used to filter out 'javascript:' and 'vbscript:' schemes.
   *
   * @private
   * @property {RegExp} uriSchemeRegex
   */

  UrlMatchValidator.uriSchemeRegex = /^[A-Za-z][-.+A-Za-z0-9]*:/;
  /**
   * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')
   *
   * @private
   * @property {RegExp} hasWordCharAfterProtocolRegex
   */

  UrlMatchValidator.hasWordCharAfterProtocolRegex = new RegExp(":[^\\s]*?[" + alphaCharsStr + "]");
  /**
   * Regex to determine if the string is a valid IP address
   *
   * @private
   * @property {RegExp} ipRegex
   */

  UrlMatchValidator.ipRegex = /[0-9][0-9]?[0-9]?\.[0-9][0-9]?[0-9]?\.[0-9][0-9]?[0-9]?\.[0-9][0-9]?[0-9]?(:[0-9]*)?\/?$/;
  return UrlMatchValidator;
}();


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/url-matcher.js





 // RegExp objects which are shared by all instances of UrlMatcher. These are
// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is
// called multiple times, thus instantiating UrlMatcher and its RegExp 
// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). 
// See descriptions of the properties where they are used for details about them

var url_matcher_matcherRegex = function () {
  var schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]{0,63}:(?![A-Za-z][-.+A-Za-z0-9]{0,63}:\/\/)(?!\d+\/?)(?:\/\/)?)/,
      // match protocol, allow in format "http://" or "mailto:". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match "link:"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)
  wwwRegex = /(?:www\.)/,
      // starting with 'www.'
  // Allow optional path, query string, and hash anchor, not ending in the following characters: "?!:,.;"
  // http://blog.codinghorror.com/the-problem-with-urls/
  urlSuffixRegex = new RegExp('[/?#](?:[' + alphaNumericAndMarksCharsStr + "\\-+&@#/%=~_()|'$*\\[\\]{}?!:,.;^\u2713]*[" + alphaNumericAndMarksCharsStr + "\\-+&@#/%=~_()|'$*\\[\\]{}\u2713])?");
  return new RegExp(['(?:', '(', schemeRegex.source, getDomainNameStr(2), ')', '|', '(', '(//)?', wwwRegex.source, getDomainNameStr(6), ')', '|', '(', '(//)?', getDomainNameStr(10) + '\\.', tldRegex.source, '(?![-' + alphaNumericCharsStr + '])', ')', ')', '(?::[0-9]+)?', '(?:' + urlSuffixRegex.source + ')?' // match for path, query string, and/or hash anchor - optional
  ].join(""), 'gi');
}();

var wordCharRegExp = new RegExp('[' + alphaNumericAndMarksCharsStr + ']');
/**
 * @class Autolinker.matcher.Url
 * @extends Autolinker.matcher.Matcher
 *
 * Matcher to find URL matches in an input string.
 *
 * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.
 */

var url_matcher_UrlMatcher =
/** @class */
function (_super) {
  __extends(UrlMatcher, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match instance,
   *   specified in an Object (map).
   */


  function UrlMatcher(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {Object} stripPrefix (required)
     *
     * The Object form of {@link Autolinker#cfg-stripPrefix}.
     */


    _this.stripPrefix = {
      scheme: true,
      www: true
    }; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} stripTrailingSlash (required)
     * @inheritdoc Autolinker#stripTrailingSlash
     */

    _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} decodePercentEncoding (required)
     * @inheritdoc Autolinker#decodePercentEncoding
     */

    _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @protected
     * @property {RegExp} matcherRegex
     *
     * The regular expression to match URLs with an optional scheme, port
     * number, path, query string, and hash anchor.
     *
     * Example matches:
     *
     *     http://google.com
     *     www.google.com
     *     google.com/path/to/file?q1=1&q2=2#myAnchor
     *
     *
     * This regular expression will have the following capturing groups:
     *
     * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').
     *     This is used to match scheme URLs with just a single word, such as
     *     'http://localhost', where we won't double check that the domain name
     *     has at least one dot ('.') in it.
     * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the
     *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by
     *     'http://', 'ftp:', etc.)
     * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed
     *     URL. Will be an empty string if it is not a protocol-relative match.
     *     We need to know the character before the '//' in order to determine
     *     if it is a valid match or the // was in a string we don't want to
     *     auto-link.
     * 4.  Group that matches a known TLD (top level domain), when a scheme
     *     or 'www.'-prefixed domain is not matched.
     * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed
     *     URL. Will be an empty string if it is not a protocol-relative match.
     *     See #3 for more info.
     */

    _this.matcherRegex = url_matcher_matcherRegex;
    /**
     * A regular expression to use to check the character before a protocol-relative
     * URL match. We don't want to match a protocol-relative URL if it is part
     * of another word.
     *
     * For example, we want to match something like "Go to: //google.com",
     * but we don't want to match something like "abc//google.com"
     *
     * This regular expression is used to test the character before the '//'.
     *
     * @protected
     * @type {RegExp} wordCharRegExp
     */

    _this.wordCharRegExp = wordCharRegExp;
    _this.stripPrefix = cfg.stripPrefix;
    _this.stripTrailingSlash = cfg.stripTrailingSlash;
    _this.decodePercentEncoding = cfg.decodePercentEncoding;
    return _this;
  }
  /**
   * @inheritdoc
   */


  UrlMatcher.prototype.parseMatches = function (text) {
    var matcherRegex = this.matcherRegex,
        stripPrefix = this.stripPrefix,
        stripTrailingSlash = this.stripTrailingSlash,
        decodePercentEncoding = this.decodePercentEncoding,
        tagBuilder = this.tagBuilder,
        matches = [],
        match;

    var _loop_1 = function _loop_1() {
      var matchStr = match[0],
          schemeUrlMatch = match[1],
          wwwUrlMatch = match[4],
          wwwProtocolRelativeMatch = match[5],
          //tldUrlMatch = match[ 8 ],  -- not needed at the moment
      tldProtocolRelativeMatch = match[9],
          offset = match.index,
          protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,
          prevChar = text.charAt(offset - 1);

      if (!url_match_validator_UrlMatchValidator.isValid(matchStr, schemeUrlMatch)) {
        return "continue";
      } // If the match is preceded by an '@' character, then it is either
      // an email address or a username. Skip these types of matches.


      if (offset > 0 && prevChar === '@') {
        return "continue";
      } // If it's a protocol-relative '//' match, but the character before the '//'
      // was a word character (i.e. a letter/number), then we found the '//' in the
      // middle of another word (such as "asdf//asdf.com"). In this case, skip the
      // match.


      if (offset > 0 && protocolRelativeMatch && this_1.wordCharRegExp.test(prevChar)) {
        return "continue";
      } // If the URL ends with a question mark, don't include the question
      // mark as part of the URL. We'll assume the question mark was the
      // end of a sentence, such as: "Going to google.com?"


      if (/\?$/.test(matchStr)) {
        matchStr = matchStr.substr(0, matchStr.length - 1);
      } // Handle a closing parenthesis or square bracket at the end of the 
      // match, and exclude it if there is not a matching open parenthesis 
      // or square bracket in the match itself.


      if (this_1.matchHasUnbalancedClosingParen(matchStr)) {
        matchStr = matchStr.substr(0, matchStr.length - 1); // remove the trailing ")"
      } else {
        // Handle an invalid character after the TLD
        var pos = this_1.matchHasInvalidCharAfterTld(matchStr, schemeUrlMatch);

        if (pos > -1) {
          matchStr = matchStr.substr(0, pos); // remove the trailing invalid chars
        }
      } // The autolinker accepts many characters in a url's scheme (like `fake://test.com`).
      // However, in cases where a URL is missing whitespace before an obvious link,
      // (for example: `nowhitespacehttp://www.test.com`), we only want the match to start
      // at the http:// part. We will check if the match contains a common scheme and then 
      // shift the match to start from there. 		


      var foundCommonScheme = ['http://', 'https://'].find(function (commonScheme) {
        return !!schemeUrlMatch && schemeUrlMatch.indexOf(commonScheme) !== -1;
      });

      if (foundCommonScheme) {
        // If we found an overmatched URL, we want to find the index
        // of where the match should start and shift the match to
        // start from the beginning of the common scheme
        var indexOfSchemeStart = matchStr.indexOf(foundCommonScheme);
        matchStr = matchStr.substr(indexOfSchemeStart);
        schemeUrlMatch = schemeUrlMatch.substr(indexOfSchemeStart);
        offset = offset + indexOfSchemeStart;
      }

      var urlMatchType = schemeUrlMatch ? 'scheme' : wwwUrlMatch ? 'www' : 'tld',
          protocolUrlMatch = !!schemeUrlMatch;
      matches.push(new url_match_UrlMatch({
        tagBuilder: tagBuilder,
        matchedText: matchStr,
        offset: offset,
        urlMatchType: urlMatchType,
        url: matchStr,
        protocolUrlMatch: protocolUrlMatch,
        protocolRelativeMatch: !!protocolRelativeMatch,
        stripPrefix: stripPrefix,
        stripTrailingSlash: stripTrailingSlash,
        decodePercentEncoding: decodePercentEncoding
      }));
    };

    var this_1 = this;

    while ((match = matcherRegex.exec(text)) !== null) {
      _loop_1();
    }

    return matches;
  };
  /**
   * Determines if a match found has an unmatched closing parenthesis,
   * square bracket or curly bracket. If so, the symbol will be removed
   * from the match itself, and appended after the generated anchor tag.
   *
   * A match may have an extra closing parenthesis at the end of the match
   * because the regular expression must include parenthesis for URLs such as
   * "wikipedia.com/something_(disambiguation)", which should be auto-linked.
   *
   * However, an extra parenthesis *will* be included when the URL itself is
   * wrapped in parenthesis, such as in the case of:
   *     "(wikipedia.com/something_(disambiguation))"
   * In this case, the last closing parenthesis should *not* be part of the
   * URL itself, and this method will return `true`.
   *
   * For square brackets in URLs such as in PHP arrays, the same behavior as
   * parenthesis discussed above should happen:
   *     "[http://www.example.com/foo.php?bar[]=1&bar[]=2&bar[]=3]"
   * The closing square bracket should not be part of the URL itself, and this
   * method will return `true`.
   *
   * @protected
   * @param {String} matchStr The full match string from the {@link #matcherRegex}.
   * @return {Boolean} `true` if there is an unbalanced closing parenthesis or
   *   square bracket at the end of the `matchStr`, `false` otherwise.
   */


  UrlMatcher.prototype.matchHasUnbalancedClosingParen = function (matchStr) {
    var endChar = matchStr.charAt(matchStr.length - 1);
    var startChar;

    if (endChar === ')') {
      startChar = '(';
    } else if (endChar === ']') {
      startChar = '[';
    } else if (endChar === '}') {
      startChar = '{';
    } else {
      return false; // not a close parenthesis or square bracket
    } // Find if there are the same number of open braces as close braces in
    // the URL string, minus the last character (which we have already 
    // determined to be either ')', ']' or '}'


    var numOpenBraces = 0;

    for (var i = 0, len = matchStr.length - 1; i < len; i++) {
      var char = matchStr.charAt(i);

      if (char === startChar) {
        numOpenBraces++;
      } else if (char === endChar) {
        numOpenBraces = Math.max(numOpenBraces - 1, 0);
      }
    } // If the number of open braces matches the number of close braces in
    // the URL minus the last character, then the match has *unbalanced*
    // braces because of the last character. Example of unbalanced braces
    // from the regex match:
    //     "http://example.com?a[]=1]"


    if (numOpenBraces === 0) {
      return true;
    }

    return false;
  };
  /**
   * Determine if there's an invalid character after the TLD in a URL. Valid
   * characters after TLD are ':/?#'. Exclude scheme matched URLs from this
   * check.
   *
   * @protected
   * @param {String} urlMatch The matched URL, if there was one. Will be an
   *   empty string if the match is not a URL match.
   * @param {String} schemeUrlMatch The match URL string for a scheme
   *   match. Ex: 'http://yahoo.com'. This is used to match something like
   *   'http://localhost', where we won't double check that the domain name
   *   has at least one '.' in it.
   * @return {Number} the position where the invalid character was found. If
   *   no such character was found, returns -1
   */


  UrlMatcher.prototype.matchHasInvalidCharAfterTld = function (urlMatch, schemeUrlMatch) {
    if (!urlMatch) {
      return -1;
    }

    var offset = 0;

    if (schemeUrlMatch) {
      offset = urlMatch.indexOf(':');
      urlMatch = urlMatch.slice(offset);
    }

    var re = new RegExp("^((.?\/\/)?[-." + alphaNumericAndMarksCharsStr + "]*[-" + alphaNumericAndMarksCharsStr + "]\\.[-" + alphaNumericAndMarksCharsStr + "]+)");
    var res = re.exec(urlMatch);

    if (res === null) {
      return -1;
    }

    offset += res[1].length;
    urlMatch = urlMatch.slice(res[1].length);

    if (/^[^-.A-Za-z0-9:\/?#]/.test(urlMatch)) {
      return offset;
    }

    return -1;
  };

  return UrlMatcher;
}(Matcher);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/hashtag-matcher.js



 // RegExp objects which are shared by all instances of HashtagMatcher. These are
// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is
// called multiple times, thus instantiating HashtagMatcher and its RegExp 
// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). 
// See descriptions of the properties where they are used for details about them

var hashtag_matcher_matcherRegex = new RegExp("#[_" + alphaNumericAndMarksCharsStr + "]{1,139}(?![_" + alphaNumericAndMarksCharsStr + "])", 'g'); // lookahead used to make sure we don't match something above 139 characters

var hashtag_matcher_nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');
/**
 * @class Autolinker.matcher.Hashtag
 * @extends Autolinker.matcher.Matcher
 *
 * Matcher to find HashtagMatch matches in an input string.
 */

var hashtag_matcher_HashtagMatcher =
/** @class */
function (_super) {
  __extends(HashtagMatcher, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match instance,
   *   specified in an Object (map).
   */


  function HashtagMatcher(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {String} serviceName
     *
     * The service to point hashtag matches to. See {@link Autolinker#hashtag}
     * for available values.
     */


    _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * The regular expression to match Hashtags. Example match:
     *
     *     #asdf
     *
     * @protected
     * @property {RegExp} matcherRegex
     */

    _this.matcherRegex = hashtag_matcher_matcherRegex;
    /**
     * The regular expression to use to check the character before a username match to
     * make sure we didn't accidentally match an email address.
     *
     * For example, the string "asdf@asdf.com" should not match "@asdf" as a username.
     *
     * @protected
     * @property {RegExp} nonWordCharRegex
     */

    _this.nonWordCharRegex = hashtag_matcher_nonWordCharRegex;
    _this.serviceName = cfg.serviceName;
    return _this;
  }
  /**
   * @inheritdoc
   */


  HashtagMatcher.prototype.parseMatches = function (text) {
    var matcherRegex = this.matcherRegex,
        nonWordCharRegex = this.nonWordCharRegex,
        serviceName = this.serviceName,
        tagBuilder = this.tagBuilder,
        matches = [],
        match;

    while ((match = matcherRegex.exec(text)) !== null) {
      var offset = match.index,
          prevChar = text.charAt(offset - 1); // If we found the match at the beginning of the string, or we found the match
      // and there is a whitespace char in front of it (meaning it is not a '#' char
      // in the middle of a word), then it is a hashtag match.

      if (offset === 0 || nonWordCharRegex.test(prevChar)) {
        var matchedText = match[0],
            hashtag = match[0].slice(1); // strip off the '#' character at the beginning

        matches.push(new hashtag_match_HashtagMatch({
          tagBuilder: tagBuilder,
          matchedText: matchedText,
          offset: offset,
          serviceName: serviceName,
          hashtag: hashtag
        }));
      }
    }

    return matches;
  };

  return HashtagMatcher;
}(Matcher);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/phone-matcher.js



 // RegExp objects which are shared by all instances of PhoneMatcher. These are
// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is
// called multiple times, thus instantiating PhoneMatcher and its RegExp
// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314).
// See descriptions of the properties where they are used for details about them
// Over the years, many people have added to this regex, but it should have been
// split up by country. Maybe one day we can break this down.

var mostPhoneNumbers = /(?:(?:(?:(\+)?\d{1,3}[-\040.]?)?\(?\d{3}\)?[-\040.]?\d{3}[-\040.]?\d{4})|(?:(\+)(?:9[976]\d|8[987530]\d|6[987]\d|5[90]\d|42\d|3[875]\d|2[98654321]\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)[-\040.]?(?:\d[-\040.]?){6,12}\d+))([,;]+[0-9]+#?)*/; // Regex for Japanese phone numbers

var japanesePhoneRe = /(0([1-9]{1}-?[1-9]\d{3}|[1-9]{2}-?\d{3}|[1-9]{2}\d{1}-?\d{2}|[1-9]{2}\d{2}-?\d{1})-?\d{4}|0[789]0-?\d{4}-?\d{4}|050-?\d{4}-?\d{4})/; // Combined regex

var phoneMatcherRegex = new RegExp(mostPhoneNumbers.source + "|" + japanesePhoneRe.source, 'g');
/**
 * @class Autolinker.matcher.Phone
 * @extends Autolinker.matcher.Matcher
 *
 * Matcher to find Phone number matches in an input string.
 *
 * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more
 * details.
 */

var phone_matcher_PhoneMatcher =
/** @class */
function (_super) {
  __extends(PhoneMatcher, _super);

  function PhoneMatcher() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    /**
     * The regular expression to match Phone numbers. Example matches:
     *
     *     (123) 456-7890
     *     123 456 7890
     *     123-456-7890
     *     +18004441234,,;,10226420346#
     *     +1 (800) 444 1234
     *     10226420346#
     *     1-800-444-1234,1022,64,20346#
     *
     * This regular expression has the following capturing groups:
     *
     * 1 or 2. The prefixed '+' sign, if there is one.
     *
     * @protected
     * @property {RegExp} matcherRegex
     */


    _this.matcherRegex = phoneMatcherRegex;
    return _this;
  }
  /**
   * @inheritdoc
   */


  PhoneMatcher.prototype.parseMatches = function (text) {
    var matcherRegex = this.matcherRegex,
        tagBuilder = this.tagBuilder,
        matches = [],
        match;

    while ((match = matcherRegex.exec(text)) !== null) {
      // Remove non-numeric values from phone number string
      var matchedText = match[0],
          cleanNumber = matchedText.replace(/[^0-9,;#]/g, ''),
          // strip out non-digit characters exclude comma semicolon and #
      plusSign = !!(match[1] || match[2]),
          // match[ 1 ] or match[ 2 ] is the prefixed plus sign, if there is one
      before = match.index == 0 ? '' : text.substr(match.index - 1, 1),
          after = text.substr(match.index + matchedText.length, 1),
          contextClear = !before.match(/\d/) && !after.match(/\d/);

      if (this.testMatch(match[3]) && this.testMatch(matchedText) && contextClear) {
        matches.push(new phone_match_PhoneMatch({
          tagBuilder: tagBuilder,
          matchedText: matchedText,
          offset: match.index,
          number: cleanNumber,
          plusSign: plusSign
        }));
      }
    }

    return matches;
  };

  PhoneMatcher.prototype.testMatch = function (text) {
    return nonDigitRe.test(text);
  };

  return PhoneMatcher;
}(Matcher);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/mention-matcher.js



 // RegExp objects which are shared by all instances of MentionMatcher. These are
// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is
// called multiple times, thus instantiating MentionMatcher and its RegExp 
// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). 
// See descriptions of the properties where they are used for details about them

var twitterRegex = new RegExp("@[_" + alphaNumericAndMarksCharsStr + "]{1,50}(?![_" + alphaNumericAndMarksCharsStr + "])", 'g'); // lookahead used to make sure we don't match something above 50 characters

var instagramRegex = new RegExp("@[_." + alphaNumericAndMarksCharsStr + "]{1,30}(?![_" + alphaNumericAndMarksCharsStr + "])", 'g'); // lookahead used to make sure we don't match something above 30 characters

var soundcloudRegex = new RegExp("@[-_." + alphaNumericAndMarksCharsStr + "]{1,50}(?![-_" + alphaNumericAndMarksCharsStr + "])", 'g'); // lookahead used to make sure we don't match something above 50 characters

var mention_matcher_nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');
/**
 * @class Autolinker.matcher.Mention
 * @extends Autolinker.matcher.Matcher
 *
 * Matcher to find/replace username matches in an input string.
 */

var mention_matcher_MentionMatcher =
/** @class */
function (_super) {
  __extends(MentionMatcher, _super);
  /**
   * @method constructor
   * @param {Object} cfg The configuration properties for the Match instance,
   *   specified in an Object (map).
   */


  function MentionMatcher(cfg) {
    var _this = _super.call(this, cfg) || this;
    /**
     * @cfg {'twitter'/'instagram'/'soundcloud'} protected
     *
     * The name of service to link @mentions to.
     *
     * Valid values are: 'twitter', 'instagram', or 'soundcloud'
     */


    _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * Hash of regular expression to match username handles. Example match:
     *
     *     @asdf
     *
     * @private
     * @property {Object} matcherRegexes
     */

    _this.matcherRegexes = {
      'twitter': twitterRegex,
      'instagram': instagramRegex,
      'soundcloud': soundcloudRegex
    };
    /**
     * The regular expression to use to check the character before a username match to
     * make sure we didn't accidentally match an email address.
     *
     * For example, the string "asdf@asdf.com" should not match "@asdf" as a username.
     *
     * @private
     * @property {RegExp} nonWordCharRegex
     */

    _this.nonWordCharRegex = mention_matcher_nonWordCharRegex;
    _this.serviceName = cfg.serviceName;
    return _this;
  }
  /**
   * @inheritdoc
   */


  MentionMatcher.prototype.parseMatches = function (text) {
    var serviceName = this.serviceName,
        matcherRegex = this.matcherRegexes[this.serviceName],
        nonWordCharRegex = this.nonWordCharRegex,
        tagBuilder = this.tagBuilder,
        matches = [],
        match;

    if (!matcherRegex) {
      return matches;
    }

    while ((match = matcherRegex.exec(text)) !== null) {
      var offset = match.index,
          prevChar = text.charAt(offset - 1); // If we found the match at the beginning of the string, or we found the match
      // and there is a whitespace char in front of it (meaning it is not an email
      // address), then it is a username match.

      if (offset === 0 || nonWordCharRegex.test(prevChar)) {
        var matchedText = match[0].replace(/\.+$/g, ''),
            // strip off trailing .
        mention = matchedText.slice(1); // strip off the '@' character at the beginning

        matches.push(new mention_match_MentionMatch({
          tagBuilder: tagBuilder,
          matchedText: matchedText,
          offset: offset,
          serviceName: serviceName,
          mention: mention
        }));
      }
    }

    return matches;
  };

  return MentionMatcher;
}(Matcher);


// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/htmlParser/parse-html.js


 // For debugging: search for other "For debugging" lines
// import CliTable from 'cli-table';

/**
 * Parses an HTML string, calling the callbacks to notify of tags and text.
 *
 * ## History
 *
 * This file previously used a regular expression to find html tags in the input
 * text. Unfortunately, we ran into a bunch of catastrophic backtracking issues
 * with certain input text, causing Autolinker to either hang or just take a
 * really long time to parse the string.
 *
 * The current code is intended to be a O(n) algorithm that walks through
 * the string in one pass, and tries to be as cheap as possible. We don't need
 * to implement the full HTML spec, but rather simply determine where the string
 * looks like an HTML tag, and where it looks like text (so that we can autolink
 * that).
 *
 * This state machine parser is intended just to be a simple but performant
 * parser of HTML for the subset of requirements we have. We simply need to:
 *
 * 1. Determine where HTML tags are
 * 2. Determine the tag name (Autolinker specifically only cares about <a>,
 *    <script>, and <style> tags, so as not to link any text within them)
 *
 * We don't need to:
 *
 * 1. Create a parse tree
 * 2. Auto-close tags with invalid markup
 * 3. etc.
 *
 * The other intention behind this is that we didn't want to add external
 * dependencies on the Autolinker utility which would increase its size. For
 * instance, adding htmlparser2 adds 125kb to the minified output file,
 * increasing its final size from 47kb to 172kb (at the time of writing). It
 * also doesn't work exactly correctly, treating the string "<3 blah blah blah"
 * as an HTML tag.
 *
 * Reference for HTML spec:
 *
 *     https://www.w3.org/TR/html51/syntax.html#sec-tokenization
 *
 * @param {String} html The HTML to parse
 * @param {Object} callbacks
 * @param {Function} callbacks.onOpenTag Callback function to call when an open
 *   tag is parsed. Called with the tagName as its argument.
 * @param {Function} callbacks.onCloseTag Callback function to call when a close
 *   tag is parsed. Called with the tagName as its argument. If a self-closing
 *   tag is found, `onCloseTag` is called immediately after `onOpenTag`.
 * @param {Function} callbacks.onText Callback function to call when text (i.e
 *   not an HTML tag) is parsed. Called with the text (string) as its first
 *   argument, and offset (number) into the string as its second.
 */

function parseHtml(html, _a) {
  var onOpenTag = _a.onOpenTag,
      onCloseTag = _a.onCloseTag,
      onText = _a.onText,
      onComment = _a.onComment,
      onDoctype = _a.onDoctype;
  var noCurrentTag = new CurrentTag();
  var charIdx = 0,
      len = html.length,
      state = 0
  /* Data */
  ,
      currentDataIdx = 0,
      // where the current data start index is
  currentTag = noCurrentTag; // describes the current tag that is being read
  // For debugging: search for other "For debugging" lines
  // const table = new CliTable( {
  // 	head: [ 'charIdx', 'char', 'state', 'currentDataIdx', 'currentOpenTagIdx', 'tag.type' ]
  // } );

  while (charIdx < len) {
    var char = html.charAt(charIdx); // For debugging: search for other "For debugging" lines
    // ALSO: Temporarily remove the 'const' keyword on the State enum
    // table.push( 
    // 	[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ] 
    // );

    switch (state) {
      case 0
      /* Data */
      :
        stateData(char);
        break;

      case 1
      /* TagOpen */
      :
        stateTagOpen(char);
        break;

      case 2
      /* EndTagOpen */
      :
        stateEndTagOpen(char);
        break;

      case 3
      /* TagName */
      :
        stateTagName(char);
        break;

      case 4
      /* BeforeAttributeName */
      :
        stateBeforeAttributeName(char);
        break;

      case 5
      /* AttributeName */
      :
        stateAttributeName(char);
        break;

      case 6
      /* AfterAttributeName */
      :
        stateAfterAttributeName(char);
        break;

      case 7
      /* BeforeAttributeValue */
      :
        stateBeforeAttributeValue(char);
        break;

      case 8
      /* AttributeValueDoubleQuoted */
      :
        stateAttributeValueDoubleQuoted(char);
        break;

      case 9
      /* AttributeValueSingleQuoted */
      :
        stateAttributeValueSingleQuoted(char);
        break;

      case 10
      /* AttributeValueUnquoted */
      :
        stateAttributeValueUnquoted(char);
        break;

      case 11
      /* AfterAttributeValueQuoted */
      :
        stateAfterAttributeValueQuoted(char);
        break;

      case 12
      /* SelfClosingStartTag */
      :
        stateSelfClosingStartTag(char);
        break;

      case 13
      /* MarkupDeclarationOpenState */
      :
        stateMarkupDeclarationOpen(char);
        break;

      case 14
      /* CommentStart */
      :
        stateCommentStart(char);
        break;

      case 15
      /* CommentStartDash */
      :
        stateCommentStartDash(char);
        break;

      case 16
      /* Comment */
      :
        stateComment(char);
        break;

      case 17
      /* CommentEndDash */
      :
        stateCommentEndDash(char);
        break;

      case 18
      /* CommentEnd */
      :
        stateCommentEnd(char);
        break;

      case 19
      /* CommentEndBang */
      :
        stateCommentEndBang(char);
        break;

      case 20
      /* Doctype */
      :
        stateDoctype(char);
        break;

      default:
        throwUnhandledCaseError(state);
    } // For debugging: search for other "For debugging" lines
    // ALSO: Temporarily remove the 'const' keyword on the State enum
    // table.push( 
    // 	[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ] 
    // );


    charIdx++;
  }

  if (currentDataIdx < charIdx) {
    emitText();
  } // For debugging: search for other "For debugging" lines
  // console.log( '\n' + table.toString() );
  // Called when non-tags are being read (i.e. the text around HTML †ags)
  // https://www.w3.org/TR/html51/syntax.html#data-state


  function stateData(char) {
    if (char === '<') {
      startNewTag();
    }
  } // Called after a '<' is read from the Data state
  // https://www.w3.org/TR/html51/syntax.html#tag-open-state


  function stateTagOpen(char) {
    if (char === '!') {
      state = 13
      /* MarkupDeclarationOpenState */
      ;
    } else if (char === '/') {
      state = 2
      /* EndTagOpen */
      ;
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        isClosing: true
      }));
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else if (letterRe.test(char)) {
      // tag name start (and no '/' read)
      state = 3
      /* TagName */
      ;
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        isOpening: true
      }));
    } else {
      // Any other 
      state = 0
      /* Data */
      ;
      currentTag = noCurrentTag;
    }
  } // After a '<x', '</x' sequence is read (where 'x' is a letter character), 
  // this is to continue reading the tag name
  // https://www.w3.org/TR/html51/syntax.html#tag-name-state


  function stateTagName(char) {
    if (whitespaceRe.test(char)) {
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        name: captureTagName()
      }));
      state = 4
      /* BeforeAttributeName */
      ;
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else if (char === '/') {
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        name: captureTagName()
      }));
      state = 12
      /* SelfClosingStartTag */
      ;
    } else if (char === '>') {
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        name: captureTagName()
      }));
      emitTagAndPreviousTextNode(); // resets to Data state as well
    } else if (!letterRe.test(char) && !digitRe.test(char) && char !== ':') {
      // Anything else that does not form an html tag. Note: the colon 
      // character is accepted for XML namespaced tags
      resetToDataState();
    } else {// continue reading tag name
    }
  } // Called after the '/' is read from a '</' sequence
  // https://www.w3.org/TR/html51/syntax.html#end-tag-open-state


  function stateEndTagOpen(char) {
    if (char === '>') {
      // parse error. Encountered "</>". Skip it without treating as a tag
      resetToDataState();
    } else if (letterRe.test(char)) {
      state = 3
      /* TagName */
      ;
    } else {
      // some other non-tag-like character, don't treat this as a tag
      resetToDataState();
    }
  } // https://www.w3.org/TR/html51/syntax.html#before-attribute-name-state


  function stateBeforeAttributeName(char) {
    if (whitespaceRe.test(char)) {// stay in BeforeAttributeName state - continue reading chars
    } else if (char === '/') {
      state = 12
      /* SelfClosingStartTag */
      ;
    } else if (char === '>') {
      emitTagAndPreviousTextNode(); // resets to Data state as well
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else if (char === "=" || quoteRe.test(char) || controlCharsRe.test(char)) {
      // "Parse error" characters that, according to the spec, should be
      // appended to the attribute name, but we'll treat these characters
      // as not forming a real HTML tag
      resetToDataState();
    } else {
      // Any other char, start of a new attribute name
      state = 5
      /* AttributeName */
      ;
    }
  } // https://www.w3.org/TR/html51/syntax.html#attribute-name-state


  function stateAttributeName(char) {
    if (whitespaceRe.test(char)) {
      state = 6
      /* AfterAttributeName */
      ;
    } else if (char === '/') {
      state = 12
      /* SelfClosingStartTag */
      ;
    } else if (char === '=') {
      state = 7
      /* BeforeAttributeValue */
      ;
    } else if (char === '>') {
      emitTagAndPreviousTextNode(); // resets to Data state as well
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else if (quoteRe.test(char)) {
      // "Parse error" characters that, according to the spec, should be
      // appended to the attribute name, but we'll treat these characters
      // as not forming a real HTML tag
      resetToDataState();
    } else {// anything else: continue reading attribute name
    }
  } // https://www.w3.org/TR/html51/syntax.html#after-attribute-name-state


  function stateAfterAttributeName(char) {
    if (whitespaceRe.test(char)) {// ignore the character - continue reading
    } else if (char === '/') {
      state = 12
      /* SelfClosingStartTag */
      ;
    } else if (char === '=') {
      state = 7
      /* BeforeAttributeValue */
      ;
    } else if (char === '>') {
      emitTagAndPreviousTextNode();
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else if (quoteRe.test(char)) {
      // "Parse error" characters that, according to the spec, should be
      // appended to the attribute name, but we'll treat these characters
      // as not forming a real HTML tag
      resetToDataState();
    } else {
      // Any other character, start a new attribute in the current tag
      state = 5
      /* AttributeName */
      ;
    }
  } // https://www.w3.org/TR/html51/syntax.html#before-attribute-value-state


  function stateBeforeAttributeValue(char) {
    if (whitespaceRe.test(char)) {// ignore the character - continue reading
    } else if (char === "\"") {
      state = 8
      /* AttributeValueDoubleQuoted */
      ;
    } else if (char === "'") {
      state = 9
      /* AttributeValueSingleQuoted */
      ;
    } else if (/[>=`]/.test(char)) {
      // Invalid chars after an '=' for an attribute value, don't count 
      // the current tag as an HTML tag
      resetToDataState();
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else {
      // Any other character, consider it an unquoted attribute value
      state = 10
      /* AttributeValueUnquoted */
      ;
    }
  } // https://www.w3.org/TR/html51/syntax.html#attribute-value-double-quoted-state


  function stateAttributeValueDoubleQuoted(char) {
    if (char === "\"") {
      // end the current double-quoted attribute
      state = 11
      /* AfterAttributeValueQuoted */
      ;
    } else {// consume the character as part of the double-quoted attribute value
    }
  } // https://www.w3.org/TR/html51/syntax.html#attribute-value-single-quoted-state


  function stateAttributeValueSingleQuoted(char) {
    if (char === "'") {
      // end the current single-quoted attribute
      state = 11
      /* AfterAttributeValueQuoted */
      ;
    } else {// consume the character as part of the double-quoted attribute value
    }
  } // https://www.w3.org/TR/html51/syntax.html#attribute-value-unquoted-state


  function stateAttributeValueUnquoted(char) {
    if (whitespaceRe.test(char)) {
      state = 4
      /* BeforeAttributeName */
      ;
    } else if (char === '>') {
      emitTagAndPreviousTextNode();
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else {// Any other character, treat it as part of the attribute value
    }
  } // https://www.w3.org/TR/html51/syntax.html#after-attribute-value-quoted-state


  function stateAfterAttributeValueQuoted(char) {
    if (whitespaceRe.test(char)) {
      state = 4
      /* BeforeAttributeName */
      ;
    } else if (char === '/') {
      state = 12
      /* SelfClosingStartTag */
      ;
    } else if (char === '>') {
      emitTagAndPreviousTextNode();
    } else if (char === '<') {
      // start of another tag (ignore the previous, incomplete one)
      startNewTag();
    } else {
      // Any other character, "parse error". Spec says to switch to the
      // BeforeAttributeState and re-consume the character, as it may be
      // the start of a new attribute name
      state = 4
      /* BeforeAttributeName */
      ;
      reconsumeCurrentCharacter();
    }
  } // A '/' has just been read in the current tag (presumably for '/>'), and 
  // this handles the next character
  // https://www.w3.org/TR/html51/syntax.html#self-closing-start-tag-state


  function stateSelfClosingStartTag(char) {
    if (char === '>') {
      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        isClosing: true
      }));
      emitTagAndPreviousTextNode(); // resets to Data state as well
    } else {
      state = 4
      /* BeforeAttributeName */
      ;
    }
  } // https://www.w3.org/TR/html51/syntax.html#markup-declaration-open-state
  // (HTML Comments or !DOCTYPE)


  function stateMarkupDeclarationOpen(char) {
    if (html.substr(charIdx, 2) === '--') {
      // html comment
      charIdx += 2; // "consume" characters

      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        type: 'comment'
      }));
      state = 14
      /* CommentStart */
      ;
    } else if (html.substr(charIdx, 7).toUpperCase() === 'DOCTYPE') {
      charIdx += 7; // "consume" characters

      currentTag = new CurrentTag(_assign(_assign({}, currentTag), {
        type: 'doctype'
      }));
      state = 20
      /* Doctype */
      ;
    } else {
      // At this point, the spec specifies that the state machine should
      // enter the "bogus comment" state, in which case any character(s) 
      // after the '<!' that were read should become an HTML comment up
      // until the first '>' that is read (or EOF). Instead, we'll assume
      // that a user just typed '<!' as part of text data
      resetToDataState();
    }
  } // Handles after the sequence '<!--' has been read
  // https://www.w3.org/TR/html51/syntax.html#comment-start-state


  function stateCommentStart(char) {
    if (char === '-') {
      // We've read the sequence '<!---' at this point (3 dashes)
      state = 15
      /* CommentStartDash */
      ;
    } else if (char === '>') {
      // At this point, we'll assume the comment wasn't a real comment
      // so we'll just emit it as data. We basically read the sequence 
      // '<!-->'
      resetToDataState();
    } else {
      // Any other char, take it as part of the comment
      state = 16
      /* Comment */
      ;
    }
  } // We've read the sequence '<!---' at this point (3 dashes)
  // https://www.w3.org/TR/html51/syntax.html#comment-start-dash-state


  function stateCommentStartDash(char) {
    if (char === '-') {
      // We've read '<!----' (4 dashes) at this point
      state = 18
      /* CommentEnd */
      ;
    } else if (char === '>') {
      // At this point, we'll assume the comment wasn't a real comment
      // so we'll just emit it as data. We basically read the sequence 
      // '<!--->'
      resetToDataState();
    } else {
      // Anything else, take it as a valid comment
      state = 16
      /* Comment */
      ;
    }
  } // Currently reading the comment's text (data)
  // https://www.w3.org/TR/html51/syntax.html#comment-state


  function stateComment(char) {
    if (char === '-') {
      state = 17
      /* CommentEndDash */
      ;
    } else {// Any other character, stay in the Comment state
    }
  } // When we we've read the first dash inside a comment, it may signal the
  // end of the comment if we read another dash
  // https://www.w3.org/TR/html51/syntax.html#comment-end-dash-state


  function stateCommentEndDash(char) {
    if (char === '-') {
      state = 18
      /* CommentEnd */
      ;
    } else {
      // Wasn't a dash, must still be part of the comment
      state = 16
      /* Comment */
      ;
    }
  } // After we've read two dashes inside a comment, it may signal the end of 
  // the comment if we then read a '>' char
  // https://www.w3.org/TR/html51/syntax.html#comment-end-state


  function stateCommentEnd(char) {
    if (char === '>') {
      emitTagAndPreviousTextNode();
    } else if (char === '!') {
      state = 19
      /* CommentEndBang */
      ;
    } else if (char === '-') {// A 3rd '-' has been read: stay in the CommentEnd state
    } else {
      // Anything else, switch back to the comment state since we didn't
      // read the full "end comment" sequence (i.e. '-->')
      state = 16
      /* Comment */
      ;
    }
  } // We've read the sequence '--!' inside of a comment
  // https://www.w3.org/TR/html51/syntax.html#comment-end-bang-state


  function stateCommentEndBang(char) {
    if (char === '-') {
      // We read the sequence '--!-' inside of a comment. The last dash
      // could signify that the comment is going to close
      state = 17
      /* CommentEndDash */
      ;
    } else if (char === '>') {
      // End of comment with the sequence '--!>'
      emitTagAndPreviousTextNode();
    } else {
      // The '--!' was not followed by a '>', continue reading the 
      // comment's text
      state = 16
      /* Comment */
      ;
    }
  }
  /**
   * For DOCTYPES in particular, we don't care about the attributes. Just
   * advance to the '>' character and emit the tag, unless we find a '<'
   * character in which case we'll start a new tag.
   *
   * Example doctype tag:
   *    <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
   *
   * Actual spec: https://www.w3.org/TR/html51/syntax.html#doctype-state
   */


  function stateDoctype(char) {
    if (char === '>') {
      emitTagAndPreviousTextNode();
    } else if (char === '<') {
      startNewTag();
    } else {// stay in the Doctype state
    }
  }
  /**
   * Resets the state back to the Data state, and removes the current tag.
   *
   * We'll generally run this function whenever a "parse error" is
   * encountered, where the current tag that is being read no longer looks
   * like a real HTML tag.
   */


  function resetToDataState() {
    state = 0
    /* Data */
    ;
    currentTag = noCurrentTag;
  }
  /**
   * Starts a new HTML tag at the current index, ignoring any previous HTML
   * tag that was being read.
   *
   * We'll generally run this function whenever we read a new '<' character,
   * including when we read a '<' character inside of an HTML tag that we were
   * previously reading.
   */


  function startNewTag() {
    state = 1
    /* TagOpen */
    ;
    currentTag = new CurrentTag({
      idx: charIdx
    });
  }
  /**
   * Once we've decided to emit an open tag, that means we can also emit the
   * text node before it.
   */


  function emitTagAndPreviousTextNode() {
    var textBeforeTag = html.slice(currentDataIdx, currentTag.idx);

    if (textBeforeTag) {
      // the html tag was the first element in the html string, or two 
      // tags next to each other, in which case we should not emit a text 
      // node
      onText(textBeforeTag, currentDataIdx);
    }

    if (currentTag.type === 'comment') {
      onComment(currentTag.idx);
    } else if (currentTag.type === 'doctype') {
      onDoctype(currentTag.idx);
    } else {
      if (currentTag.isOpening) {
        onOpenTag(currentTag.name, currentTag.idx);
      }

      if (currentTag.isClosing) {
        // note: self-closing tags will emit both opening and closing
        onCloseTag(currentTag.name, currentTag.idx);
      }
    } // Since we just emitted a tag, reset to the data state for the next char


    resetToDataState();
    currentDataIdx = charIdx + 1;
  }

  function emitText() {
    var text = html.slice(currentDataIdx, charIdx);
    onText(text, currentDataIdx);
    currentDataIdx = charIdx + 1;
  }
  /**
   * Captures the tag name from the start of the tag to the current character
   * index, and converts it to lower case
   */


  function captureTagName() {
    var startIdx = currentTag.idx + (currentTag.isClosing ? 2 : 1);
    return html.slice(startIdx, charIdx).toLowerCase();
  }
  /**
   * Causes the main loop to re-consume the current character, such as after
   * encountering a "parse error" that changed state and needs to reconsume
   * the same character in that new state.
   */


  function reconsumeCurrentCharacter() {
    charIdx--;
  }
}

var CurrentTag =
/** @class */
function () {
  function CurrentTag(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }

    this.idx = cfg.idx !== undefined ? cfg.idx : -1;
    this.type = cfg.type || 'tag';
    this.name = cfg.name || '';
    this.isOpening = !!cfg.isOpening;
    this.isClosing = !!cfg.isClosing;
  }

  return CurrentTag;
}();
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/autolinker.js
















/**
 * @class Autolinker
 * @extends Object
 *
 * Utility class used to process a given string of text, and wrap the matches in
 * the appropriate anchor (&lt;a&gt;) tags to turn them into links.
 *
 * Any of the configuration options may be provided in an Object provided
 * to the Autolinker constructor, which will configure how the {@link #link link()}
 * method will process the links.
 *
 * For example:
 *
 *     var autolinker = new Autolinker( {
 *         newWindow : false,
 *         truncate  : 30
 *     } );
 *
 *     var html = autolinker.link( "Joe went to www.yahoo.com" );
 *     // produces: 'Joe went to <a href="http://www.yahoo.com">yahoo.com</a>'
 *
 *
 * The {@link #static-link static link()} method may also be used to inline
 * options into a single call, which may be more convenient for one-off uses.
 * For example:
 *
 *     var html = Autolinker.link( "Joe went to www.yahoo.com", {
 *         newWindow : false,
 *         truncate  : 30
 *     } );
 *     // produces: 'Joe went to <a href="http://www.yahoo.com">yahoo.com</a>'
 *
 *
 * ## Custom Replacements of Links
 *
 * If the configuration options do not provide enough flexibility, a {@link #replaceFn}
 * may be provided to fully customize the output of Autolinker. This function is
 * called once for each URL/Email/Phone#/Hashtag/Mention (Twitter, Instagram, Soundcloud)
 * match that is encountered.
 *
 * For example:
 *
 *     var input = "...";  // string with URLs, Email Addresses, Phone #s, Hashtags, and Mentions (Twitter, Instagram, Soundcloud)
 *
 *     var linkedText = Autolinker.link( input, {
 *         replaceFn : function( match ) {
 *             console.log( "href = ", match.getAnchorHref() );
 *             console.log( "text = ", match.getAnchorText() );
 *
 *             switch( match.getType() ) {
 *                 case 'url' :
 *                     console.log( "url: ", match.getUrl() );
 *
 *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {
 *                         var tag = match.buildTag();  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes
 *                         tag.setAttr( 'rel', 'nofollow' );
 *                         tag.addClass( 'external-link' );
 *
 *                         return tag;
 *
 *                     } else {
 *                         return true;  // let Autolinker perform its normal anchor tag replacement
 *                     }
 *
 *                 case 'email' :
 *                     var email = match.getEmail();
 *                     console.log( "email: ", email );
 *
 *                     if( email === "my@own.address" ) {
 *                         return false;  // don't auto-link this particular email address; leave as-is
 *                     } else {
 *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)
 *                     }
 *
 *                 case 'phone' :
 *                     var phoneNumber = match.getPhoneNumber();
 *                     console.log( phoneNumber );
 *
 *                     return '<a href="http://newplace.to.link.phone.numbers.to/">' + phoneNumber + '</a>';
 *
 *                 case 'hashtag' :
 *                     var hashtag = match.getHashtag();
 *                     console.log( hashtag );
 *
 *                     return '<a href="http://newplace.to.link.hashtag.handles.to/">' + hashtag + '</a>';
 *
 *                 case 'mention' :
 *                     var mention = match.getMention();
 *                     console.log( mention );
 *
 *                     return '<a href="http://newplace.to.link.mention.to/">' + mention + '</a>';
 *             }
 *         }
 *     } );
 *
 *
 * The function may return the following values:
 *
 * - `true` (Boolean): Allow Autolinker to replace the match as it normally
 *   would.
 * - `false` (Boolean): Do not replace the current match at all - leave as-is.
 * - Any String: If a string is returned from the function, the string will be
 *   used directly as the replacement HTML for the match.
 * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify
 *   an HTML tag before writing out its HTML text.
 */

var autolinker_Autolinker =
/** @class */
function () {
  /**
   * @method constructor
   * @param {Object} [cfg] The configuration options for the Autolinker instance,
   *   specified in an Object (map).
   */
  function Autolinker(cfg) {
    if (cfg === void 0) {
      cfg = {};
    }
    /**
     * The Autolinker version number exposed on the instance itself.
     *
     * Ex: 0.25.1
     */


    this.version = Autolinker.version;
    /**
     * @cfg {Boolean/Object} [urls]
     *
     * `true` if URLs should be automatically linked, `false` if they should not
     * be. Defaults to `true`.
     *
     * Examples:
     *
     *     urls: true
     *
     *     // or
     *
     *     urls: {
     *         schemeMatches : true,
     *         wwwMatches    : true,
     *         tldMatches    : true
     *     }
     *
     * As shown above, this option also accepts an Object form with 3 properties
     * to allow for more customization of what exactly gets linked. All default
     * to `true`:
     *
     * @cfg {Boolean} [urls.schemeMatches] `true` to match URLs found prefixed
     *   with a scheme, i.e. `http://google.com`, or `other+scheme://google.com`,
     *   `false` to prevent these types of matches.
     * @cfg {Boolean} [urls.wwwMatches] `true` to match urls found prefixed with
     *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of
     *   matches. Note that if the URL had a prefixed scheme, and
     *   `schemeMatches` is true, it will still be linked.
     * @cfg {Boolean} [urls.tldMatches] `true` to match URLs with known top
     *   level domains (.com, .net, etc.) that are not prefixed with a scheme or
     *   `'www.'`. This option attempts to match anything that looks like a URL
     *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`
     *   to prevent these types of matches.
     */

    this.urls = {}; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [email=true]
     *
     * `true` if email addresses should be automatically linked, `false` if they
     * should not be.
     */

    this.email = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [phone=true]
     *
     * `true` if Phone numbers ("(555)555-5555") should be automatically linked,
     * `false` if they should not be.
     */

    this.phone = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean/String} [hashtag=false]
     *
     * A string for the service name to have hashtags (ex: "#myHashtag")
     * auto-linked to. The currently-supported values are:
     *
     * - 'twitter'
     * - 'facebook'
     * - 'instagram'
     *
     * Pass `false` to skip auto-linking of hashtags.
     */

    this.hashtag = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String/Boolean} [mention=false]
     *
     * A string for the service name to have mentions (ex: "@myuser")
     * auto-linked to. The currently supported values are:
     *
     * - 'twitter'
     * - 'instagram'
     * - 'soundcloud'
     *
     * Defaults to `false` to skip auto-linking of mentions.
     */

    this.mention = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [newWindow=true]
     *
     * `true` if the links should open in a new window, `false` otherwise.
     */

    this.newWindow = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean/Object} [stripPrefix=true]
     *
     * `true` if 'http://' (or 'https://') and/or the 'www.' should be stripped
     * from the beginning of URL links' text, `false` otherwise. Defaults to
     * `true`.
     *
     * Examples:
     *
     *     stripPrefix: true
     *
     *     // or
     *
     *     stripPrefix: {
     *         scheme : true,
     *         www    : true
     *     }
     *
     * As shown above, this option also accepts an Object form with 2 properties
     * to allow for more customization of what exactly is prevented from being
     * displayed. Both default to `true`:
     *
     * @cfg {Boolean} [stripPrefix.scheme] `true` to prevent the scheme part of
     *   a URL match from being displayed to the user. Example:
     *   `'http://google.com'` will be displayed as `'google.com'`. `false` to
     *   not strip the scheme. NOTE: Only an `'http://'` or `'https://'` scheme
     *   will be removed, so as not to remove a potentially dangerous scheme
     *   (such as `'file://'` or `'javascript:'`)
     * @cfg {Boolean} [stripPrefix.www] www (Boolean): `true` to prevent the
     *   `'www.'` part of a URL match from being displayed to the user. Ex:
     *   `'www.google.com'` will be displayed as `'google.com'`. `false` to not
     *   strip the `'www'`.
     */

    this.stripPrefix = {
      scheme: true,
      www: true
    }; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [stripTrailingSlash=true]
     *
     * `true` to remove the trailing slash from URL matches, `false` to keep
     *  the trailing slash.
     *
     *  Example when `true`: `http://google.com/` will be displayed as
     *  `http://google.com`.
     */

    this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [decodePercentEncoding=true]
     *
     * `true` to decode percent-encoded characters in URL matches, `false` to keep
     *  the percent-encoded characters.
     *
     *  Example when `true`: `https://en.wikipedia.org/wiki/San_Jos%C3%A9` will
     *  be displayed as `https://en.wikipedia.org/wiki/San_José`.
     */

    this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Number/Object} [truncate=0]
     *
     * ## Number Form
     *
     * A number for how many characters matched text should be truncated to
     * inside the text of a link. If the matched text is over this number of
     * characters, it will be truncated to this length by adding a two period
     * ellipsis ('..') to the end of the string.
     *
     * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'
     * truncated to 25 characters might look something like this:
     * 'yahoo.com/some/long/pat..'
     *
     * Example Usage:
     *
     *     truncate: 25
     *
     *
     *  Defaults to `0` for "no truncation."
     *
     *
     * ## Object Form
     *
     * An Object may also be provided with two properties: `length` (Number) and
     * `location` (String). `location` may be one of the following: 'end'
     * (default), 'middle', or 'smart'.
     *
     * Example Usage:
     *
     *     truncate: { length: 25, location: 'middle' }
     *
     * @cfg {Number} [truncate.length=0] How many characters to allow before
     *   truncation will occur. Defaults to `0` for "no truncation."
     * @cfg {"end"/"middle"/"smart"} [truncate.location="end"]
     *
     * - 'end' (default): will truncate up to the number of characters, and then
     *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'
     * - 'middle': will truncate and add the ellipsis in the middle. Ex:
     *   'yahoo.com/s..th/to/a/file'
     * - 'smart': for URLs where the algorithm attempts to strip out unnecessary
     *   parts first (such as the 'www.', then URL scheme, hash, etc.),
     *   attempting to make the URL human-readable before looking for a good
     *   point to insert the ellipsis if it is still too long. Ex:
     *   'yahoo.com/some..to/a/file'. For more details, see
     *   {@link Autolinker.truncate.TruncateSmart}.
     */

    this.truncate = {
      length: 0,
      location: 'end'
    }; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {String} className
     *
     * A CSS class name to add to the generated links. This class will be added
     * to all links, as well as this class plus match suffixes for styling
     * url/email/phone/hashtag/mention links differently.
     *
     * For example, if this config is provided as "myLink", then:
     *
     * - URL links will have the CSS classes: "myLink myLink-url"
     * - Email links will have the CSS classes: "myLink myLink-email", and
     * - Phone links will have the CSS classes: "myLink myLink-phone"
     * - Hashtag links will have the CSS classes: "myLink myLink-hashtag"
     * - Mention links will have the CSS classes: "myLink myLink-mention myLink-[type]"
     *   where [type] is either "instagram", "twitter" or "soundcloud"
     */

    this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Function} replaceFn
     *
     * A function to individually process each match found in the input string.
     *
     * See the class's description for usage.
     *
     * The `replaceFn` can be called with a different context object (`this`
     * reference) using the {@link #context} cfg.
     *
     * This function is called with the following parameter:
     *
     * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which
     *   can be used to retrieve information about the match that the `replaceFn`
     *   is currently processing. See {@link Autolinker.match.Match} subclasses
     *   for details.
     */

    this.replaceFn = null; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Object} context
     *
     * The context object (`this` reference) to call the `replaceFn` with.
     *
     * Defaults to this Autolinker instance.
     */

    this.context = undefined; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @cfg {Boolean} [sanitizeHtml=false]
     *
     * `true` to HTML-encode the start and end brackets of existing HTML tags found
     * in the input string. This will escape `<` and `>` characters to `&lt;` and
     * `&gt;`, respectively.
     *
     * Setting this to `true` will prevent XSS (Cross-site Scripting) attacks,
     * but will remove the significance of existing HTML tags in the input string. If
     * you would like to maintain the significance of existing HTML tags while also
     * making the output HTML string safe, leave this option as `false` and use a
     * tool like https://github.com/cure53/DOMPurify (or others) on the input string
     * before running Autolinker.
     */

    this.sanitizeHtml = false; // default value just to get the above doc comment in the ES5 output and documentation generator

    /**
     * @private
     * @property {Autolinker.matcher.Matcher[]} matchers
     *
     * The {@link Autolinker.matcher.Matcher} instances for this Autolinker
     * instance.
     *
     * This is lazily created in {@link #getMatchers}.
     */

    this.matchers = null;
    /**
     * @private
     * @property {Autolinker.AnchorTagBuilder} tagBuilder
     *
     * The AnchorTagBuilder instance used to build match replacement anchor tags.
     * Note: this is lazily instantiated in the {@link #getTagBuilder} method.
     */

    this.tagBuilder = null; // Note: when `this.something` is used in the rhs of these assignments,
    //       it refers to the default values set above the constructor

    this.urls = this.normalizeUrlsCfg(cfg.urls);
    this.email = typeof cfg.email === 'boolean' ? cfg.email : this.email;
    this.phone = typeof cfg.phone === 'boolean' ? cfg.phone : this.phone;
    this.hashtag = cfg.hashtag || this.hashtag;
    this.mention = cfg.mention || this.mention;
    this.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : this.newWindow;
    this.stripPrefix = this.normalizeStripPrefixCfg(cfg.stripPrefix);
    this.stripTrailingSlash = typeof cfg.stripTrailingSlash === 'boolean' ? cfg.stripTrailingSlash : this.stripTrailingSlash;
    this.decodePercentEncoding = typeof cfg.decodePercentEncoding === 'boolean' ? cfg.decodePercentEncoding : this.decodePercentEncoding;
    this.sanitizeHtml = cfg.sanitizeHtml || false; // Validate the value of the `mention` cfg

    var mention = this.mention;

    if (mention !== false && mention !== 'twitter' && mention !== 'instagram' && mention !== 'soundcloud') {
      throw new Error("invalid `mention` cfg - see docs");
    } // Validate the value of the `hashtag` cfg


    var hashtag = this.hashtag;

    if (hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram') {
      throw new Error("invalid `hashtag` cfg - see docs");
    }

    this.truncate = this.normalizeTruncateCfg(cfg.truncate);
    this.className = cfg.className || this.className;
    this.replaceFn = cfg.replaceFn || this.replaceFn;
    this.context = cfg.context || this;
  }
  /**
   * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,
   * Hashtags, and Mentions found in the given chunk of HTML. Does not link URLs
   * found within HTML tags.
   *
   * For instance, if given the text: `You should go to http://www.yahoo.com`,
   * then the result will be `You should go to &lt;a href="http://www.yahoo.com"&gt;http://www.yahoo.com&lt;/a&gt;`
   *
   * Example:
   *
   *     var linkedText = Autolinker.link( "Go to google.com", { newWindow: false } );
   *     // Produces: "Go to <a href="http://google.com">google.com</a>"
   *
   * @static
   * @param {String} textOrHtml The HTML or text to find matches within (depending
   *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #mention},
   *   {@link #hashtag}, and {@link #mention} options are enabled).
   * @param {Object} [options] Any of the configuration options for the Autolinker
   *   class, specified in an Object (map). See the class description for an
   *   example call.
   * @return {String} The HTML text, with matches automatically linked.
   */


  Autolinker.link = function (textOrHtml, options) {
    var autolinker = new Autolinker(options);
    return autolinker.link(textOrHtml);
  };
  /**
   * Parses the input `textOrHtml` looking for URLs, email addresses, phone
   * numbers, username handles, and hashtags (depending on the configuration
   * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}
   * objects describing those matches (without making any replacements).
   *
   * Note that if parsing multiple pieces of text, it is slightly more efficient
   * to create an Autolinker instance, and use the instance-level {@link #parse}
   * method.
   *
   * Example:
   *
   *     var matches = Autolinker.parse( "Hello google.com, I am asdf@asdf.com", {
   *         urls: true,
   *         email: true
   *     } );
   *
   *     console.log( matches.length );           // 2
   *     console.log( matches[ 0 ].getType() );   // 'url'
   *     console.log( matches[ 0 ].getUrl() );    // 'google.com'
   *     console.log( matches[ 1 ].getType() );   // 'email'
   *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'
   *
   * @static
   * @param {String} textOrHtml The HTML or text to find matches within
   *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},
   *   {@link #hashtag}, and {@link #mention} options are enabled).
   * @param {Object} [options] Any of the configuration options for the Autolinker
   *   class, specified in an Object (map). See the class description for an
   *   example call.
   * @return {Autolinker.match.Match[]} The array of Matches found in the
   *   given input `textOrHtml`.
   */


  Autolinker.parse = function (textOrHtml, options) {
    var autolinker = new Autolinker(options);
    return autolinker.parse(textOrHtml);
  };
  /**
   * Normalizes the {@link #urls} config into an Object with 3 properties:
   * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.
   *
   * See {@link #urls} config for details.
   *
   * @private
   * @param {Boolean/Object} urls
   * @return {Object}
   */


  Autolinker.prototype.normalizeUrlsCfg = function (urls) {
    if (urls == null) urls = true; // default to `true`

    if (typeof urls === 'boolean') {
      return {
        schemeMatches: urls,
        wwwMatches: urls,
        tldMatches: urls
      };
    } else {
      // object form
      return {
        schemeMatches: typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,
        wwwMatches: typeof urls.wwwMatches === 'boolean' ? urls.wwwMatches : true,
        tldMatches: typeof urls.tldMatches === 'boolean' ? urls.tldMatches : true
      };
    }
  };
  /**
   * Normalizes the {@link #stripPrefix} config into an Object with 2
   * properties: `scheme`, and `www` - both Booleans.
   *
   * See {@link #stripPrefix} config for details.
   *
   * @private
   * @param {Boolean/Object} stripPrefix
   * @return {Object}
   */


  Autolinker.prototype.normalizeStripPrefixCfg = function (stripPrefix) {
    if (stripPrefix == null) stripPrefix = true; // default to `true`

    if (typeof stripPrefix === 'boolean') {
      return {
        scheme: stripPrefix,
        www: stripPrefix
      };
    } else {
      // object form
      return {
        scheme: typeof stripPrefix.scheme === 'boolean' ? stripPrefix.scheme : true,
        www: typeof stripPrefix.www === 'boolean' ? stripPrefix.www : true
      };
    }
  };
  /**
   * Normalizes the {@link #truncate} config into an Object with 2 properties:
   * `length` (Number), and `location` (String).
   *
   * See {@link #truncate} config for details.
   *
   * @private
   * @param {Number/Object} truncate
   * @return {Object}
   */


  Autolinker.prototype.normalizeTruncateCfg = function (truncate) {
    if (typeof truncate === 'number') {
      return {
        length: truncate,
        location: 'end'
      };
    } else {
      // object, or undefined/null
      return defaults(truncate || {}, {
        length: Number.POSITIVE_INFINITY,
        location: 'end'
      });
    }
  };
  /**
   * Parses the input `textOrHtml` looking for URLs, email addresses, phone
   * numbers, username handles, and hashtags (depending on the configuration
   * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}
   * objects describing those matches (without making any replacements).
   *
   * This method is used by the {@link #link} method, but can also be used to
   * simply do parsing of the input in order to discover what kinds of links
   * there are and how many.
   *
   * Example usage:
   *
   *     var autolinker = new Autolinker( {
   *         urls: true,
   *         email: true
   *     } );
   *
   *     var matches = autolinker.parse( "Hello google.com, I am asdf@asdf.com" );
   *
   *     console.log( matches.length );           // 2
   *     console.log( matches[ 0 ].getType() );   // 'url'
   *     console.log( matches[ 0 ].getUrl() );    // 'google.com'
   *     console.log( matches[ 1 ].getType() );   // 'email'
   *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'
   *
   * @param {String} textOrHtml The HTML or text to find matches within
   *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},
   *   {@link #hashtag}, and {@link #mention} options are enabled).
   * @return {Autolinker.match.Match[]} The array of Matches found in the
   *   given input `textOrHtml`.
   */


  Autolinker.prototype.parse = function (textOrHtml) {
    var _this = this;

    var skipTagNames = ['a', 'style', 'script'],
        skipTagsStackCount = 0,
        // used to only Autolink text outside of anchor/script/style tags. We don't want to autolink something that is already linked inside of an <a> tag, for instance
    matches = []; // Find all matches within the `textOrHtml` (but not matches that are
    // already nested within <a>, <style> and <script> tags)

    parseHtml(textOrHtml, {
      onOpenTag: function onOpenTag(tagName) {
        if (skipTagNames.indexOf(tagName) >= 0) {
          skipTagsStackCount++;
        }
      },
      onText: function onText(text, offset) {
        // Only process text nodes that are not within an <a>, <style> or <script> tag
        if (skipTagsStackCount === 0) {
          // "Walk around" common HTML entities. An '&nbsp;' (for example)
          // could be at the end of a URL, but we don't want to 
          // include the trailing '&' in the URL. See issue #76
          // TODO: Handle HTML entities separately in parseHtml() and
          // don't emit them as "text" except for &amp; entities
          var htmlCharacterEntitiesRegex = /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi;
          var textSplit = splitAndCapture(text, htmlCharacterEntitiesRegex);
          var currentOffset_1 = offset;
          textSplit.forEach(function (splitText, i) {
            // even number matches are text, odd numbers are html entities
            if (i % 2 === 0) {
              var textNodeMatches = _this.parseText(splitText, currentOffset_1);

              matches.push.apply(matches, textNodeMatches);
            }

            currentOffset_1 += splitText.length;
          });
        }
      },
      onCloseTag: function onCloseTag(tagName) {
        if (skipTagNames.indexOf(tagName) >= 0) {
          skipTagsStackCount = Math.max(skipTagsStackCount - 1, 0); // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0
        }
      },
      onComment: function onComment(offset) {},
      onDoctype: function onDoctype(offset) {} // no need to process doctype nodes

    }); // After we have found all matches, remove subsequent matches that
    // overlap with a previous match. This can happen for instance with URLs,
    // where the url 'google.com/#link' would match '#link' as a hashtag.

    matches = this.compactMatches(matches); // And finally, remove matches for match types that have been turned
    // off. We needed to have all match types turned on initially so that
    // things like hashtags could be filtered out if they were really just
    // part of a URL match (for instance, as a named anchor).

    matches = this.removeUnwantedMatches(matches);
    return matches;
  };
  /**
   * After we have found all matches, we need to remove matches that overlap
   * with a previous match. This can happen for instance with URLs, where the
   * url 'google.com/#link' would match '#link' as a hashtag. Because the
   * '#link' part is contained in a larger match that comes before the HashTag
   * match, we'll remove the HashTag match.
   *
   * @private
   * @param {Autolinker.match.Match[]} matches
   * @return {Autolinker.match.Match[]}
   */


  Autolinker.prototype.compactMatches = function (matches) {
    // First, the matches need to be sorted in order of offset
    matches.sort(function (a, b) {
      return a.getOffset() - b.getOffset();
    });

    for (var i = 0; i < matches.length - 1; i++) {
      var match = matches[i],
          offset = match.getOffset(),
          matchedTextLength = match.getMatchedText().length,
          endIdx = offset + matchedTextLength;

      if (i + 1 < matches.length) {
        // Remove subsequent matches that equal offset with current match
        if (matches[i + 1].getOffset() === offset) {
          var removeIdx = matches[i + 1].getMatchedText().length > matchedTextLength ? i : i + 1;
          matches.splice(removeIdx, 1);
          continue;
        } // Remove subsequent matches that overlap with the current match


        if (matches[i + 1].getOffset() < endIdx) {
          matches.splice(i + 1, 1);
        }
      }
    }

    return matches;
  };
  /**
   * Removes matches for matchers that were turned off in the options. For
   * example, if {@link #hashtag hashtags} were not to be matched, we'll
   * remove them from the `matches` array here.
   *
   * Note: we *must* use all Matchers on the input string, and then filter
   * them out later. For example, if the options were `{ url: false, hashtag: true }`,
   * we wouldn't want to match the text '#link' as a HashTag inside of the text
   * 'google.com/#link'. The way the algorithm works is that we match the full
   * URL first (which prevents the accidental HashTag match), and then we'll
   * simply throw away the URL match.
   *
   * @private
   * @param {Autolinker.match.Match[]} matches The array of matches to remove
   *   the unwanted matches from. Note: this array is mutated for the
   *   removals.
   * @return {Autolinker.match.Match[]} The mutated input `matches` array.
   */


  Autolinker.prototype.removeUnwantedMatches = function (matches) {
    if (!this.hashtag) remove(matches, function (match) {
      return match.getType() === 'hashtag';
    });
    if (!this.email) remove(matches, function (match) {
      return match.getType() === 'email';
    });
    if (!this.phone) remove(matches, function (match) {
      return match.getType() === 'phone';
    });
    if (!this.mention) remove(matches, function (match) {
      return match.getType() === 'mention';
    });

    if (!this.urls.schemeMatches) {
      remove(matches, function (m) {
        return m.getType() === 'url' && m.getUrlMatchType() === 'scheme';
      });
    }

    if (!this.urls.wwwMatches) {
      remove(matches, function (m) {
        return m.getType() === 'url' && m.getUrlMatchType() === 'www';
      });
    }

    if (!this.urls.tldMatches) {
      remove(matches, function (m) {
        return m.getType() === 'url' && m.getUrlMatchType() === 'tld';
      });
    }

    return matches;
  };
  /**
   * Parses the input `text` looking for URLs, email addresses, phone
   * numbers, username handles, and hashtags (depending on the configuration
   * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}
   * objects describing those matches.
   *
   * This method processes a **non-HTML string**, and is used to parse and
   * match within the text nodes of an HTML string. This method is used
   * internally by {@link #parse}.
   *
   * @private
   * @param {String} text The text to find matches within (depending on if the
   *   {@link #urls}, {@link #email}, {@link #phone},
   *   {@link #hashtag}, and {@link #mention} options are enabled). This must be a non-HTML string.
   * @param {Number} [offset=0] The offset of the text node within the
   *   original string. This is used when parsing with the {@link #parse}
   *   method to generate correct offsets within the {@link Autolinker.match.Match}
   *   instances, but may be omitted if calling this method publicly.
   * @return {Autolinker.match.Match[]} The array of Matches found in the
   *   given input `text`.
   */


  Autolinker.prototype.parseText = function (text, offset) {
    if (offset === void 0) {
      offset = 0;
    }

    offset = offset || 0;
    var matchers = this.getMatchers(),
        matches = [];

    for (var i = 0, numMatchers = matchers.length; i < numMatchers; i++) {
      var textMatches = matchers[i].parseMatches(text); // Correct the offset of each of the matches. They are originally
      // the offset of the match within the provided text node, but we
      // need to correct them to be relative to the original HTML input
      // string (i.e. the one provided to #parse).

      for (var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++) {
        textMatches[j].setOffset(offset + textMatches[j].getOffset());
      }

      matches.push.apply(matches, textMatches);
    }

    return matches;
  };
  /**
   * Automatically links URLs, Email addresses, Phone numbers, Hashtags,
   * and Mentions (Twitter, Instagram, Soundcloud) found in the given chunk of HTML. Does not link
   * URLs found within HTML tags.
   *
   * For instance, if given the text: `You should go to http://www.yahoo.com`,
   * then the result will be `You should go to
   * &lt;a href="http://www.yahoo.com"&gt;http://www.yahoo.com&lt;/a&gt;`
   *
   * This method finds the text around any HTML elements in the input
   * `textOrHtml`, which will be the text that is processed. Any original HTML
   * elements will be left as-is, as well as the text that is already wrapped
   * in anchor (&lt;a&gt;) tags.
   *
   * @param {String} textOrHtml The HTML or text to autolink matches within
   *   (depending on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #hashtag}, and {@link #mention} options are enabled).
   * @return {String} The HTML, with matches automatically linked.
   */


  Autolinker.prototype.link = function (textOrHtml) {
    if (!textOrHtml) {
      return "";
    } // handle `null` and `undefined` (for JavaScript users that don't have TypeScript support)

    /* We would want to sanitize the start and end characters of a tag
     * before processing the string in order to avoid an XSS scenario.
     * This behaviour can be changed by toggling the sanitizeHtml option.
     */


    if (this.sanitizeHtml) {
      textOrHtml = textOrHtml.replace(/</g, '&lt;').replace(/>/g, '&gt;');
    }

    var matches = this.parse(textOrHtml),
        newHtml = [],
        lastIndex = 0;

    for (var i = 0, len = matches.length; i < len; i++) {
      var match = matches[i];
      newHtml.push(textOrHtml.substring(lastIndex, match.getOffset()));
      newHtml.push(this.createMatchReturnVal(match));
      lastIndex = match.getOffset() + match.getMatchedText().length;
    }

    newHtml.push(textOrHtml.substring(lastIndex)); // handle the text after the last match

    return newHtml.join('');
  };
  /**
   * Creates the return string value for a given match in the input string.
   *
   * This method handles the {@link #replaceFn}, if one was provided.
   *
   * @private
   * @param {Autolinker.match.Match} match The Match object that represents
   *   the match.
   * @return {String} The string that the `match` should be replaced with.
   *   This is usually the anchor tag string, but may be the `matchStr` itself
   *   if the match is not to be replaced.
   */


  Autolinker.prototype.createMatchReturnVal = function (match) {
    // Handle a custom `replaceFn` being provided
    var replaceFnResult;

    if (this.replaceFn) {
      replaceFnResult = this.replaceFn.call(this.context, match); // Autolinker instance is the context
    }

    if (typeof replaceFnResult === 'string') {
      return replaceFnResult; // `replaceFn` returned a string, use that
    } else if (replaceFnResult === false) {
      return match.getMatchedText(); // no replacement for the match
    } else if (replaceFnResult instanceof html_tag_HtmlTag) {
      return replaceFnResult.toAnchorString();
    } else {
      // replaceFnResult === true, or no/unknown return value from function
      // Perform Autolinker's default anchor tag generation
      var anchorTag = match.buildTag(); // returns an Autolinker.HtmlTag instance

      return anchorTag.toAnchorString();
    }
  };
  /**
   * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}
   * instances for this Autolinker instance.
   *
   * @private
   * @return {Autolinker.matcher.Matcher[]}
   */


  Autolinker.prototype.getMatchers = function () {
    if (!this.matchers) {
      var tagBuilder = this.getTagBuilder();
      var matchers = [new hashtag_matcher_HashtagMatcher({
        tagBuilder: tagBuilder,
        serviceName: this.hashtag
      }), new email_matcher_EmailMatcher({
        tagBuilder: tagBuilder
      }), new phone_matcher_PhoneMatcher({
        tagBuilder: tagBuilder
      }), new mention_matcher_MentionMatcher({
        tagBuilder: tagBuilder,
        serviceName: this.mention
      }), new url_matcher_UrlMatcher({
        tagBuilder: tagBuilder,
        stripPrefix: this.stripPrefix,
        stripTrailingSlash: this.stripTrailingSlash,
        decodePercentEncoding: this.decodePercentEncoding
      })];
      return this.matchers = matchers;
    } else {
      return this.matchers;
    }
  };
  /**
   * Returns the {@link #tagBuilder} instance for this Autolinker instance,
   * lazily instantiating it if it does not yet exist.
   *
   * @private
   * @return {Autolinker.AnchorTagBuilder}
   */


  Autolinker.prototype.getTagBuilder = function () {
    var tagBuilder = this.tagBuilder;

    if (!tagBuilder) {
      tagBuilder = this.tagBuilder = new anchor_tag_builder_AnchorTagBuilder({
        newWindow: this.newWindow,
        truncate: this.truncate,
        className: this.className
      });
    }

    return tagBuilder;
  };
  /**
   * @static
   * @property {String} version
   *
   * The Autolinker version number in the form major.minor.patch
   *
   * Ex: 0.25.1
   */


  Autolinker.version = '3.14.3';
  /**
   * For backwards compatibility with Autolinker 1.x, the AnchorTagBuilder
   * class is provided as a static on the Autolinker class.
   */

  Autolinker.AnchorTagBuilder = anchor_tag_builder_AnchorTagBuilder;
  /**
   * For backwards compatibility with Autolinker 1.x, the HtmlTag class is
   * provided as a static on the Autolinker class.
   */

  Autolinker.HtmlTag = html_tag_HtmlTag;
  /**
   * For backwards compatibility with Autolinker 1.x, the Matcher classes are
   * provided as statics on the Autolinker class.
   */

  Autolinker.matcher = {
    Email: email_matcher_EmailMatcher,
    Hashtag: hashtag_matcher_HashtagMatcher,
    Matcher: Matcher,
    Mention: mention_matcher_MentionMatcher,
    Phone: phone_matcher_PhoneMatcher,
    Url: url_matcher_UrlMatcher
  };
  /**
   * For backwards compatibility with Autolinker 1.x, the Match classes are
   * provided as statics on the Autolinker class.
   */

  Autolinker.match = {
    Email: email_match_EmailMatch,
    Hashtag: hashtag_match_HashtagMatch,
    Match: Match,
    Mention: mention_match_MentionMatch,
    Phone: phone_match_PhoneMatch,
    Url: url_match_UrlMatch
  };
  return Autolinker;
}();

/* harmony default export */ var es2015_autolinker = (autolinker_Autolinker);
// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/match/index.js






// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/matcher/index.js






// CONCATENATED MODULE: ./node_modules/autolinker/dist/es2015/index.js
// WARNING: This file is modified a bit when it is compiled into index.js in 
// order to support nodejs interoperability with require('autolinker') directly. 
// This is done by the buildSrcFixCommonJsIndexTask() function in the gulpfile. 
// See that function for more details.

/* harmony default export */ var es2015 = (es2015_autolinker);






// CONCATENATED MODULE: ./node_modules/remarkable/dist/esm/linkify.js
 // Autoconvert URL-like texts to links

var LINK_SCAN_RE = /www|@|\:\/\//;

function isLinkOpen(str) {
  return /^<a[>\s]/i.test(str);
}

function isLinkClose(str) {
  return /^<\/a\s*>/i.test(str);
} // Stupid fabric to avoid singletons, for thread safety.
// Required for engines like Nashorn.
//


function createLinkifier() {
  var links = [];
  var autolinker = new es2015({
    stripPrefix: false,
    url: true,
    email: true,
    replaceFn: function replaceFn(match) {
      // Only collect matched strings but don't change anything.
      switch (match.getType()) {
        /*eslint default-case:0*/
        case 'url':
          links.push({
            text: match.matchedText,
            url: match.getUrl()
          });
          break;

        case 'email':
          links.push({
            text: match.matchedText,
            // normalize email protocol
            url: 'mailto:' + match.getEmail().replace(/^mailto:/i, '')
          });
          break;
      }

      return false;
    }
  });
  return {
    links: links,
    autolinker: autolinker
  };
}

function parseTokens(state) {
  var i,
      j,
      l,
      tokens,
      token,
      text,
      nodes,
      ln,
      pos,
      level,
      htmlLinkLevel,
      blockTokens = state.tokens,
      linkifier = null,
      links,
      autolinker;

  for (j = 0, l = blockTokens.length; j < l; j++) {
    if (blockTokens[j].type !== 'inline') {
      continue;
    }

    tokens = blockTokens[j].children;
    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.
    // Use reversed logic in links start/end match

    for (i = tokens.length - 1; i >= 0; i--) {
      token = tokens[i]; // Skip content of markdown links

      if (token.type === 'link_close') {
        i--;

        while (tokens[i].level !== token.level && tokens[i].type !== 'link_open') {
          i--;
        }

        continue;
      } // Skip content of html tag links


      if (token.type === 'htmltag') {
        if (isLinkOpen(token.content) && htmlLinkLevel > 0) {
          htmlLinkLevel--;
        }

        if (isLinkClose(token.content)) {
          htmlLinkLevel++;
        }
      }

      if (htmlLinkLevel > 0) {
        continue;
      }

      if (token.type === 'text' && LINK_SCAN_RE.test(token.content)) {
        // Init linkifier in lazy manner, only if required.
        if (!linkifier) {
          linkifier = createLinkifier();
          links = linkifier.links;
          autolinker = linkifier.autolinker;
        }

        text = token.content;
        links.length = 0;
        autolinker.link(text);

        if (!links.length) {
          continue;
        } // Now split string to nodes


        nodes = [];
        level = token.level;

        for (ln = 0; ln < links.length; ln++) {
          if (!state.inline.validateLink(links[ln].url)) {
            continue;
          }

          pos = text.indexOf(links[ln].text);

          if (pos) {
            nodes.push({
              type: 'text',
              content: text.slice(0, pos),
              level: level
            });
          }

          nodes.push({
            type: 'link_open',
            href: links[ln].url,
            title: '',
            level: level++
          });
          nodes.push({
            type: 'text',
            content: links[ln].text,
            level: level
          });
          nodes.push({
            type: 'link_close',
            level: --level
          });
          text = text.slice(pos + links[ln].text.length);
        }

        if (text.length) {
          nodes.push({
            type: 'text',
            content: text,
            level: level
          });
        } // replace current node


        blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));
      }
    }
  }
}

function linkify(md) {
  md.core.ruler.push('linkify', parseTokens);
}


// EXTERNAL MODULE: ./src/components/MarkdownElement/index.scss
var MarkdownElement = __webpack_require__(71);

// CONCATENATED MODULE: ./src/components/MarkdownElement/index.tsx
var remarkable=new Remarkable("full",{html:true,breaks:true,typographer:true}).use(linkify);function MarkdownElement_MarkdownElement(props){var _props$text=props.text,text=_props$text===void 0?"":_props$text;var html=remarkable.render(text);return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"markdown-body",dangerouslySetInnerHTML:{__html:html}});}
// EXTERNAL MODULE: ./node_modules/cross-fetch/dist/browser-ponyfill.js
var browser_ponyfill = __webpack_require__(31);
var browser_ponyfill_default = /*#__PURE__*/__webpack_require__.n(browser_ponyfill);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(11);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__(13);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js + 3 modules
var createSuper = __webpack_require__(12);

// EXTERNAL MODULE: ./node_modules/@ethersproject/logger/lib.esm/index.js + 1 modules
var logger_lib_esm = __webpack_require__(4);

// CONCATENATED MODULE: ./node_modules/@ethersproject/properties/lib.esm/_version.js
var version = "properties/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/properties/lib.esm/index.js





var lib_esm_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};



var logger = new logger_lib_esm["a" /* Logger */](version);
function defineReadOnly(object, name, value) {
  Object.defineProperty(object, name, {
    enumerable: true,
    value: value,
    writable: false
  });
} // Crawl up the constructor chain to find a static method

function getStatic(ctor, key) {
  for (var i = 0; i < 32; i++) {
    if (ctor[key]) {
      return ctor[key];
    }

    if (!ctor.prototype || typeof ctor.prototype !== "object") {
      break;
    }

    ctor = Object.getPrototypeOf(ctor.prototype).constructor;
  }

  return null;
}
function resolveProperties(object) {
  return lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
    var promises, results;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            promises = Object.keys(object).map(function (key) {
              var value = object[key];
              return Promise.resolve(value).then(function (v) {
                return {
                  key: key,
                  value: v
                };
              });
            });
            _context.next = 3;
            return Promise.all(promises);

          case 3:
            results = _context.sent;
            return _context.abrupt("return", results.reduce(function (accum, result) {
              accum[result.key] = result.value;
              return accum;
            }, {}));

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}
function checkProperties(object, properties) {
  if (!object || typeof object !== "object") {
    logger.throwArgumentError("invalid object", "object", object);
  }

  Object.keys(object).forEach(function (key) {
    if (!properties[key]) {
      logger.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
    }
  });
}
function shallowCopy(object) {
  var result = {};

  for (var key in object) {
    result[key] = object[key];
  }

  return result;
}
var opaque = {
  bigint: true,
  boolean: true,
  "function": true,
  number: true,
  string: true
};

function _isFrozen(object) {
  // Opaque objects are not mutable, so safe to copy by assignment
  if (object === undefined || object === null || opaque[typeof object]) {
    return true;
  }

  if (Array.isArray(object) || typeof object === "object") {
    if (!Object.isFrozen(object)) {
      return false;
    }

    var keys = Object.keys(object);

    for (var i = 0; i < keys.length; i++) {
      var value = null;

      try {
        value = object[keys[i]];
      } catch (error) {
        // If accessing a value triggers an error, it is a getter
        // designed to do so (e.g. Result) and is therefore "frozen"
        continue;
      }

      if (!_isFrozen(value)) {
        return false;
      }
    }

    return true;
  }

  return logger.throwArgumentError("Cannot deepCopy ".concat(typeof object), "object", object);
} // Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.


function _deepCopy(object) {
  if (_isFrozen(object)) {
    return object;
  } // Arrays are mutable, so we need to create a copy


  if (Array.isArray(object)) {
    return Object.freeze(object.map(function (item) {
      return deepCopy(item);
    }));
  }

  if (typeof object === "object") {
    var result = {};

    for (var key in object) {
      var value = object[key];

      if (value === undefined) {
        continue;
      }

      defineReadOnly(result, key, deepCopy(value));
    }

    return result;
  }

  return logger.throwArgumentError("Cannot deepCopy ".concat(typeof object), "object", object);
}

function deepCopy(object) {
  return _deepCopy(object);
}
var lib_esm_Description = function Description(info) {
  Object(classCallCheck["a" /* default */])(this, Description);

  for (var key in info) {
    this[key] = deepCopy(info[key]);
  }
};
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/_version.js
var _version_version = "providers/5.5.0";
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(18);

// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = Object(getPrototypeOf["a" /* default */])(object);
    if (object === null) break;
  }

  return object;
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js

function get_get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    get_get = Reflect.get;
  } else {
    get_get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return get_get(target, property, receiver || target);
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js
var lib_esm_version_version = "abstract-signer/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-signer/lib.esm/index.js









var abstract_signer_lib_esm_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};




var lib_esm_logger = new logger_lib_esm["a" /* Logger */](lib_esm_version_version);
var allowedTransactionKeys = ["accessList", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"];
var forwardErrors = [logger_lib_esm["a" /* Logger */].errors.INSUFFICIENT_FUNDS, logger_lib_esm["a" /* Logger */].errors.NONCE_EXPIRED, logger_lib_esm["a" /* Logger */].errors.REPLACEMENT_UNDERPRICED];
;
;
var lib_esm_Signer = /*#__PURE__*/function () {
  ///////////////////
  // Sub-classes MUST call super
  function Signer() {
    Object(classCallCheck["a" /* default */])(this, Signer);

    lib_esm_logger.checkAbstract(this instanceof Signer ? this.constructor : void 0, Signer);
    defineReadOnly(this, "_isSigner", true);
  } ///////////////////
  // Sub-classes MAY override these


  Object(createClass["a" /* default */])(Signer, [{
    key: "getBalance",
    value: function getBalance(blockTag) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                this._checkProvider("getBalance");

                _context.next = 3;
                return this.provider.getBalance(this.getAddress(), blockTag);

              case 3:
                return _context.abrupt("return", _context.sent);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "getTransactionCount",
    value: function getTransactionCount(blockTag) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this._checkProvider("getTransactionCount");

                _context2.next = 3;
                return this.provider.getTransactionCount(this.getAddress(), blockTag);

              case 3:
                return _context2.abrupt("return", _context2.sent);

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    } // Populates "from" if unspecified, and estimates the gas for the transaction

  }, {
    key: "estimateGas",
    value: function estimateGas(transaction) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
        var tx;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this._checkProvider("estimateGas");

                _context3.next = 3;
                return resolveProperties(this.checkTransaction(transaction));

              case 3:
                tx = _context3.sent;
                _context3.next = 6;
                return this.provider.estimateGas(tx);

              case 6:
                return _context3.abrupt("return", _context3.sent);

              case 7:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
    } // Populates "from" if unspecified, and calls with the transaction

  }, {
    key: "call",
    value: function call(transaction, blockTag) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
        var tx;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this._checkProvider("call");

                _context4.next = 3;
                return resolveProperties(this.checkTransaction(transaction));

              case 3:
                tx = _context4.sent;
                _context4.next = 6;
                return this.provider.call(tx, blockTag);

              case 6:
                return _context4.abrupt("return", _context4.sent);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
    } // Populates all fields in a transaction, signs it and sends it to the network

  }, {
    key: "sendTransaction",
    value: function sendTransaction(transaction) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
        var tx, signedTx;
        return regenerator_default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                this._checkProvider("sendTransaction");

                _context5.next = 3;
                return this.populateTransaction(transaction);

              case 3:
                tx = _context5.sent;
                _context5.next = 6;
                return this.signTransaction(tx);

              case 6:
                signedTx = _context5.sent;
                _context5.next = 9;
                return this.provider.sendTransaction(signedTx);

              case 9:
                return _context5.abrupt("return", _context5.sent);

              case 10:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "getChainId",
    value: function getChainId() {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee6() {
        var network;
        return regenerator_default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                this._checkProvider("getChainId");

                _context6.next = 3;
                return this.provider.getNetwork();

              case 3:
                network = _context6.sent;
                return _context6.abrupt("return", network.chainId);

              case 5:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
    }
  }, {
    key: "getGasPrice",
    value: function getGasPrice() {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee7() {
        return regenerator_default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                this._checkProvider("getGasPrice");

                _context7.next = 3;
                return this.provider.getGasPrice();

              case 3:
                return _context7.abrupt("return", _context7.sent);

              case 4:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
    }
  }, {
    key: "getFeeData",
    value: function getFeeData() {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee8() {
        return regenerator_default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                this._checkProvider("getFeeData");

                _context8.next = 3;
                return this.provider.getFeeData();

              case 3:
                return _context8.abrupt("return", _context8.sent);

              case 4:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
    }
  }, {
    key: "resolveName",
    value: function resolveName(name) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee9() {
        return regenerator_default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                this._checkProvider("resolveName");

                _context9.next = 3;
                return this.provider.resolveName(name);

              case 3:
                return _context9.abrupt("return", _context9.sent);

              case 4:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));
    } // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)

  }, {
    key: "checkTransaction",
    value: function checkTransaction(transaction) {
      for (var key in transaction) {
        if (allowedTransactionKeys.indexOf(key) === -1) {
          lib_esm_logger.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
        }
      }

      var tx = shallowCopy(transaction);

      if (tx.from == null) {
        tx.from = this.getAddress();
      } else {
        // Make sure any provided address matches this signer
        tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(function (result) {
          if (result[0].toLowerCase() !== result[1].toLowerCase()) {
            lib_esm_logger.throwArgumentError("from address mismatch", "transaction", transaction);
          }

          return result[0];
        });
      }

      return tx;
    } // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas

  }, {
    key: "populateTransaction",
    value: function populateTransaction(transaction) {
      return abstract_signer_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee11() {
        var _this = this;

        var tx, hasEip1559, feeData, gasPrice;
        return regenerator_default.a.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return resolveProperties(this.checkTransaction(transaction));

              case 2:
                tx = _context11.sent;

                if (tx.to != null) {
                  tx.to = Promise.resolve(tx.to).then(function (to) {
                    return abstract_signer_lib_esm_awaiter(_this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee10() {
                      var address;
                      return regenerator_default.a.wrap(function _callee10$(_context10) {
                        while (1) {
                          switch (_context10.prev = _context10.next) {
                            case 0:
                              if (!(to == null)) {
                                _context10.next = 2;
                                break;
                              }

                              return _context10.abrupt("return", null);

                            case 2:
                              _context10.next = 4;
                              return this.resolveName(to);

                            case 4:
                              address = _context10.sent;

                              if (address == null) {
                                lib_esm_logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                              }

                              return _context10.abrupt("return", address);

                            case 7:
                            case "end":
                              return _context10.stop();
                          }
                        }
                      }, _callee10, this);
                    }));
                  }); // Prevent this error from causing an UnhandledPromiseException

                  tx.to.catch(function (error) {});
                } // Do not allow mixing pre-eip-1559 and eip-1559 properties


                hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;

                if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
                  lib_esm_logger.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
                } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
                  lib_esm_logger.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
                }

                if (!((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
                  _context11.next = 10;
                  break;
                }

                // Fully-formed EIP-1559 transaction (skip getFeeData)
                tx.type = 2;
                _context11.next = 18;
                break;

              case 10:
                if (!(tx.type === 0 || tx.type === 1)) {
                  _context11.next = 14;
                  break;
                }

                // Explicit Legacy or EIP-2930 transaction
                // Populate missing gasPrice
                if (tx.gasPrice == null) {
                  tx.gasPrice = this.getGasPrice();
                }

                _context11.next = 18;
                break;

              case 14:
                _context11.next = 16;
                return this.getFeeData();

              case 16:
                feeData = _context11.sent;

                if (tx.type == null) {
                  // We need to auto-detect the intended type of this transaction...
                  if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                    // The network supports EIP-1559!
                    // Upgrade transaction from null to eip-1559
                    tx.type = 2;

                    if (tx.gasPrice != null) {
                      // Using legacy gasPrice property on an eip-1559 network,
                      // so use gasPrice as both fee properties
                      gasPrice = tx.gasPrice;
                      delete tx.gasPrice;
                      tx.maxFeePerGas = gasPrice;
                      tx.maxPriorityFeePerGas = gasPrice;
                    } else {
                      // Populate missing fee data
                      if (tx.maxFeePerGas == null) {
                        tx.maxFeePerGas = feeData.maxFeePerGas;
                      }

                      if (tx.maxPriorityFeePerGas == null) {
                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                      }
                    }
                  } else if (feeData.gasPrice != null) {
                    // Network doesn't support EIP-1559...
                    // ...but they are trying to use EIP-1559 properties
                    if (hasEip1559) {
                      lib_esm_logger.throwError("network does not support EIP-1559", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                        operation: "populateTransaction"
                      });
                    } // Populate missing fee data


                    if (tx.gasPrice == null) {
                      tx.gasPrice = feeData.gasPrice;
                    } // Explicitly set untyped transaction to legacy


                    tx.type = 0;
                  } else {
                    // getFeeData has failed us.
                    lib_esm_logger.throwError("failed to get consistent fee data", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                      operation: "signer.getFeeData"
                    });
                  }
                } else if (tx.type === 2) {
                  // Explicitly using EIP-1559
                  // Populate missing fee data
                  if (tx.maxFeePerGas == null) {
                    tx.maxFeePerGas = feeData.maxFeePerGas;
                  }

                  if (tx.maxPriorityFeePerGas == null) {
                    tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                  }
                }

              case 18:
                if (tx.nonce == null) {
                  tx.nonce = this.getTransactionCount("pending");
                }

                if (tx.gasLimit == null) {
                  tx.gasLimit = this.estimateGas(tx).catch(function (error) {
                    if (forwardErrors.indexOf(error.code) >= 0) {
                      throw error;
                    }

                    return lib_esm_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", logger_lib_esm["a" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT, {
                      error: error,
                      tx: tx
                    });
                  });
                }

                if (tx.chainId == null) {
                  tx.chainId = this.getChainId();
                } else {
                  tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(function (results) {
                    if (results[1] !== 0 && results[0] !== results[1]) {
                      lib_esm_logger.throwArgumentError("chainId address mismatch", "transaction", transaction);
                    }

                    return results[0];
                  });
                }

                _context11.next = 23;
                return resolveProperties(tx);

              case 23:
                return _context11.abrupt("return", _context11.sent);

              case 24:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
    } ///////////////////
    // Sub-classes SHOULD leave these alone

  }, {
    key: "_checkProvider",
    value: function _checkProvider(operation) {
      if (!this.provider) {
        lib_esm_logger.throwError("missing provider", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
          operation: operation || "_checkProvider"
        });
      }
    }
  }], [{
    key: "isSigner",
    value: function isSigner(value) {
      return !!(value && value._isSigner);
    }
  }]);

  return Signer;
}();
var lib_esm_VoidSigner = /*#__PURE__*/function (_Signer) {
  Object(inherits["a" /* default */])(VoidSigner, _Signer);

  var _super = Object(createSuper["a" /* default */])(VoidSigner);

  function VoidSigner(address, provider) {
    var _this2;

    Object(classCallCheck["a" /* default */])(this, VoidSigner);

    lib_esm_logger.checkNew(this instanceof VoidSigner ? this.constructor : void 0, VoidSigner);
    _this2 = _super.call(this);
    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this2), "address", address);
    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this2), "provider", provider || null);
    return _this2;
  }

  Object(createClass["a" /* default */])(VoidSigner, [{
    key: "getAddress",
    value: function getAddress() {
      return Promise.resolve(this.address);
    }
  }, {
    key: "_fail",
    value: function _fail(message, operation) {
      return Promise.resolve().then(function () {
        lib_esm_logger.throwError(message, logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
          operation: operation
        });
      });
    }
  }, {
    key: "signMessage",
    value: function signMessage(message) {
      return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
  }, {
    key: "signTransaction",
    value: function signTransaction(transaction) {
      return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
  }, {
    key: "_signTypedData",
    value: function _signTypedData(domain, types, value) {
      return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
  }, {
    key: "connect",
    value: function connect(provider) {
      return new VoidSigner(this.address, provider);
    }
  }]);

  return VoidSigner;
}(lib_esm_Signer);
// EXTERNAL MODULE: ./node_modules/bn.js/lib/bn.js
var bn = __webpack_require__(10);
var bn_default = /*#__PURE__*/__webpack_require__.n(bn);

// CONCATENATED MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/_version.js
var bignumber_lib_esm_version_version = "bignumber/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js

/**
 *  BigNumber
 *
 *  A wrapper around the BN.js object. We use the BN.js library
 *  because it is used by elliptic, so it is required regardless.
 *
 */




var BN = bn_default.a.BN;



var bignumber_logger = new logger_lib_esm["a" /* Logger */](bignumber_lib_esm_version_version);
var _constructorGuard = {};
var MAX_SAFE = 0x1fffffffffffff;
function isBigNumberish(value) {
  return value != null && (bignumber_BigNumber.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || Object(lib_esm["k" /* isHexString */])(value) || typeof value === "bigint" || Object(lib_esm["i" /* isBytes */])(value));
} // Only warn about passing 10 into radix once

var _warnedToStringRadix = false;
var bignumber_BigNumber = /*#__PURE__*/function () {
  function BigNumber(constructorGuard, hex) {
    Object(classCallCheck["a" /* default */])(this, BigNumber);

    bignumber_logger.checkNew(this instanceof BigNumber ? this.constructor : void 0, BigNumber);

    if (constructorGuard !== _constructorGuard) {
      bignumber_logger.throwError("cannot call constructor directly; use BigNumber.from", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
        operation: "new (BigNumber)"
      });
    }

    this._hex = hex;
    this._isBigNumber = true;
    Object.freeze(this);
  }

  Object(createClass["a" /* default */])(BigNumber, [{
    key: "fromTwos",
    value: function fromTwos(value) {
      return toBigNumber(toBN(this).fromTwos(value));
    }
  }, {
    key: "toTwos",
    value: function toTwos(value) {
      return toBigNumber(toBN(this).toTwos(value));
    }
  }, {
    key: "abs",
    value: function abs() {
      if (this._hex[0] === "-") {
        return BigNumber.from(this._hex.substring(1));
      }

      return this;
    }
  }, {
    key: "add",
    value: function add(other) {
      return toBigNumber(toBN(this).add(toBN(other)));
    }
  }, {
    key: "sub",
    value: function sub(other) {
      return toBigNumber(toBN(this).sub(toBN(other)));
    }
  }, {
    key: "div",
    value: function div(other) {
      var o = BigNumber.from(other);

      if (o.isZero()) {
        throwFault("division by zero", "div");
      }

      return toBigNumber(toBN(this).div(toBN(other)));
    }
  }, {
    key: "mul",
    value: function mul(other) {
      return toBigNumber(toBN(this).mul(toBN(other)));
    }
  }, {
    key: "mod",
    value: function mod(other) {
      var value = toBN(other);

      if (value.isNeg()) {
        throwFault("cannot modulo negative values", "mod");
      }

      return toBigNumber(toBN(this).umod(value));
    }
  }, {
    key: "pow",
    value: function pow(other) {
      var value = toBN(other);

      if (value.isNeg()) {
        throwFault("cannot raise to negative values", "pow");
      }

      return toBigNumber(toBN(this).pow(value));
    }
  }, {
    key: "and",
    value: function and(other) {
      var value = toBN(other);

      if (this.isNegative() || value.isNeg()) {
        throwFault("cannot 'and' negative values", "and");
      }

      return toBigNumber(toBN(this).and(value));
    }
  }, {
    key: "or",
    value: function or(other) {
      var value = toBN(other);

      if (this.isNegative() || value.isNeg()) {
        throwFault("cannot 'or' negative values", "or");
      }

      return toBigNumber(toBN(this).or(value));
    }
  }, {
    key: "xor",
    value: function xor(other) {
      var value = toBN(other);

      if (this.isNegative() || value.isNeg()) {
        throwFault("cannot 'xor' negative values", "xor");
      }

      return toBigNumber(toBN(this).xor(value));
    }
  }, {
    key: "mask",
    value: function mask(value) {
      if (this.isNegative() || value < 0) {
        throwFault("cannot mask negative values", "mask");
      }

      return toBigNumber(toBN(this).maskn(value));
    }
  }, {
    key: "shl",
    value: function shl(value) {
      if (this.isNegative() || value < 0) {
        throwFault("cannot shift negative values", "shl");
      }

      return toBigNumber(toBN(this).shln(value));
    }
  }, {
    key: "shr",
    value: function shr(value) {
      if (this.isNegative() || value < 0) {
        throwFault("cannot shift negative values", "shr");
      }

      return toBigNumber(toBN(this).shrn(value));
    }
  }, {
    key: "eq",
    value: function eq(other) {
      return toBN(this).eq(toBN(other));
    }
  }, {
    key: "lt",
    value: function lt(other) {
      return toBN(this).lt(toBN(other));
    }
  }, {
    key: "lte",
    value: function lte(other) {
      return toBN(this).lte(toBN(other));
    }
  }, {
    key: "gt",
    value: function gt(other) {
      return toBN(this).gt(toBN(other));
    }
  }, {
    key: "gte",
    value: function gte(other) {
      return toBN(this).gte(toBN(other));
    }
  }, {
    key: "isNegative",
    value: function isNegative() {
      return this._hex[0] === "-";
    }
  }, {
    key: "isZero",
    value: function isZero() {
      return toBN(this).isZero();
    }
  }, {
    key: "toNumber",
    value: function toNumber() {
      try {
        return toBN(this).toNumber();
      } catch (error) {
        throwFault("overflow", "toNumber", this.toString());
      }

      return null;
    }
  }, {
    key: "toBigInt",
    value: function toBigInt() {
      try {
        return BigInt(this.toString());
      } catch (e) {}

      return bignumber_logger.throwError("this platform does not support BigInt", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
        value: this.toString()
      });
    }
  }, {
    key: "toString",
    value: function toString() {
      // Lots of people expect this, which we do not support, so check (See: #889)
      if (arguments.length > 0) {
        if (arguments[0] === 10) {
          if (!_warnedToStringRadix) {
            _warnedToStringRadix = true;
            bignumber_logger.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
          }
        } else if (arguments[0] === 16) {
          bignumber_logger.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", logger_lib_esm["a" /* Logger */].errors.UNEXPECTED_ARGUMENT, {});
        } else {
          bignumber_logger.throwError("BigNumber.toString does not accept parameters", logger_lib_esm["a" /* Logger */].errors.UNEXPECTED_ARGUMENT, {});
        }
      }

      return toBN(this).toString(10);
    }
  }, {
    key: "toHexString",
    value: function toHexString() {
      return this._hex;
    }
  }, {
    key: "toJSON",
    value: function toJSON(key) {
      return {
        type: "BigNumber",
        hex: this.toHexString()
      };
    }
  }], [{
    key: "from",
    value: function from(value) {
      if (value instanceof BigNumber) {
        return value;
      }

      if (typeof value === "string") {
        if (value.match(/^-?0x[0-9a-f]+$/i)) {
          return new BigNumber(_constructorGuard, toHex(value));
        }

        if (value.match(/^-?[0-9]+$/)) {
          return new BigNumber(_constructorGuard, toHex(new BN(value)));
        }

        return bignumber_logger.throwArgumentError("invalid BigNumber string", "value", value);
      }

      if (typeof value === "number") {
        if (value % 1) {
          throwFault("underflow", "BigNumber.from", value);
        }

        if (value >= MAX_SAFE || value <= -MAX_SAFE) {
          throwFault("overflow", "BigNumber.from", value);
        }

        return BigNumber.from(String(value));
      }

      var anyValue = value;

      if (typeof anyValue === "bigint") {
        return BigNumber.from(anyValue.toString());
      }

      if (Object(lib_esm["i" /* isBytes */])(anyValue)) {
        return BigNumber.from(Object(lib_esm["h" /* hexlify */])(anyValue));
      }

      if (anyValue) {
        // Hexable interface (takes priority)
        if (anyValue.toHexString) {
          var hex = anyValue.toHexString();

          if (typeof hex === "string") {
            return BigNumber.from(hex);
          }
        } else {
          // For now, handle legacy JSON-ified values (goes away in v6)
          var _hex = anyValue._hex; // New-form JSON

          if (_hex == null && anyValue.type === "BigNumber") {
            _hex = anyValue.hex;
          }

          if (typeof _hex === "string") {
            if (Object(lib_esm["k" /* isHexString */])(_hex) || _hex[0] === "-" && Object(lib_esm["k" /* isHexString */])(_hex.substring(1))) {
              return BigNumber.from(_hex);
            }
          }
        }
      }

      return bignumber_logger.throwArgumentError("invalid BigNumber value", "value", value);
    }
  }, {
    key: "isBigNumber",
    value: function isBigNumber(value) {
      return !!(value && value._isBigNumber);
    }
  }]);

  return BigNumber;
}(); // Normalize the hex string

function toHex(value) {
  // For BN, call on the hex string
  if (typeof value !== "string") {
    return toHex(value.toString(16));
  } // If negative, prepend the negative sign to the normalized positive value


  if (value[0] === "-") {
    // Strip off the negative sign
    value = value.substring(1); // Cannot have multiple negative signs (e.g. "--0x04")

    if (value[0] === "-") {
      bignumber_logger.throwArgumentError("invalid hex", "value", value);
    } // Call toHex on the positive component


    value = toHex(value); // Do not allow "-0x00"

    if (value === "0x00") {
      return value;
    } // Negate the value


    return "-" + value;
  } // Add a "0x" prefix if missing


  if (value.substring(0, 2) !== "0x") {
    value = "0x" + value;
  } // Normalize zero


  if (value === "0x") {
    return "0x00";
  } // Make the string even length


  if (value.length % 2) {
    value = "0x0" + value.substring(2);
  } // Trim to smallest even-length string


  while (value.length > 4 && value.substring(0, 4) === "0x00") {
    value = "0x" + value.substring(4);
  }

  return value;
}

function toBigNumber(value) {
  return bignumber_BigNumber.from(toHex(value));
}

function toBN(value) {
  var hex = bignumber_BigNumber.from(value).toHexString();

  if (hex[0] === "-") {
    return new BN("-" + hex.substring(3), 16);
  }

  return new BN(hex.substring(2), 16);
}

function throwFault(fault, operation, value) {
  var params = {
    fault: fault,
    operation: operation
  };

  if (value != null) {
    params.value = value;
  }

  return bignumber_logger.throwError(fault, logger_lib_esm["a" /* Logger */].errors.NUMERIC_FAULT, params);
} // value should have no prefix


function _base36To16(value) {
  return new BN(value, 36).toString(16);
} // value should have no prefix

function _base16To36(value) {
  return new BN(value, 16).toString(36);
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/rlp/lib.esm/_version.js
var rlp_lib_esm_version_version = "rlp/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/rlp/lib.esm/index.js
 //See: https://github.com/ethereum/wiki/wiki/RLP




var rlp_lib_esm_logger = new logger_lib_esm["a" /* Logger */](rlp_lib_esm_version_version);

function arrayifyInteger(value) {
  var result = [];

  while (value) {
    result.unshift(value & 0xff);
    value >>= 8;
  }

  return result;
}

function unarrayifyInteger(data, offset, length) {
  var result = 0;

  for (var i = 0; i < length; i++) {
    result = result * 256 + data[offset + i];
  }

  return result;
}

function _encode(object) {
  if (Array.isArray(object)) {
    var payload = [];
    object.forEach(function (child) {
      payload = payload.concat(_encode(child));
    });

    if (payload.length <= 55) {
      payload.unshift(0xc0 + payload.length);
      return payload;
    }

    var _length = arrayifyInteger(payload.length);

    _length.unshift(0xf7 + _length.length);

    return _length.concat(payload);
  }

  if (!Object(lib_esm["j" /* isBytesLike */])(object)) {
    rlp_lib_esm_logger.throwArgumentError("RLP object must be BytesLike", "object", object);
  }

  var data = Array.prototype.slice.call(Object(lib_esm["a" /* arrayify */])(object));

  if (data.length === 1 && data[0] <= 0x7f) {
    return data;
  } else if (data.length <= 55) {
    data.unshift(0x80 + data.length);
    return data;
  }

  var length = arrayifyInteger(data.length);
  length.unshift(0xb7 + length.length);
  return length.concat(data);
}

function lib_esm_encode(object) {
  return Object(lib_esm["h" /* hexlify */])(_encode(object));
}

function _decodeChildren(data, offset, childOffset, length) {
  var result = [];

  while (childOffset < offset + 1 + length) {
    var decoded = _decode(data, childOffset);

    result.push(decoded.result);
    childOffset += decoded.consumed;

    if (childOffset > offset + 1 + length) {
      rlp_lib_esm_logger.throwError("child data too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }
  }

  return {
    consumed: 1 + length,
    result: result
  };
} // returns { consumed: number, result: Object }


function _decode(data, offset) {
  if (data.length === 0) {
    rlp_lib_esm_logger.throwError("data too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
  } // Array with extra length prefix


  if (data[offset] >= 0xf8) {
    var lengthLength = data[offset] - 0xf7;

    if (offset + 1 + lengthLength > data.length) {
      rlp_lib_esm_logger.throwError("data short segment too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    var length = unarrayifyInteger(data, offset + 1, lengthLength);

    if (offset + 1 + lengthLength + length > data.length) {
      rlp_lib_esm_logger.throwError("data long segment too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
  } else if (data[offset] >= 0xc0) {
    var _length2 = data[offset] - 0xc0;

    if (offset + 1 + _length2 > data.length) {
      rlp_lib_esm_logger.throwError("data array too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    return _decodeChildren(data, offset, offset + 1, _length2);
  } else if (data[offset] >= 0xb8) {
    var _lengthLength = data[offset] - 0xb7;

    if (offset + 1 + _lengthLength > data.length) {
      rlp_lib_esm_logger.throwError("data array too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    var _length3 = unarrayifyInteger(data, offset + 1, _lengthLength);

    if (offset + 1 + _lengthLength + _length3 > data.length) {
      rlp_lib_esm_logger.throwError("data array too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    var result = Object(lib_esm["h" /* hexlify */])(data.slice(offset + 1 + _lengthLength, offset + 1 + _lengthLength + _length3));
    return {
      consumed: 1 + _lengthLength + _length3,
      result: result
    };
  } else if (data[offset] >= 0x80) {
    var _length4 = data[offset] - 0x80;

    if (offset + 1 + _length4 > data.length) {
      rlp_lib_esm_logger.throwError("data too short", logger_lib_esm["a" /* Logger */].errors.BUFFER_OVERRUN, {});
    }

    var _result = Object(lib_esm["h" /* hexlify */])(data.slice(offset + 1, offset + 1 + _length4));

    return {
      consumed: 1 + _length4,
      result: _result
    };
  }

  return {
    consumed: 1,
    result: Object(lib_esm["h" /* hexlify */])(data[offset])
  };
}

function lib_esm_decode(data) {
  var bytes = Object(lib_esm["a" /* arrayify */])(data);

  var decoded = _decode(bytes, 0);

  if (decoded.consumed !== bytes.length) {
    rlp_lib_esm_logger.throwArgumentError("invalid rlp data", "data", data);
  }

  return decoded.result;
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/address/lib.esm/_version.js
var address_lib_esm_version_version = "address/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/address/lib.esm/index.js








var address_lib_esm_logger = new logger_lib_esm["a" /* Logger */](address_lib_esm_version_version);

function getChecksumAddress(address) {
  if (!Object(lib_esm["k" /* isHexString */])(address, 20)) {
    address_lib_esm_logger.throwArgumentError("invalid address", "address", address);
  }

  address = address.toLowerCase();
  var chars = address.substring(2).split("");
  var expanded = new Uint8Array(40);

  for (var i = 0; i < 40; i++) {
    expanded[i] = chars[i].charCodeAt(0);
  }

  var hashed = Object(lib_esm["a" /* arrayify */])(keccak256(expanded));

  for (var _i = 0; _i < 40; _i += 2) {
    if (hashed[_i >> 1] >> 4 >= 8) {
      chars[_i] = chars[_i].toUpperCase();
    }

    if ((hashed[_i >> 1] & 0x0f) >= 8) {
      chars[_i + 1] = chars[_i + 1].toUpperCase();
    }
  }

  return "0x" + chars.join("");
} // Shims for environments that are missing some required constants and functions


var MAX_SAFE_INTEGER = 0x1fffffffffffff;

function log10(x) {
  if (Math.log10) {
    return Math.log10(x);
  }

  return Math.log(x) / Math.LN10;
} // See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table


var ibanLookup = {};

for (var lib_esm_i = 0; lib_esm_i < 10; lib_esm_i++) {
  ibanLookup[String(lib_esm_i)] = String(lib_esm_i);
}

for (var _i2 = 0; _i2 < 26; _i2++) {
  ibanLookup[String.fromCharCode(65 + _i2)] = String(10 + _i2);
} // How many decimal digits can we process? (for 64-bit float, this is 15)


var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));

function ibanChecksum(address) {
  address = address.toUpperCase();
  address = address.substring(4) + address.substring(0, 2) + "00";
  var expanded = address.split("").map(function (c) {
    return ibanLookup[c];
  }).join(""); // Javascript can handle integers safely up to 15 (decimal) digits

  while (expanded.length >= safeDigits) {
    var block = expanded.substring(0, safeDigits);
    expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
  }

  var checksum = String(98 - parseInt(expanded, 10) % 97);

  while (checksum.length < 2) {
    checksum = "0" + checksum;
  }

  return checksum;
}

;
function lib_esm_getAddress(address) {
  var result = null;

  if (typeof address !== "string") {
    address_lib_esm_logger.throwArgumentError("invalid address", "address", address);
  }

  if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
    // Missing the 0x prefix
    if (address.substring(0, 2) !== "0x") {
      address = "0x" + address;
    }

    result = getChecksumAddress(address); // It is a checksummed address with a bad checksum

    if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
      address_lib_esm_logger.throwArgumentError("bad address checksum", "address", address);
    } // Maybe ICAP? (we only support direct mode)

  } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    // It is an ICAP address with a bad checksum
    if (address.substring(2, 4) !== ibanChecksum(address)) {
      address_lib_esm_logger.throwArgumentError("bad icap checksum", "address", address);
    }

    result = _base36To16(address.substring(4));

    while (result.length < 40) {
      result = "0" + result;
    }

    result = getChecksumAddress("0x" + result);
  } else {
    address_lib_esm_logger.throwArgumentError("invalid address", "address", address);
  }

  return result;
}
function isAddress(address) {
  try {
    lib_esm_getAddress(address);
    return true;
  } catch (error) {}

  return false;
}
function getIcapAddress(address) {
  var base36 = _base16To36(lib_esm_getAddress(address).substring(2)).toUpperCase();

  while (base36.length < 30) {
    base36 = "0" + base36;
  }

  return "XE" + ibanChecksum("XE00" + base36) + base36;
} // http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed

function getContractAddress(transaction) {
  var from = null;

  try {
    from = lib_esm_getAddress(transaction.from);
  } catch (error) {
    address_lib_esm_logger.throwArgumentError("missing from address", "transaction", transaction);
  }

  var nonce = Object(lib_esm["n" /* stripZeros */])(Object(lib_esm["a" /* arrayify */])(bignumber_BigNumber.from(transaction.nonce).toHexString()));
  return lib_esm_getAddress(Object(lib_esm["e" /* hexDataSlice */])(keccak256(lib_esm_encode([from, nonce])), 12));
}
function getCreate2Address(from, salt, initCodeHash) {
  if (Object(lib_esm["d" /* hexDataLength */])(salt) !== 32) {
    address_lib_esm_logger.throwArgumentError("salt must be 32 bytes", "salt", salt);
  }

  if (Object(lib_esm["d" /* hexDataLength */])(initCodeHash) !== 32) {
    address_lib_esm_logger.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
  }

  return lib_esm_getAddress(Object(lib_esm["e" /* hexDataSlice */])(keccak256(Object(lib_esm["b" /* concat */])(["0xff", lib_esm_getAddress(from), salt, initCodeHash])), 12));
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/_version.js
var hash_lib_esm_version_version = "hash/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/_version.js
var strings_lib_esm_version_version = "strings/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/utf8.js





var utf8_logger = new logger_lib_esm["a" /* Logger */](strings_lib_esm_version_version); ///////////////////////////////

var UnicodeNormalizationForm;

(function (UnicodeNormalizationForm) {
  UnicodeNormalizationForm["current"] = "";
  UnicodeNormalizationForm["NFC"] = "NFC";
  UnicodeNormalizationForm["NFD"] = "NFD";
  UnicodeNormalizationForm["NFKC"] = "NFKC";
  UnicodeNormalizationForm["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));

;
var Utf8ErrorReason;

(function (Utf8ErrorReason) {
  // A continuation byte was present where there was nothing to continue
  // - offset = the index the codepoint began in
  Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte"; // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
  // - offset = the index the codepoint began in

  Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix"; // The string is too short to process the expected codepoint
  // - offset = the index the codepoint began in

  Utf8ErrorReason["OVERRUN"] = "string overrun"; // A missing continuation byte was expected but not found
  // - offset = the index the continuation byte was expected at

  Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte"; // The computed code point is outside the range for UTF-8
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; outside the UTF-8 range

  Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range"; // UTF-8 strings may not contain UTF-16 surrogate pairs
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range

  Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate"; // The string is an overlong representation
  // - offset       = start of this codepoint
  // - badCodepoint = the computed codepoint; already bounds checked

  Utf8ErrorReason["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));

;

function errorFunc(reason, offset, bytes, output, badCodepoint) {
  return utf8_logger.throwArgumentError("invalid codepoint at offset ".concat(offset, "; ").concat(reason), "bytes", bytes);
}

function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
  // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
  if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
    var i = 0;

    for (var o = offset + 1; o < bytes.length; o++) {
      if (bytes[o] >> 6 !== 0x02) {
        break;
      }

      i++;
    }

    return i;
  } // This byte runs us past the end of the string, so just jump to the end
  // (but the first byte was read already read and therefore skipped)


  if (reason === Utf8ErrorReason.OVERRUN) {
    return bytes.length - offset - 1;
  } // Nothing to skip


  return 0;
}

function replaceFunc(reason, offset, bytes, output, badCodepoint) {
  // Overlong representations are otherwise "valid" code points; just non-deistingtished
  if (reason === Utf8ErrorReason.OVERLONG) {
    output.push(badCodepoint);
    return 0;
  } // Put the replacement character into the output


  output.push(0xfffd); // Otherwise, process as if ignoring errors

  return ignoreFunc(reason, offset, bytes, output, badCodepoint);
} // Common error handing strategies


var Utf8ErrorFuncs = Object.freeze({
  error: errorFunc,
  ignore: ignoreFunc,
  replace: replaceFunc
}); // http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499

function getUtf8CodePoints(bytes, onError) {
  if (onError == null) {
    onError = Utf8ErrorFuncs.error;
  }

  bytes = Object(lib_esm["a" /* arrayify */])(bytes);
  var result = [];
  var i = 0; // Invalid bytes are ignored

  while (i < bytes.length) {
    var c = bytes[i++]; // 0xxx xxxx

    if (c >> 7 === 0) {
      result.push(c);
      continue;
    } // Multibyte; how many bytes left for this character?


    var extraLength = null;
    var overlongMask = null; // 110x xxxx 10xx xxxx

    if ((c & 0xe0) === 0xc0) {
      extraLength = 1;
      overlongMask = 0x7f; // 1110 xxxx 10xx xxxx 10xx xxxx
    } else if ((c & 0xf0) === 0xe0) {
      extraLength = 2;
      overlongMask = 0x7ff; // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
    } else if ((c & 0xf8) === 0xf0) {
      extraLength = 3;
      overlongMask = 0xffff;
    } else {
      if ((c & 0xc0) === 0x80) {
        i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
      } else {
        i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
      }

      continue;
    } // Do we have enough bytes in our data?


    if (i - 1 + extraLength >= bytes.length) {
      i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
      continue;
    } // Remove the length prefix from the char


    var res = c & (1 << 8 - extraLength - 1) - 1;

    for (var j = 0; j < extraLength; j++) {
      var nextChar = bytes[i]; // Invalid continuation byte

      if ((nextChar & 0xc0) != 0x80) {
        i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
        res = null;
        break;
      }

      ;
      res = res << 6 | nextChar & 0x3f;
      i++;
    } // See above loop for invalid continuation byte


    if (res === null) {
      continue;
    } // Maximum code point


    if (res > 0x10ffff) {
      i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
      continue;
    } // Reserved for UTF-16 surrogate halves


    if (res >= 0xd800 && res <= 0xdfff) {
      i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
      continue;
    } // Check for overlong sequences (more bytes than needed)


    if (res <= overlongMask) {
      i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
      continue;
    }

    result.push(res);
  }

  return result;
} // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array


function toUtf8Bytes(str) {
  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnicodeNormalizationForm.current;

  if (form != UnicodeNormalizationForm.current) {
    utf8_logger.checkNormalize();
    str = str.normalize(form);
  }

  var result = [];

  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);

    if (c < 0x80) {
      result.push(c);
    } else if (c < 0x800) {
      result.push(c >> 6 | 0xc0);
      result.push(c & 0x3f | 0x80);
    } else if ((c & 0xfc00) == 0xd800) {
      i++;
      var c2 = str.charCodeAt(i);

      if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
        throw new Error("invalid utf-8 string");
      } // Surrogate Pair


      var pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
      result.push(pair >> 18 | 0xf0);
      result.push(pair >> 12 & 0x3f | 0x80);
      result.push(pair >> 6 & 0x3f | 0x80);
      result.push(pair & 0x3f | 0x80);
    } else {
      result.push(c >> 12 | 0xe0);
      result.push(c >> 6 & 0x3f | 0x80);
      result.push(c & 0x3f | 0x80);
    }
  }

  return Object(lib_esm["a" /* arrayify */])(result);
}
;

function escapeChar(value) {
  var hex = "0000" + value.toString(16);
  return "\\u" + hex.substring(hex.length - 4);
}

function _toEscapedUtf8String(bytes, onError) {
  return '"' + getUtf8CodePoints(bytes, onError).map(function (codePoint) {
    if (codePoint < 256) {
      switch (codePoint) {
        case 8:
          return "\\b";

        case 9:
          return "\\t";

        case 10:
          return "\\n";

        case 13:
          return "\\r";

        case 34:
          return "\\\"";

        case 92:
          return "\\\\";
      }

      if (codePoint >= 32 && codePoint < 127) {
        return String.fromCharCode(codePoint);
      }
    }

    if (codePoint <= 0xffff) {
      return escapeChar(codePoint);
    }

    codePoint -= 0x10000;
    return escapeChar((codePoint >> 10 & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);
  }).join("") + '"';
}
function _toUtf8String(codePoints) {
  return codePoints.map(function (codePoint) {
    if (codePoint <= 0xffff) {
      return String.fromCharCode(codePoint);
    }

    codePoint -= 0x10000;
    return String.fromCharCode((codePoint >> 10 & 0x3ff) + 0xd800, (codePoint & 0x3ff) + 0xdc00);
  }).join("");
}
function toUtf8String(bytes, onError) {
  return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str) {
  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : UnicodeNormalizationForm.current;
  return getUtf8CodePoints(toUtf8Bytes(str, form));
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/id.js


function id_id(text) {
  return keccak256(toUtf8Bytes(text));
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/typed-data.js




var typed_data_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};








var typed_data_logger = new logger_lib_esm["a" /* Logger */](hash_lib_esm_version_version);

var padding = new Uint8Array(32);
padding.fill(0);
var NegativeOne = bignumber_BigNumber.from(-1);
var Zero = bignumber_BigNumber.from(0);
var One = bignumber_BigNumber.from(1);
var MaxUint256 = bignumber_BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

function hexPadRight(value) {
  var bytes = Object(lib_esm["a" /* arrayify */])(value);
  var padOffset = bytes.length % 32;

  if (padOffset) {
    return Object(lib_esm["c" /* hexConcat */])([bytes, padding.slice(padOffset)]);
  }

  return Object(lib_esm["h" /* hexlify */])(bytes);
}

var hexTrue = Object(lib_esm["g" /* hexZeroPad */])(One.toHexString(), 32);
var hexFalse = Object(lib_esm["g" /* hexZeroPad */])(Zero.toHexString(), 32);
var domainFieldTypes = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
};
var domainFieldNames = ["name", "version", "chainId", "verifyingContract", "salt"];

function checkString(key) {
  return function (value) {
    if (typeof value !== "string") {
      typed_data_logger.throwArgumentError("invalid domain value for ".concat(JSON.stringify(key)), "domain.".concat(key), value);
    }

    return value;
  };
}

var domainChecks = {
  name: checkString("name"),
  version: checkString("version"),
  chainId: function chainId(value) {
    try {
      return bignumber_BigNumber.from(value).toString();
    } catch (error) {}

    return typed_data_logger.throwArgumentError("invalid domain value for \"chainId\"", "domain.chainId", value);
  },
  verifyingContract: function verifyingContract(value) {
    try {
      return lib_esm_getAddress(value).toLowerCase();
    } catch (error) {}

    return typed_data_logger.throwArgumentError("invalid domain value \"verifyingContract\"", "domain.verifyingContract", value);
  },
  salt: function salt(value) {
    try {
      var bytes = Object(lib_esm["a" /* arrayify */])(value);

      if (bytes.length !== 32) {
        throw new Error("bad length");
      }

      return Object(lib_esm["h" /* hexlify */])(bytes);
    } catch (error) {}

    return typed_data_logger.throwArgumentError("invalid domain value \"salt\"", "domain.salt", value);
  }
};

function getBaseEncoder(type) {
  // intXX and uintXX
  {
    var match = type.match(/^(u?)int(\d*)$/);

    if (match) {
      var signed = match[1] === "";
      var width = parseInt(match[2] || "256");

      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
        typed_data_logger.throwArgumentError("invalid numeric width", "type", type);
      }

      var boundsUpper = MaxUint256.mask(signed ? width - 1 : width);
      var boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
      return function (value) {
        var v = bignumber_BigNumber.from(value);

        if (v.lt(boundsLower) || v.gt(boundsUpper)) {
          typed_data_logger.throwArgumentError("value out-of-bounds for ".concat(type), "value", value);
        }

        return Object(lib_esm["g" /* hexZeroPad */])(v.toTwos(256).toHexString(), 32);
      };
    }
  } // bytesXX

  {
    var _match = type.match(/^bytes(\d+)$/);

    if (_match) {
      var _width = parseInt(_match[1]);

      if (_width === 0 || _width > 32 || _match[1] !== String(_width)) {
        typed_data_logger.throwArgumentError("invalid bytes width", "type", type);
      }

      return function (value) {
        var bytes = Object(lib_esm["a" /* arrayify */])(value);

        if (bytes.length !== _width) {
          typed_data_logger.throwArgumentError("invalid length for ".concat(type), "value", value);
        }

        return hexPadRight(value);
      };
    }
  }

  switch (type) {
    case "address":
      return function (value) {
        return Object(lib_esm["g" /* hexZeroPad */])(lib_esm_getAddress(value), 32);
      };

    case "bool":
      return function (value) {
        return !value ? hexFalse : hexTrue;
      };

    case "bytes":
      return function (value) {
        return keccak256(value);
      };

    case "string":
      return function (value) {
        return id_id(value);
      };
  }

  return null;
}

function encodeType(name, fields) {
  return "".concat(name, "(").concat(fields.map(function (_ref) {
    var name = _ref.name,
        type = _ref.type;
    return type + " " + name;
  }).join(","), ")");
}

var typed_data_TypedDataEncoder = /*#__PURE__*/function () {
  function TypedDataEncoder(types) {
    Object(classCallCheck["a" /* default */])(this, TypedDataEncoder);

    defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
    defineReadOnly(this, "_encoderCache", {});
    defineReadOnly(this, "_types", {}); // Link struct types to their direct child structs

    var links = {}; // Link structs to structs which contain them as a child

    var parents = {}; // Link all subtypes within a given struct

    var subtypes = {};
    Object.keys(types).forEach(function (type) {
      links[type] = {};
      parents[type] = [];
      subtypes[type] = {};
    });

    var _loop = function _loop(name) {
      var uniqueNames = {};
      types[name].forEach(function (field) {
        // Check each field has a unique name
        if (uniqueNames[field.name]) {
          typed_data_logger.throwArgumentError("duplicate variable name ".concat(JSON.stringify(field.name), " in ").concat(JSON.stringify(name)), "types", types);
        }

        uniqueNames[field.name] = true; // Get the base type (drop any array specifiers)

        var baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];

        if (baseType === name) {
          typed_data_logger.throwArgumentError("circular type reference to ".concat(JSON.stringify(baseType)), "types", types);
        } // Is this a base encoding type?


        var encoder = getBaseEncoder(baseType);

        if (encoder) {
          return;
        }

        if (!parents[baseType]) {
          typed_data_logger.throwArgumentError("unknown type ".concat(JSON.stringify(baseType)), "types", types);
        } // Add linkage


        parents[baseType].push(name);
        links[name][baseType] = true;
      });
    };

    for (var name in types) {
      _loop(name);
    } // Deduce the primary type


    var primaryTypes = Object.keys(parents).filter(function (n) {
      return parents[n].length === 0;
    });

    if (primaryTypes.length === 0) {
      typed_data_logger.throwArgumentError("missing primary type", "types", types);
    } else if (primaryTypes.length > 1) {
      typed_data_logger.throwArgumentError("ambiguous primary types or unused types: ".concat(primaryTypes.map(function (t) {
        return JSON.stringify(t);
      }).join(", ")), "types", types);
    }

    defineReadOnly(this, "primaryType", primaryTypes[0]); // Check for circular type references

    function checkCircular(type, found) {
      if (found[type]) {
        typed_data_logger.throwArgumentError("circular type reference to ".concat(JSON.stringify(type)), "types", types);
      }

      found[type] = true;
      Object.keys(links[type]).forEach(function (child) {
        if (!parents[child]) {
          return;
        } // Recursively check children


        checkCircular(child, found); // Mark all ancestors as having this decendant

        Object.keys(found).forEach(function (subtype) {
          subtypes[subtype][child] = true;
        });
      });
      delete found[type];
    }

    checkCircular(this.primaryType, {}); // Compute each fully describe type

    for (var _name in subtypes) {
      var st = Object.keys(subtypes[_name]);
      st.sort();
      this._types[_name] = encodeType(_name, types[_name]) + st.map(function (t) {
        return encodeType(t, types[t]);
      }).join("");
    }
  }

  Object(createClass["a" /* default */])(TypedDataEncoder, [{
    key: "getEncoder",
    value: function getEncoder(type) {
      var encoder = this._encoderCache[type];

      if (!encoder) {
        encoder = this._encoderCache[type] = this._getEncoder(type);
      }

      return encoder;
    }
  }, {
    key: "_getEncoder",
    value: function _getEncoder(type) {
      var _this = this;

      // Basic encoder type (address, bool, uint256, etc)
      {
        var encoder = getBaseEncoder(type);

        if (encoder) {
          return encoder;
        }
      } // Array

      var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);

      if (match) {
        var subtype = match[1];
        var subEncoder = this.getEncoder(subtype);
        var length = parseInt(match[3]);
        return function (value) {
          if (length >= 0 && value.length !== length) {
            typed_data_logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
          }

          var result = value.map(subEncoder);

          if (_this._types[subtype]) {
            result = result.map(keccak256);
          }

          return keccak256(Object(lib_esm["c" /* hexConcat */])(result));
        };
      } // Struct


      var fields = this.types[type];

      if (fields) {
        var encodedType = id_id(this._types[type]);
        return function (value) {
          var values = fields.map(function (_ref2) {
            var name = _ref2.name,
                type = _ref2.type;

            var result = _this.getEncoder(type)(value[name]);

            if (_this._types[type]) {
              return keccak256(result);
            }

            return result;
          });
          values.unshift(encodedType);
          return Object(lib_esm["c" /* hexConcat */])(values);
        };
      }

      return typed_data_logger.throwArgumentError("unknown type: ".concat(type), "type", type);
    }
  }, {
    key: "encodeType",
    value: function encodeType(name) {
      var result = this._types[name];

      if (!result) {
        typed_data_logger.throwArgumentError("unknown type: ".concat(JSON.stringify(name)), "name", name);
      }

      return result;
    }
  }, {
    key: "encodeData",
    value: function encodeData(type, value) {
      return this.getEncoder(type)(value);
    }
  }, {
    key: "hashStruct",
    value: function hashStruct(name, value) {
      return keccak256(this.encodeData(name, value));
    }
  }, {
    key: "encode",
    value: function encode(value) {
      return this.encodeData(this.primaryType, value);
    }
  }, {
    key: "hash",
    value: function hash(value) {
      return this.hashStruct(this.primaryType, value);
    }
  }, {
    key: "_visit",
    value: function _visit(type, value, callback) {
      var _this2 = this;

      // Basic encoder type (address, bool, uint256, etc)
      {
        var encoder = getBaseEncoder(type);

        if (encoder) {
          return callback(type, value);
        }
      } // Array

      var match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);

      if (match) {
        var subtype = match[1];
        var length = parseInt(match[3]);

        if (length >= 0 && value.length !== length) {
          typed_data_logger.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }

        return value.map(function (v) {
          return _this2._visit(subtype, v, callback);
        });
      } // Struct


      var fields = this.types[type];

      if (fields) {
        return fields.reduce(function (accum, _ref3) {
          var name = _ref3.name,
              type = _ref3.type;
          accum[name] = _this2._visit(type, value[name], callback);
          return accum;
        }, {});
      }

      return typed_data_logger.throwArgumentError("unknown type: ".concat(type), "type", type);
    }
  }, {
    key: "visit",
    value: function visit(value, callback) {
      return this._visit(this.primaryType, value, callback);
    }
  }], [{
    key: "from",
    value: function from(types) {
      return new TypedDataEncoder(types);
    }
  }, {
    key: "getPrimaryType",
    value: function getPrimaryType(types) {
      return TypedDataEncoder.from(types).primaryType;
    }
  }, {
    key: "hashStruct",
    value: function hashStruct(name, types, value) {
      return TypedDataEncoder.from(types).hashStruct(name, value);
    }
  }, {
    key: "hashDomain",
    value: function hashDomain(domain) {
      var domainFields = [];

      for (var name in domain) {
        var type = domainFieldTypes[name];

        if (!type) {
          typed_data_logger.throwArgumentError("invalid typed-data domain key: ".concat(JSON.stringify(name)), "domain", domain);
        }

        domainFields.push({
          name: name,
          type: type
        });
      }

      domainFields.sort(function (a, b) {
        return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
      });
      return TypedDataEncoder.hashStruct("EIP712Domain", {
        EIP712Domain: domainFields
      }, domain);
    }
  }, {
    key: "encode",
    value: function encode(domain, types, value) {
      return Object(lib_esm["c" /* hexConcat */])(["0x1901", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);
    }
  }, {
    key: "hash",
    value: function hash(domain, types, value) {
      return keccak256(TypedDataEncoder.encode(domain, types, value));
    } // Replaces all address types with ENS names with their looked up address

  }, {
    key: "resolveNames",
    value: function resolveNames(domain, types, value, resolveName) {
      return typed_data_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var ensCache, encoder, name;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // Make a copy to isolate it from the object passed in
                domain = shallowCopy(domain); // Look up all ENS names

                ensCache = {}; // Do we need to look up the domain's verifyingContract?

                if (domain.verifyingContract && !Object(lib_esm["k" /* isHexString */])(domain.verifyingContract, 20)) {
                  ensCache[domain.verifyingContract] = "0x";
                } // We are going to use the encoder to visit all the base values


                encoder = TypedDataEncoder.from(types); // Get a list of all the addresses

                encoder.visit(value, function (type, value) {
                  if (type === "address" && !Object(lib_esm["k" /* isHexString */])(value, 20)) {
                    ensCache[value] = "0x";
                  }

                  return value;
                }); // Lookup each name

                _context.t0 = regenerator_default.a.keys(ensCache);

              case 6:
                if ((_context.t1 = _context.t0()).done) {
                  _context.next = 13;
                  break;
                }

                name = _context.t1.value;
                _context.next = 10;
                return resolveName(name);

              case 10:
                ensCache[name] = _context.sent;
                _context.next = 6;
                break;

              case 13:
                // Replace the domain verifyingContract if needed
                if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                  domain.verifyingContract = ensCache[domain.verifyingContract];
                } // Replace all ENS names with their address


                value = encoder.visit(value, function (type, value) {
                  if (type === "address" && ensCache[value]) {
                    return ensCache[value];
                  }

                  return value;
                });
                return _context.abrupt("return", {
                  domain: domain,
                  value: value
                });

              case 16:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
    }
  }, {
    key: "getPayload",
    value: function getPayload(domain, types, value) {
      // Validate the domain fields
      TypedDataEncoder.hashDomain(domain); // Derive the EIP712Domain Struct reference type

      var domainValues = {};
      var domainTypes = [];
      domainFieldNames.forEach(function (name) {
        var value = domain[name];

        if (value == null) {
          return;
        }

        domainValues[name] = domainChecks[name](value);
        domainTypes.push({
          name: name,
          type: domainFieldTypes[name]
        });
      });
      var encoder = TypedDataEncoder.from(types);
      var typesWithDomain = shallowCopy(types);

      if (typesWithDomain.EIP712Domain) {
        typed_data_logger.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
      } else {
        typesWithDomain.EIP712Domain = domainTypes;
      } // Validate the data structures and types


      encoder.encode(value);
      return {
        types: typesWithDomain,
        domain: domainValues,
        primaryType: encoder.primaryType,
        message: encoder.visit(value, function (type, value) {
          // bytes
          if (type.match(/^bytes(\d*)/)) {
            return Object(lib_esm["h" /* hexlify */])(Object(lib_esm["a" /* arrayify */])(value));
          } // uint or int


          if (type.match(/^u?int/)) {
            return bignumber_BigNumber.from(value).toString();
          }

          switch (type) {
            case "address":
              return value.toLowerCase();

            case "bool":
              return !!value;

            case "string":
              if (typeof value !== "string") {
                typed_data_logger.throwArgumentError("invalid string", "value", value);
              }

              return value;
          }

          return typed_data_logger.throwArgumentError("unsupported type", "type", type);
        })
      };
    }
  }]);

  return TypedDataEncoder;
}();
// CONCATENATED MODULE: ./node_modules/@ethersproject/constants/lib.esm/bignumbers.js

var bignumbers_NegativeOne = /*#__PURE__*/bignumber_BigNumber.from(-1);
var bignumbers_Zero = /*#__PURE__*/bignumber_BigNumber.from(0);
var bignumbers_One = /*#__PURE__*/bignumber_BigNumber.from(1);
var Two = /*#__PURE__*/bignumber_BigNumber.from(2);
var WeiPerEther = /*#__PURE__*/bignumber_BigNumber.from("1000000000000000000");
var bignumbers_MaxUint256 = /*#__PURE__*/bignumber_BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
var MinInt256 = /*#__PURE__*/bignumber_BigNumber.from("-0x8000000000000000000000000000000000000000000000000000000000000000");
var MaxInt256 = /*#__PURE__*/bignumber_BigNumber.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

// EXTERNAL MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/elliptic.js
var elliptic = __webpack_require__(51);

// CONCATENATED MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/_version.js
var signing_key_lib_esm_version_version = "signing-key/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/index.js









var signing_key_lib_esm_logger = new logger_lib_esm["a" /* Logger */](signing_key_lib_esm_version_version);
var _curve = null;

function getCurve() {
  if (!_curve) {
    _curve = new elliptic["a" /* EC */]("secp256k1");
  }

  return _curve;
}

var lib_esm_SigningKey = /*#__PURE__*/function () {
  function SigningKey(privateKey) {
    Object(classCallCheck["a" /* default */])(this, SigningKey);

    defineReadOnly(this, "curve", "secp256k1");
    defineReadOnly(this, "privateKey", Object(lib_esm["h" /* hexlify */])(privateKey));
    var keyPair = getCurve().keyFromPrivate(Object(lib_esm["a" /* arrayify */])(this.privateKey));
    defineReadOnly(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
    defineReadOnly(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
    defineReadOnly(this, "_isSigningKey", true);
  }

  Object(createClass["a" /* default */])(SigningKey, [{
    key: "_addPoint",
    value: function _addPoint(other) {
      var p0 = getCurve().keyFromPublic(Object(lib_esm["a" /* arrayify */])(this.publicKey));
      var p1 = getCurve().keyFromPublic(Object(lib_esm["a" /* arrayify */])(other));
      return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
  }, {
    key: "signDigest",
    value: function signDigest(digest) {
      var keyPair = getCurve().keyFromPrivate(Object(lib_esm["a" /* arrayify */])(this.privateKey));
      var digestBytes = Object(lib_esm["a" /* arrayify */])(digest);

      if (digestBytes.length !== 32) {
        signing_key_lib_esm_logger.throwArgumentError("bad digest length", "digest", digest);
      }

      var signature = keyPair.sign(digestBytes, {
        canonical: true
      });
      return Object(lib_esm["m" /* splitSignature */])({
        recoveryParam: signature.recoveryParam,
        r: Object(lib_esm["g" /* hexZeroPad */])("0x" + signature.r.toString(16), 32),
        s: Object(lib_esm["g" /* hexZeroPad */])("0x" + signature.s.toString(16), 32)
      });
    }
  }, {
    key: "computeSharedSecret",
    value: function computeSharedSecret(otherKey) {
      var keyPair = getCurve().keyFromPrivate(Object(lib_esm["a" /* arrayify */])(this.privateKey));
      var otherKeyPair = getCurve().keyFromPublic(Object(lib_esm["a" /* arrayify */])(computePublicKey(otherKey)));
      return Object(lib_esm["g" /* hexZeroPad */])("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
  }], [{
    key: "isSigningKey",
    value: function isSigningKey(value) {
      return !!(value && value._isSigningKey);
    }
  }]);

  return SigningKey;
}();
function recoverPublicKey(digest, signature) {
  var sig = Object(lib_esm["m" /* splitSignature */])(signature);
  var rs = {
    r: Object(lib_esm["a" /* arrayify */])(sig.r),
    s: Object(lib_esm["a" /* arrayify */])(sig.s)
  };
  return "0x" + getCurve().recoverPubKey(Object(lib_esm["a" /* arrayify */])(digest), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key, compressed) {
  var bytes = Object(lib_esm["a" /* arrayify */])(key);

  if (bytes.length === 32) {
    var signingKey = new lib_esm_SigningKey(bytes);

    if (compressed) {
      return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
    }

    return signingKey.publicKey;
  } else if (bytes.length === 33) {
    if (compressed) {
      return Object(lib_esm["h" /* hexlify */])(bytes);
    }

    return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
  } else if (bytes.length === 65) {
    if (!compressed) {
      return Object(lib_esm["h" /* hexlify */])(bytes);
    }

    return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
  }

  return signing_key_lib_esm_logger.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/transactions/lib.esm/_version.js
var transactions_lib_esm_version_version = "transactions/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/transactions/lib.esm/index.js












var transactions_lib_esm_logger = new logger_lib_esm["a" /* Logger */](transactions_lib_esm_version_version);
var TransactionTypes;

(function (TransactionTypes) {
  TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
  TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
  TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));

; ///////////////////////////////

function handleAddress(value) {
  if (value === "0x") {
    return null;
  }

  return lib_esm_getAddress(value);
}

function handleNumber(value) {
  if (value === "0x") {
    return bignumbers_Zero;
  }

  return bignumber_BigNumber.from(value);
} // Legacy Transaction Fields


var transactionFields = [{
  name: "nonce",
  maxLength: 32,
  numeric: true
}, {
  name: "gasPrice",
  maxLength: 32,
  numeric: true
}, {
  name: "gasLimit",
  maxLength: 32,
  numeric: true
}, {
  name: "to",
  length: 20
}, {
  name: "value",
  maxLength: 32,
  numeric: true
}, {
  name: "data"
}];
var lib_esm_allowedTransactionKeys = {
  chainId: true,
  data: true,
  gasLimit: true,
  gasPrice: true,
  nonce: true,
  to: true,
  type: true,
  value: true
};
function computeAddress(key) {
  var publicKey = computePublicKey(key);
  return lib_esm_getAddress(Object(lib_esm["e" /* hexDataSlice */])(keccak256(Object(lib_esm["e" /* hexDataSlice */])(publicKey, 1)), 12));
}
function recoverAddress(digest, signature) {
  return computeAddress(recoverPublicKey(Object(lib_esm["a" /* arrayify */])(digest), signature));
}

function formatNumber(value, name) {
  var result = Object(lib_esm["n" /* stripZeros */])(bignumber_BigNumber.from(value).toHexString());

  if (result.length > 32) {
    transactions_lib_esm_logger.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
  }

  return result;
}

function accessSetify(addr, storageKeys) {
  return {
    address: lib_esm_getAddress(addr),
    storageKeys: (storageKeys || []).map(function (storageKey, index) {
      if (Object(lib_esm["d" /* hexDataLength */])(storageKey) !== 32) {
        transactions_lib_esm_logger.throwArgumentError("invalid access list storageKey", "accessList[".concat(addr, ":").concat(index, "]"), storageKey);
      }

      return storageKey.toLowerCase();
    })
  };
}

function accessListify(value) {
  if (Array.isArray(value)) {
    return value.map(function (set, index) {
      if (Array.isArray(set)) {
        if (set.length > 2) {
          transactions_lib_esm_logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]", "value[".concat(index, "]"), set);
        }

        return accessSetify(set[0], set[1]);
      }

      return accessSetify(set.address, set.storageKeys);
    });
  }

  var result = Object.keys(value).map(function (addr) {
    var storageKeys = value[addr].reduce(function (accum, storageKey) {
      accum[storageKey] = true;
      return accum;
    }, {});
    return accessSetify(addr, Object.keys(storageKeys).sort());
  });
  result.sort(function (a, b) {
    return a.address.localeCompare(b.address);
  });
  return result;
}

function formatAccessList(value) {
  return accessListify(value).map(function (set) {
    return [set.address, set.storageKeys];
  });
}

function _serializeEip1559(transaction, signature) {
  // If there is an explicit gasPrice, make sure it matches the
  // EIP-1559 fees; otherwise they may not understand what they
  // think they are setting in terms of fee.
  if (transaction.gasPrice != null) {
    var gasPrice = bignumber_BigNumber.from(transaction.gasPrice);
    var maxFeePerGas = bignumber_BigNumber.from(transaction.maxFeePerGas || 0);

    if (!gasPrice.eq(maxFeePerGas)) {
      transactions_lib_esm_logger.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
        gasPrice: gasPrice,
        maxFeePerGas: maxFeePerGas
      });
    }
  }

  var fields = [formatNumber(transaction.chainId || 0, "chainId"), formatNumber(transaction.nonce || 0, "nonce"), formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"), formatNumber(transaction.gasLimit || 0, "gasLimit"), transaction.to != null ? lib_esm_getAddress(transaction.to) : "0x", formatNumber(transaction.value || 0, "value"), transaction.data || "0x", formatAccessList(transaction.accessList || [])];

  if (signature) {
    var sig = Object(lib_esm["m" /* splitSignature */])(signature);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(Object(lib_esm["n" /* stripZeros */])(sig.r));
    fields.push(Object(lib_esm["n" /* stripZeros */])(sig.s));
  }

  return Object(lib_esm["c" /* hexConcat */])(["0x02", lib_esm_encode(fields)]);
}

function _serializeEip2930(transaction, signature) {
  var fields = [formatNumber(transaction.chainId || 0, "chainId"), formatNumber(transaction.nonce || 0, "nonce"), formatNumber(transaction.gasPrice || 0, "gasPrice"), formatNumber(transaction.gasLimit || 0, "gasLimit"), transaction.to != null ? lib_esm_getAddress(transaction.to) : "0x", formatNumber(transaction.value || 0, "value"), transaction.data || "0x", formatAccessList(transaction.accessList || [])];

  if (signature) {
    var sig = Object(lib_esm["m" /* splitSignature */])(signature);
    fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
    fields.push(Object(lib_esm["n" /* stripZeros */])(sig.r));
    fields.push(Object(lib_esm["n" /* stripZeros */])(sig.s));
  }

  return Object(lib_esm["c" /* hexConcat */])(["0x01", lib_esm_encode(fields)]);
} // Legacy Transactions and EIP-155


function _serialize(transaction, signature) {
  checkProperties(transaction, lib_esm_allowedTransactionKeys);
  var raw = [];
  transactionFields.forEach(function (fieldInfo) {
    var value = transaction[fieldInfo.name] || [];
    var options = {};

    if (fieldInfo.numeric) {
      options.hexPad = "left";
    }

    value = Object(lib_esm["a" /* arrayify */])(Object(lib_esm["h" /* hexlify */])(value, options)); // Fixed-width field

    if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
      transactions_lib_esm_logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
    } // Variable-width (with a maximum)


    if (fieldInfo.maxLength) {
      value = Object(lib_esm["n" /* stripZeros */])(value);

      if (value.length > fieldInfo.maxLength) {
        transactions_lib_esm_logger.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
      }
    }

    raw.push(Object(lib_esm["h" /* hexlify */])(value));
  });
  var chainId = 0;

  if (transaction.chainId != null) {
    // A chainId was provided; if non-zero we'll use EIP-155
    chainId = transaction.chainId;

    if (typeof chainId !== "number") {
      transactions_lib_esm_logger.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
    }
  } else if (signature && !Object(lib_esm["j" /* isBytesLike */])(signature) && signature.v > 28) {
    // No chainId provided, but the signature is signing with EIP-155; derive chainId
    chainId = Math.floor((signature.v - 35) / 2);
  } // We have an EIP-155 transaction (chainId was specified and non-zero)


  if (chainId !== 0) {
    raw.push(Object(lib_esm["h" /* hexlify */])(chainId)); // @TODO: hexValue?

    raw.push("0x");
    raw.push("0x");
  } // Requesting an unsigned transaction


  if (!signature) {
    return lib_esm_encode(raw);
  } // The splitSignature will ensure the transaction has a recoveryParam in the
  // case that the signTransaction function only adds a v.


  var sig = Object(lib_esm["m" /* splitSignature */])(signature); // We pushed a chainId and null r, s on for hashing only; remove those

  var v = 27 + sig.recoveryParam;

  if (chainId !== 0) {
    raw.pop();
    raw.pop();
    raw.pop();
    v += chainId * 2 + 8; // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!

    if (sig.v > 28 && sig.v !== v) {
      transactions_lib_esm_logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
    }
  } else if (sig.v !== v) {
    transactions_lib_esm_logger.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature);
  }

  raw.push(Object(lib_esm["h" /* hexlify */])(v));
  raw.push(Object(lib_esm["n" /* stripZeros */])(Object(lib_esm["a" /* arrayify */])(sig.r)));
  raw.push(Object(lib_esm["n" /* stripZeros */])(Object(lib_esm["a" /* arrayify */])(sig.s)));
  return lib_esm_encode(raw);
}

function lib_esm_serialize(transaction, signature) {
  // Legacy and EIP-155 Transactions
  if (transaction.type == null || transaction.type === 0) {
    if (transaction.accessList != null) {
      transactions_lib_esm_logger.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
    }

    return _serialize(transaction, signature);
  } // Typed Transactions (EIP-2718)


  switch (transaction.type) {
    case 1:
      return _serializeEip2930(transaction, signature);

    case 2:
      return _serializeEip1559(transaction, signature);

    default:
      break;
  }

  return transactions_lib_esm_logger.throwError("unsupported transaction type: ".concat(transaction.type), logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
    operation: "serializeTransaction",
    transactionType: transaction.type
  });
}

function _parseEipSignature(tx, fields, serialize) {
  try {
    var recid = handleNumber(fields[0]).toNumber();

    if (recid !== 0 && recid !== 1) {
      throw new Error("bad recid");
    }

    tx.v = recid;
  } catch (error) {
    transactions_lib_esm_logger.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
  }

  tx.r = Object(lib_esm["g" /* hexZeroPad */])(fields[1], 32);
  tx.s = Object(lib_esm["g" /* hexZeroPad */])(fields[2], 32);

  try {
    var digest = keccak256(serialize(tx));
    tx.from = recoverAddress(digest, {
      r: tx.r,
      s: tx.s,
      recoveryParam: tx.v
    });
  } catch (error) {
    console.log(error);
  }
}

function _parseEip1559(payload) {
  var transaction = lib_esm_decode(payload.slice(1));

  if (transaction.length !== 9 && transaction.length !== 12) {
    transactions_lib_esm_logger.throwArgumentError("invalid component count for transaction type: 2", "payload", Object(lib_esm["h" /* hexlify */])(payload));
  }

  var maxPriorityFeePerGas = handleNumber(transaction[2]);
  var maxFeePerGas = handleNumber(transaction[3]);
  var tx = {
    type: 2,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    maxPriorityFeePerGas: maxPriorityFeePerGas,
    maxFeePerGas: maxFeePerGas,
    gasPrice: null,
    gasLimit: handleNumber(transaction[4]),
    to: handleAddress(transaction[5]),
    value: handleNumber(transaction[6]),
    data: transaction[7],
    accessList: accessListify(transaction[8])
  }; // Unsigned EIP-1559 Transaction

  if (transaction.length === 9) {
    return tx;
  }

  tx.hash = keccak256(payload);

  _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);

  return tx;
}

function _parseEip2930(payload) {
  var transaction = lib_esm_decode(payload.slice(1));

  if (transaction.length !== 8 && transaction.length !== 11) {
    transactions_lib_esm_logger.throwArgumentError("invalid component count for transaction type: 1", "payload", Object(lib_esm["h" /* hexlify */])(payload));
  }

  var tx = {
    type: 1,
    chainId: handleNumber(transaction[0]).toNumber(),
    nonce: handleNumber(transaction[1]).toNumber(),
    gasPrice: handleNumber(transaction[2]),
    gasLimit: handleNumber(transaction[3]),
    to: handleAddress(transaction[4]),
    value: handleNumber(transaction[5]),
    data: transaction[6],
    accessList: accessListify(transaction[7])
  }; // Unsigned EIP-2930 Transaction

  if (transaction.length === 8) {
    return tx;
  }

  tx.hash = keccak256(payload);

  _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);

  return tx;
} // Legacy Transactions and EIP-155


function _parse(rawTransaction) {
  var transaction = lib_esm_decode(rawTransaction);

  if (transaction.length !== 9 && transaction.length !== 6) {
    transactions_lib_esm_logger.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
  }

  var tx = {
    nonce: handleNumber(transaction[0]).toNumber(),
    gasPrice: handleNumber(transaction[1]),
    gasLimit: handleNumber(transaction[2]),
    to: handleAddress(transaction[3]),
    value: handleNumber(transaction[4]),
    data: transaction[5],
    chainId: 0
  }; // Legacy unsigned transaction

  if (transaction.length === 6) {
    return tx;
  }

  try {
    tx.v = bignumber_BigNumber.from(transaction[6]).toNumber();
  } catch (error) {
    console.log(error);
    return tx;
  }

  tx.r = Object(lib_esm["g" /* hexZeroPad */])(transaction[7], 32);
  tx.s = Object(lib_esm["g" /* hexZeroPad */])(transaction[8], 32);

  if (bignumber_BigNumber.from(tx.r).isZero() && bignumber_BigNumber.from(tx.s).isZero()) {
    // EIP-155 unsigned transaction
    tx.chainId = tx.v;
    tx.v = 0;
  } else {
    // Signed Transaction
    tx.chainId = Math.floor((tx.v - 35) / 2);

    if (tx.chainId < 0) {
      tx.chainId = 0;
    }

    var recoveryParam = tx.v - 27;
    var raw = transaction.slice(0, 6);

    if (tx.chainId !== 0) {
      raw.push(Object(lib_esm["h" /* hexlify */])(tx.chainId));
      raw.push("0x");
      raw.push("0x");
      recoveryParam -= tx.chainId * 2 + 8;
    }

    var digest = keccak256(lib_esm_encode(raw));

    try {
      tx.from = recoverAddress(digest, {
        r: Object(lib_esm["h" /* hexlify */])(tx.r),
        s: Object(lib_esm["h" /* hexlify */])(tx.s),
        recoveryParam: recoveryParam
      });
    } catch (error) {
      console.log(error);
    }

    tx.hash = keccak256(rawTransaction);
  }

  tx.type = null;
  return tx;
}

function parse(rawTransaction) {
  var payload = Object(lib_esm["a" /* arrayify */])(rawTransaction); // Legacy and EIP-155 Transactions

  if (payload[0] > 0x7f) {
    return _parse(payload);
  } // Typed Transaction (EIP-2718)


  switch (payload[0]) {
    case 1:
      return _parseEip2930(payload);

    case 2:
      return _parseEip1559(payload);

    default:
      break;
  }

  return transactions_lib_esm_logger.throwError("unsupported transaction type: ".concat(payload[0]), logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
    operation: "parseTransaction",
    transactionType: payload[0]
  });
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/base64/lib.esm/base64.js



function base64_decode(textData) {
  textData = atob(textData);
  var data = [];

  for (var i = 0; i < textData.length; i++) {
    data.push(textData.charCodeAt(i));
  }

  return Object(lib_esm["a" /* arrayify */])(data);
}
function base64_encode(data) {
  data = Object(lib_esm["a" /* arrayify */])(data);
  var textData = "";

  for (var i = 0; i < data.length; i++) {
    textData += String.fromCharCode(data[i]);
  }

  return btoa(textData);
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/_version.js
var web_lib_esm_version_version = "web/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/geturl.js




var geturl_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};


function geturl_getUrl(href, options) {
  return geturl_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
    var request, response, body, headers;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (options == null) {
              options = {};
            }

            request = {
              method: options.method || "GET",
              headers: options.headers || {},
              body: options.body || undefined
            };

            if (options.skipFetchSetup !== true) {
              request.mode = "cors"; // no-cors, cors, *same-origin

              request.cache = "no-cache"; // *default, no-cache, reload, force-cache, only-if-cached

              request.credentials = "same-origin"; // include, *same-origin, omit

              request.redirect = "follow"; // manual, *follow, error

              request.referrer = "client"; // no-referrer, *client
            }

            ;
            _context.next = 6;
            return fetch(href, request);

          case 6:
            response = _context.sent;
            _context.next = 9;
            return response.arrayBuffer();

          case 9:
            body = _context.sent;
            headers = {};

            if (response.headers.forEach) {
              response.headers.forEach(function (value, key) {
                headers[key.toLowerCase()] = value;
              });
            } else {
              response.headers.keys().forEach(function (key) {
                headers[key.toLowerCase()] = response.headers.get(key);
              });
            }

            return _context.abrupt("return", {
              headers: headers,
              statusCode: response.status,
              statusMessage: response.statusText,
              body: Object(lib_esm["a" /* arrayify */])(new Uint8Array(body))
            });

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/web/lib.esm/index.js




var web_lib_esm_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};







var web_lib_esm_logger = new logger_lib_esm["a" /* Logger */](web_lib_esm_version_version);


function staller(duration) {
  return new Promise(function (resolve) {
    setTimeout(resolve, duration);
  });
}

function bodyify(value, type) {
  if (value == null) {
    return null;
  }

  if (typeof value === "string") {
    return value;
  }

  if (Object(lib_esm["j" /* isBytesLike */])(value)) {
    if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
      try {
        return toUtf8String(value);
      } catch (error) {}

      ;
    }

    return Object(lib_esm["h" /* hexlify */])(value);
  }

  return value;
} // This API is still a work in progress; the future changes will likely be:
// - ConnectionInfo => FetchDataRequest<T = any>
// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }
//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)
// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T
// For this reason, it should be considered internal until the API is finalized


function lib_esm_fetchData(connection, body, processFunc) {
  // How many times to retry in the event of a throttle
  var attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
  web_lib_esm_logger.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
  var throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
  var throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
  web_lib_esm_logger.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
  var headers = {};
  var url = null; // @TODO: Allow ConnectionInfo to override some of these values

  var options = {
    method: "GET"
  };
  var allow304 = false;
  var timeout = 2 * 60 * 1000;

  if (typeof connection === "string") {
    url = connection;
  } else if (typeof connection === "object") {
    if (connection == null || connection.url == null) {
      web_lib_esm_logger.throwArgumentError("missing URL", "connection.url", connection);
    }

    url = connection.url;

    if (typeof connection.timeout === "number" && connection.timeout > 0) {
      timeout = connection.timeout;
    }

    if (connection.headers) {
      for (var key in connection.headers) {
        headers[key.toLowerCase()] = {
          key: key,
          value: String(connection.headers[key])
        };

        if (["if-none-match", "if-modified-since"].indexOf(key.toLowerCase()) >= 0) {
          allow304 = true;
        }
      }
    }

    options.allowGzip = !!connection.allowGzip;

    if (connection.user != null && connection.password != null) {
      if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
        web_lib_esm_logger.throwError("basic authentication requires a secure https url", logger_lib_esm["a" /* Logger */].errors.INVALID_ARGUMENT, {
          argument: "url",
          url: url,
          user: connection.user,
          password: "[REDACTED]"
        });
      }

      var authorization = connection.user + ":" + connection.password;
      headers["authorization"] = {
        key: "Authorization",
        value: "Basic " + base64_encode(toUtf8Bytes(authorization))
      };
    }
  }

  if (body) {
    options.method = "POST";
    options.body = body;

    if (headers["content-type"] == null) {
      headers["content-type"] = {
        key: "Content-Type",
        value: "application/octet-stream"
      };
    }

    if (headers["content-length"] == null) {
      headers["content-length"] = {
        key: "Content-Length",
        value: String(body.length)
      };
    }
  }

  var flatHeaders = {};
  Object.keys(headers).forEach(function (key) {
    var header = headers[key];
    flatHeaders[header.key] = header.value;
  });
  options.headers = flatHeaders;

  var runningTimeout = function () {
    var timer = null;
    var promise = new Promise(function (resolve, reject) {
      if (timeout) {
        timer = setTimeout(function () {
          if (timer == null) {
            return;
          }

          timer = null;
          reject(web_lib_esm_logger.makeError("timeout", logger_lib_esm["a" /* Logger */].errors.TIMEOUT, {
            requestBody: bodyify(options.body, flatHeaders["content-type"]),
            requestMethod: options.method,
            timeout: timeout,
            url: url
          }));
        }, timeout);
      }
    });

    var cancel = function cancel() {
      if (timer == null) {
        return;
      }

      clearTimeout(timer);
      timer = null;
    };

    return {
      promise: promise,
      cancel: cancel
    };
  }();

  var runningFetch = function () {
    return web_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
      var attempt, response, tryAgain, stall, retryAfter, _body, result, _tryAgain, _timeout;

      return regenerator_default.a.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              attempt = 0;

            case 1:
              if (!(attempt < attemptLimit)) {
                _context.next = 57;
                break;
              }

              response = null;
              _context.prev = 3;
              _context.next = 6;
              return geturl_getUrl(url, options);

            case 6:
              response = _context.sent;

              if (!(response.statusCode === 429 && attempt < attemptLimit)) {
                _context.next = 20;
                break;
              }

              tryAgain = true;

              if (!throttleCallback) {
                _context.next = 13;
                break;
              }

              _context.next = 12;
              return throttleCallback(attempt, url);

            case 12:
              tryAgain = _context.sent;

            case 13:
              if (!tryAgain) {
                _context.next = 20;
                break;
              }

              stall = 0;
              retryAfter = response.headers["retry-after"];

              if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                stall = parseInt(retryAfter) * 1000;
              } else {
                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
              } //console.log("Stalling 429");


              _context.next = 19;
              return staller(stall);

            case 19:
              return _context.abrupt("continue", 54);

            case 20:
              _context.next = 26;
              break;

            case 22:
              _context.prev = 22;
              _context.t0 = _context["catch"](3);
              response = _context.t0.response;

              if (response == null) {
                runningTimeout.cancel();
                web_lib_esm_logger.throwError("missing response", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  requestBody: bodyify(options.body, flatHeaders["content-type"]),
                  requestMethod: options.method,
                  serverError: _context.t0,
                  url: url
                });
              }

            case 26:
              _body = response.body;

              if (allow304 && response.statusCode === 304) {
                _body = null;
              } else if (response.statusCode < 200 || response.statusCode >= 300) {
                runningTimeout.cancel();
                web_lib_esm_logger.throwError("bad response", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  status: response.statusCode,
                  headers: response.headers,
                  body: bodyify(_body, response.headers ? response.headers["content-type"] : null),
                  requestBody: bodyify(options.body, flatHeaders["content-type"]),
                  requestMethod: options.method,
                  url: url
                });
              }

              if (!processFunc) {
                _context.next = 52;
                break;
              }

              _context.prev = 29;
              _context.next = 32;
              return processFunc(_body, response);

            case 32:
              result = _context.sent;
              runningTimeout.cancel();
              return _context.abrupt("return", result);

            case 37:
              _context.prev = 37;
              _context.t1 = _context["catch"](29);

              if (!(_context.t1.throttleRetry && attempt < attemptLimit)) {
                _context.next = 50;
                break;
              }

              _tryAgain = true;

              if (!throttleCallback) {
                _context.next = 45;
                break;
              }

              _context.next = 44;
              return throttleCallback(attempt, url);

            case 44:
              _tryAgain = _context.sent;

            case 45:
              if (!_tryAgain) {
                _context.next = 50;
                break;
              }

              _timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt))); //console.log("Stalling callback");

              _context.next = 49;
              return staller(_timeout);

            case 49:
              return _context.abrupt("continue", 54);

            case 50:
              runningTimeout.cancel();
              web_lib_esm_logger.throwError("processing response error", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                body: bodyify(_body, response.headers ? response.headers["content-type"] : null),
                error: _context.t1,
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
              });

            case 52:
              runningTimeout.cancel(); // If we had a processFunc, it either returned a T or threw above.
              // The "body" is now a Uint8Array.

              return _context.abrupt("return", _body);

            case 54:
              attempt++;
              _context.next = 1;
              break;

            case 57:
              return _context.abrupt("return", web_lib_esm_logger.throwError("failed response", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
              }));

            case 58:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[3, 22], [29, 37]]);
    }));
  }();

  return Promise.race([runningTimeout.promise, runningFetch]);
}
function fetchJson(connection, json, processFunc) {
  var processJsonFunc = function processJsonFunc(value, response) {
    var result = null;

    if (value != null) {
      try {
        result = JSON.parse(toUtf8String(value));
      } catch (error) {
        web_lib_esm_logger.throwError("invalid JSON", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
          body: value,
          error: error
        });
      }
    }

    if (processFunc) {
      result = processFunc(result, response);
    }

    return result;
  }; // If we have json to send, we must
  // - add content-type of application/json (unless already overridden)
  // - convert the json to bytes


  var body = null;

  if (json != null) {
    body = toUtf8Bytes(json); // Create a connection with the content-type set for JSON

    var updated = typeof connection === "string" ? {
      url: connection
    } : shallowCopy(connection);

    if (updated.headers) {
      var hasContentType = Object.keys(updated.headers).filter(function (k) {
        return k.toLowerCase() === "content-type";
      }).length !== 0;

      if (!hasContentType) {
        updated.headers = shallowCopy(updated.headers);
        updated.headers["content-type"] = "application/json";
      }
    } else {
      updated.headers = {
        "content-type": "application/json"
      };
    }

    connection = updated;
  }

  return lib_esm_fetchData(connection, body, processJsonFunc);
}
function lib_esm_poll(func, options) {
  if (!options) {
    options = {};
  }

  options = shallowCopy(options);

  if (options.floor == null) {
    options.floor = 0;
  }

  if (options.ceiling == null) {
    options.ceiling = 10000;
  }

  if (options.interval == null) {
    options.interval = 250;
  }

  return new Promise(function (resolve, reject) {
    var timer = null;
    var done = false; // Returns true if cancel was successful. Unsuccessful cancel means we're already done.

    var cancel = function cancel() {
      if (done) {
        return false;
      }

      done = true;

      if (timer) {
        clearTimeout(timer);
      }

      return true;
    };

    if (options.timeout) {
      timer = setTimeout(function () {
        if (cancel()) {
          reject(new Error("timeout"));
        }
      }, options.timeout);
    }

    var retryLimit = options.retryLimit;
    var attempt = 0;

    function check() {
      return func().then(function (result) {
        // If we have a result, or are allowed null then we're done
        if (result !== undefined) {
          if (cancel()) {
            resolve(result);
          }
        } else if (options.oncePoll) {
          options.oncePoll.once("poll", check);
        } else if (options.onceBlock) {
          options.onceBlock.once("block", check); // Otherwise, exponential back-off (up to 10s) our next request
        } else if (!done) {
          attempt++;

          if (attempt > retryLimit) {
            if (cancel()) {
              reject(new Error("retry limit reached"));
            }

            return;
          }

          var timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));

          if (timeout < options.floor) {
            timeout = options.floor;
          }

          if (timeout > options.ceiling) {
            timeout = options.ceiling;
          }

          setTimeout(check, timeout);
        }

        return null;
      }, function (error) {
        if (cancel()) {
          reject(error);
        }
      });
    }

    check();
  });
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js
var abstract_provider_lib_esm_version_version = "abstract-provider/5.5.1";
// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-provider/lib.esm/index.js








var abstract_provider_lib_esm_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};






var abstract_provider_lib_esm_logger = new logger_lib_esm["a" /* Logger */](abstract_provider_lib_esm_version_version);
;
; //export type CallTransactionable = {
//    call(transaction: TransactionRequest): Promise<TransactionResponse>;
//};

var lib_esm_ForkEvent = /*#__PURE__*/function (_Description) {
  Object(inherits["a" /* default */])(ForkEvent, _Description);

  var _super = Object(createSuper["a" /* default */])(ForkEvent);

  function ForkEvent() {
    Object(classCallCheck["a" /* default */])(this, ForkEvent);

    return _super.apply(this, arguments);
  }

  Object(createClass["a" /* default */])(ForkEvent, null, [{
    key: "isForkEvent",
    value: function isForkEvent(value) {
      return !!(value && value._isForkEvent);
    }
  }]);

  return ForkEvent;
}(lib_esm_Description);
var lib_esm_BlockForkEvent = /*#__PURE__*/function (_ForkEvent) {
  Object(inherits["a" /* default */])(BlockForkEvent, _ForkEvent);

  var _super2 = Object(createSuper["a" /* default */])(BlockForkEvent);

  function BlockForkEvent(blockHash, expiry) {
    Object(classCallCheck["a" /* default */])(this, BlockForkEvent);

    if (!Object(lib_esm["k" /* isHexString */])(blockHash, 32)) {
      abstract_provider_lib_esm_logger.throwArgumentError("invalid blockHash", "blockHash", blockHash);
    }

    return _super2.call(this, {
      _isForkEvent: true,
      _isBlockForkEvent: true,
      expiry: expiry || 0,
      blockHash: blockHash
    });
  }

  return BlockForkEvent;
}(lib_esm_ForkEvent);
var lib_esm_TransactionForkEvent = /*#__PURE__*/function (_ForkEvent2) {
  Object(inherits["a" /* default */])(TransactionForkEvent, _ForkEvent2);

  var _super3 = Object(createSuper["a" /* default */])(TransactionForkEvent);

  function TransactionForkEvent(hash, expiry) {
    Object(classCallCheck["a" /* default */])(this, TransactionForkEvent);

    if (!Object(lib_esm["k" /* isHexString */])(hash, 32)) {
      abstract_provider_lib_esm_logger.throwArgumentError("invalid transaction hash", "hash", hash);
    }

    return _super3.call(this, {
      _isForkEvent: true,
      _isTransactionForkEvent: true,
      expiry: expiry || 0,
      hash: hash
    });
  }

  return TransactionForkEvent;
}(lib_esm_ForkEvent);
var lib_esm_TransactionOrderForkEvent = /*#__PURE__*/function (_ForkEvent3) {
  Object(inherits["a" /* default */])(TransactionOrderForkEvent, _ForkEvent3);

  var _super4 = Object(createSuper["a" /* default */])(TransactionOrderForkEvent);

  function TransactionOrderForkEvent(beforeHash, afterHash, expiry) {
    Object(classCallCheck["a" /* default */])(this, TransactionOrderForkEvent);

    if (!Object(lib_esm["k" /* isHexString */])(beforeHash, 32)) {
      abstract_provider_lib_esm_logger.throwArgumentError("invalid transaction hash", "beforeHash", beforeHash);
    }

    if (!Object(lib_esm["k" /* isHexString */])(afterHash, 32)) {
      abstract_provider_lib_esm_logger.throwArgumentError("invalid transaction hash", "afterHash", afterHash);
    }

    return _super4.call(this, {
      _isForkEvent: true,
      _isTransactionOrderForkEvent: true,
      expiry: expiry || 0,
      beforeHash: beforeHash,
      afterHash: afterHash
    });
  }

  return TransactionOrderForkEvent;
}(lib_esm_ForkEvent); ///////////////////////////////
// Exported Abstracts

var lib_esm_Provider = /*#__PURE__*/function () {
  function Provider() {
    Object(classCallCheck["a" /* default */])(this, Provider);

    abstract_provider_lib_esm_logger.checkAbstract(this instanceof Provider ? this.constructor : void 0, Provider);
    defineReadOnly(this, "_isProvider", true);
  }

  Object(createClass["a" /* default */])(Provider, [{
    key: "getFeeData",
    value: function getFeeData() {
      return abstract_provider_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var _yield$resolvePropert, block, gasPrice, maxFeePerGas, maxPriorityFeePerGas;

        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return resolveProperties({
                  block: this.getBlock("latest"),
                  gasPrice: this.getGasPrice().catch(function (error) {
                    // @TODO: Why is this now failing on Calaveras?
                    //console.log(error);
                    return null;
                  })
                });

              case 2:
                _yield$resolvePropert = _context.sent;
                block = _yield$resolvePropert.block;
                gasPrice = _yield$resolvePropert.gasPrice;
                maxFeePerGas = null, maxPriorityFeePerGas = null;

                if (block && block.baseFeePerGas) {
                  // We may want to compute this more accurately in the future,
                  // using the formula "check if the base fee is correct".
                  // See: https://eips.ethereum.org/EIPS/eip-1559
                  maxPriorityFeePerGas = bignumber_BigNumber.from("2500000000");
                  maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
                }

                return _context.abrupt("return", {
                  maxFeePerGas: maxFeePerGas,
                  maxPriorityFeePerGas: maxPriorityFeePerGas,
                  gasPrice: gasPrice
                });

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    } // Alias for "on"

  }, {
    key: "addListener",
    value: function addListener(eventName, listener) {
      return this.on(eventName, listener);
    } // Alias for "off"

  }, {
    key: "removeListener",
    value: function removeListener(eventName, listener) {
      return this.off(eventName, listener);
    }
  }], [{
    key: "isProvider",
    value: function isProvider(value) {
      return !!(value && value._isProvider);
    }
  }]);

  return Provider;
}();
// CONCATENATED MODULE: ./node_modules/@ethersproject/basex/lib.esm/index.js



/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */


var lib_esm_BaseX = /*#__PURE__*/function () {
  function BaseX(alphabet) {
    Object(classCallCheck["a" /* default */])(this, BaseX);

    defineReadOnly(this, "alphabet", alphabet);
    defineReadOnly(this, "base", alphabet.length);
    defineReadOnly(this, "_alphabetMap", {});
    defineReadOnly(this, "_leader", alphabet.charAt(0)); // pre-compute lookup table

    for (var i = 0; i < alphabet.length; i++) {
      this._alphabetMap[alphabet.charAt(i)] = i;
    }
  }

  Object(createClass["a" /* default */])(BaseX, [{
    key: "encode",
    value: function encode(value) {
      var source = Object(lib_esm["a" /* arrayify */])(value);

      if (source.length === 0) {
        return "";
      }

      var digits = [0];

      for (var i = 0; i < source.length; ++i) {
        var carry = source[i];

        for (var j = 0; j < digits.length; ++j) {
          carry += digits[j] << 8;
          digits[j] = carry % this.base;
          carry = carry / this.base | 0;
        }

        while (carry > 0) {
          digits.push(carry % this.base);
          carry = carry / this.base | 0;
        }
      }

      var string = ""; // deal with leading zeros

      for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) {
        string += this._leader;
      } // convert digits to a string


      for (var q = digits.length - 1; q >= 0; --q) {
        string += this.alphabet[digits[q]];
      }

      return string;
    }
  }, {
    key: "decode",
    value: function decode(value) {
      if (typeof value !== "string") {
        throw new TypeError("Expected String");
      }

      var bytes = [];

      if (value.length === 0) {
        return new Uint8Array(bytes);
      }

      bytes.push(0);

      for (var i = 0; i < value.length; i++) {
        var byte = this._alphabetMap[value[i]];

        if (byte === undefined) {
          throw new Error("Non-base" + this.base + " character");
        }

        var carry = byte;

        for (var j = 0; j < bytes.length; ++j) {
          carry += bytes[j] * this.base;
          bytes[j] = carry & 0xff;
          carry >>= 8;
        }

        while (carry > 0) {
          bytes.push(carry & 0xff);
          carry >>= 8;
        }
      } // deal with leading zeros


      for (var k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
        bytes.push(0);
      }

      return Object(lib_esm["a" /* arrayify */])(new Uint8Array(bytes.reverse()));
    }
  }]);

  return BaseX;
}();
var Base32 = new lib_esm_BaseX("abcdefghijklmnopqrstuvwxyz234567");
var Base58 = new lib_esm_BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
 //console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
//console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))
// CONCATENATED MODULE: ./node_modules/@ethersproject/constants/lib.esm/hashes.js
var HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";
// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/idna.js




function bytes2(data) {
  if (data.length % 4 !== 0) {
    throw new Error("bad data");
  }

  var result = [];

  for (var i = 0; i < data.length; i += 4) {
    result.push(parseInt(data.substring(i, i + 4), 16));
  }

  return result;
}

function createTable(data, func) {
  if (!func) {
    func = function func(value) {
      return [parseInt(value, 16)];
    };
  }

  var lo = 0;
  var result = {};
  data.split(",").forEach(function (pair) {
    var comps = pair.split(":");
    lo += parseInt(comps[0], 16);
    result[lo] = func(comps[1]);
  });
  return result;
}

function createRangeTable(data) {
  var hi = 0;
  return data.split(",").map(function (v) {
    var comps = v.split("-");

    if (comps.length === 1) {
      comps[1] = "0";
    } else if (comps[1] === "") {
      comps[1] = "1";
    }

    var lo = hi + parseInt(comps[0], 16);
    hi = parseInt(comps[1], 16);
    return {
      l: lo,
      h: hi
    };
  });
}

function matchMap(value, ranges) {
  var lo = 0;

  for (var i = 0; i < ranges.length; i++) {
    var range = ranges[i];
    lo += range.l;

    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {
      if (range.e && range.e.indexOf(value - lo) !== -1) {
        continue;
      }

      return range;
    }
  }

  return null;
}

var Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"); // @TODO: Make this relative...

var Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map(function (v) {
  return parseInt(v, 16);
});
var Table_B_2_ranges = [{
  h: 25,
  s: 32,
  l: 65
}, {
  h: 30,
  s: 32,
  e: [23],
  l: 127
}, {
  h: 54,
  s: 1,
  e: [48],
  l: 64,
  d: 2
}, {
  h: 14,
  s: 1,
  l: 57,
  d: 2
}, {
  h: 44,
  s: 1,
  l: 17,
  d: 2
}, {
  h: 10,
  s: 1,
  e: [2, 6, 8],
  l: 61,
  d: 2
}, {
  h: 16,
  s: 1,
  l: 68,
  d: 2
}, {
  h: 84,
  s: 1,
  e: [18, 24, 66],
  l: 19,
  d: 2
}, {
  h: 26,
  s: 32,
  e: [17],
  l: 435
}, {
  h: 22,
  s: 1,
  l: 71,
  d: 2
}, {
  h: 15,
  s: 80,
  l: 40
}, {
  h: 31,
  s: 32,
  l: 16
}, {
  h: 32,
  s: 1,
  l: 80,
  d: 2
}, {
  h: 52,
  s: 1,
  l: 42,
  d: 2
}, {
  h: 12,
  s: 1,
  l: 55,
  d: 2
}, {
  h: 40,
  s: 1,
  e: [38],
  l: 15,
  d: 2
}, {
  h: 14,
  s: 1,
  l: 48,
  d: 2
}, {
  h: 37,
  s: 48,
  l: 49
}, {
  h: 148,
  s: 1,
  l: 6351,
  d: 2
}, {
  h: 88,
  s: 1,
  l: 160,
  d: 2
}, {
  h: 15,
  s: 16,
  l: 704
}, {
  h: 25,
  s: 26,
  l: 854
}, {
  h: 25,
  s: 32,
  l: 55915
}, {
  h: 37,
  s: 40,
  l: 1247
}, {
  h: 25,
  s: -119711,
  l: 53248
}, {
  h: 25,
  s: -119763,
  l: 52
}, {
  h: 25,
  s: -119815,
  l: 52
}, {
  h: 25,
  s: -119867,
  e: [1, 4, 5, 7, 8, 11, 12, 17],
  l: 52
}, {
  h: 25,
  s: -119919,
  l: 52
}, {
  h: 24,
  s: -119971,
  e: [2, 7, 8, 17],
  l: 52
}, {
  h: 24,
  s: -120023,
  e: [2, 7, 13, 15, 16, 17],
  l: 52
}, {
  h: 25,
  s: -120075,
  l: 52
}, {
  h: 25,
  s: -120127,
  l: 52
}, {
  h: 25,
  s: -120179,
  l: 52
}, {
  h: 25,
  s: -120231,
  l: 52
}, {
  h: 25,
  s: -120283,
  l: 52
}, {
  h: 25,
  s: -120335,
  l: 52
}, {
  h: 24,
  s: -119543,
  e: [17],
  l: 56
}, {
  h: 24,
  s: -119601,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119659,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119717,
  e: [17],
  l: 58
}, {
  h: 24,
  s: -119775,
  e: [17],
  l: 58
}];
var Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
var Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
var Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
var Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");

function flatten(values) {
  return values.reduce(function (accum, value) {
    value.forEach(function (value) {
      accum.push(value);
    });
    return accum;
  }, []);
}

function _nameprepTableA1(codepoint) {
  return !!matchMap(codepoint, Table_A_1_ranges);
}
function _nameprepTableB2(codepoint) {
  var range = matchMap(codepoint, Table_B_2_ranges);

  if (range) {
    return [codepoint + range.s];
  }

  var codes = Table_B_2_lut_abs[codepoint];

  if (codes) {
    return codes;
  }

  var shift = Table_B_2_lut_rel[codepoint];

  if (shift) {
    return [codepoint + shift[0]];
  }

  var complex = Table_B_2_complex[codepoint];

  if (complex) {
    return complex;
  }

  return null;
}
function _nameprepTableC(codepoint) {
  return !!matchMap(codepoint, Table_C_ranges);
}
function nameprep(value) {
  // This allows platforms with incomplete normalize to bypass
  // it for very basic names which the built-in toLowerCase
  // will certainly handle correctly
  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
    return value.toLowerCase();
  } // Get the code points (keeping the current normalization)


  var codes = toUtf8CodePoints(value);
  codes = flatten(codes.map(function (code) {
    // Substitute Table B.1 (Maps to Nothing)
    if (Table_B_1_flags.indexOf(code) >= 0) {
      return [];
    }

    if (code >= 0xfe00 && code <= 0xfe0f) {
      return [];
    } // Substitute Table B.2 (Case Folding)


    var codesTableB2 = _nameprepTableB2(code);

    if (codesTableB2) {
      return codesTableB2;
    } // No Substitution


    return [code];
  })); // Normalize using form KC

  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC); // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9

  codes.forEach(function (code) {
    if (_nameprepTableC(code)) {
      throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
    }
  }); // Prohibit Unassigned Code Points (Table A.1)

  codes.forEach(function (code) {
    if (_nameprepTableA1(code)) {
      throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
    }
  }); // IDNA extras

  var name = _toUtf8String(codes); // IDNA: 4.2.3.1


  if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
    throw new Error("invalid hyphen");
  } // IDNA: 4.2.4


  if (name.length > 63) {
    throw new Error("too long");
  }

  return name;
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/namehash.js





var namehash_logger = new logger_lib_esm["a" /* Logger */](hash_lib_esm_version_version);
var Zeros = new Uint8Array(32);
Zeros.fill(0);
var Partition = new RegExp("^((.*)\\.)?([^.]+)$");
function isValidName(name) {
  try {
    var comps = name.split(".");

    for (var i = 0; i < comps.length; i++) {
      if (nameprep(comps[i]).length === 0) {
        throw new Error("empty");
      }
    }

    return true;
  } catch (error) {}

  return false;
}
function namehash(name) {
  /* istanbul ignore if */
  if (typeof name !== "string") {
    namehash_logger.throwArgumentError("invalid ENS name; not a string", "name", name);
  }

  var current = name;
  var result = Zeros;

  while (current.length) {
    var partition = current.match(Partition);

    if (partition == null || partition[2] === "") {
      namehash_logger.throwArgumentError("invalid ENS address; missing component", "name", name);
    }

    var label = toUtf8Bytes(nameprep(partition[3]));
    result = keccak256(Object(lib_esm["b" /* concat */])([result, keccak256(label)]));
    current = partition[2] || "";
  }

  return Object(lib_esm["h" /* hexlify */])(result);
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/networks/lib.esm/_version.js
var networks_lib_esm_version_version = "networks/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/networks/lib.esm/index.js




var networks_lib_esm_logger = new logger_lib_esm["a" /* Logger */](networks_lib_esm_version_version);
;

function isRenetworkable(value) {
  return value && typeof value.renetwork === "function";
}

function ethDefaultProvider(network) {
  var func = function func(providers, options) {
    if (options == null) {
      options = {};
    }

    var providerList = [];

    if (providers.InfuraProvider) {
      try {
        providerList.push(new providers.InfuraProvider(network, options.infura));
      } catch (error) {}
    }

    if (providers.EtherscanProvider) {
      try {
        providerList.push(new providers.EtherscanProvider(network, options.etherscan));
      } catch (error) {}
    }

    if (providers.AlchemyProvider) {
      try {
        providerList.push(new providers.AlchemyProvider(network, options.alchemy));
      } catch (error) {}
    }

    if (providers.PocketProvider) {
      // These networks are currently faulty on Pocket as their
      // network does not handle the Berlin hardfork, which is
      // live on these ones.
      // @TODO: This goes away once Pocket has upgraded their nodes
      var skip = ["goerli", "ropsten", "rinkeby"];

      try {
        var provider = new providers.PocketProvider(network);

        if (provider.network && skip.indexOf(provider.network.name) === -1) {
          providerList.push(provider);
        }
      } catch (error) {}
    }

    if (providers.CloudflareProvider) {
      try {
        providerList.push(new providers.CloudflareProvider(network));
      } catch (error) {}
    }

    if (providerList.length === 0) {
      return null;
    }

    if (providers.FallbackProvider) {
      var quorum = 1;

      if (options.quorum != null) {
        quorum = options.quorum;
      } else if (network === "homestead") {
        quorum = 2;
      }

      return new providers.FallbackProvider(providerList, quorum);
    }

    return providerList[0];
  };

  func.renetwork = function (network) {
    return ethDefaultProvider(network);
  };

  return func;
}

function etcDefaultProvider(url, network) {
  var func = function func(providers, options) {
    if (providers.JsonRpcProvider) {
      return new providers.JsonRpcProvider(url, network);
    }

    return null;
  };

  func.renetwork = function (network) {
    return etcDefaultProvider(url, network);
  };

  return func;
}

var homestead = {
  chainId: 1,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "homestead",
  _defaultProvider: ethDefaultProvider("homestead")
};
var ropsten = {
  chainId: 3,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "ropsten",
  _defaultProvider: ethDefaultProvider("ropsten")
};
var classicMordor = {
  chainId: 63,
  name: "classicMordor",
  _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
var networks = {
  unspecified: {
    chainId: 0,
    name: "unspecified"
  },
  homestead: homestead,
  mainnet: homestead,
  morden: {
    chainId: 2,
    name: "morden"
  },
  ropsten: ropsten,
  testnet: ropsten,
  rinkeby: {
    chainId: 4,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "rinkeby",
    _defaultProvider: ethDefaultProvider("rinkeby")
  },
  kovan: {
    chainId: 42,
    name: "kovan",
    _defaultProvider: ethDefaultProvider("kovan")
  },
  goerli: {
    chainId: 5,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "goerli",
    _defaultProvider: ethDefaultProvider("goerli")
  },
  // ETC (See: #351)
  classic: {
    chainId: 61,
    name: "classic",
    _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/etc", "classic")
  },
  classicMorden: {
    chainId: 62,
    name: "classicMorden"
  },
  classicMordor: classicMordor,
  classicTestnet: classicMordor,
  classicKotti: {
    chainId: 6,
    name: "classicKotti",
    _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/kotti", "classicKotti")
  },
  xdai: {
    chainId: 100,
    name: "xdai"
  },
  matic: {
    chainId: 137,
    name: "matic"
  },
  maticmum: {
    chainId: 80001,
    name: "maticmum"
  },
  bnb: {
    chainId: 56,
    name: "bnb"
  },
  bnbt: {
    chainId: 97,
    name: "bnbt"
  }
};
/**
 *  getNetwork
 *
 *  Converts a named common networks or chain ID (network ID) to a Network
 *  and verifies a network is a valid Network..
 */

function lib_esm_getNetwork(network) {
  // No network (null)
  if (network == null) {
    return null;
  }

  if (typeof network === "number") {
    for (var name in networks) {
      var _standard = networks[name];

      if (_standard.chainId === network) {
        return {
          name: _standard.name,
          chainId: _standard.chainId,
          ensAddress: _standard.ensAddress || null,
          _defaultProvider: _standard._defaultProvider || null
        };
      }
    }

    return {
      chainId: network,
      name: "unknown"
    };
  }

  if (typeof network === "string") {
    var _standard2 = networks[network];

    if (_standard2 == null) {
      return null;
    }

    return {
      name: _standard2.name,
      chainId: _standard2.chainId,
      ensAddress: _standard2.ensAddress,
      _defaultProvider: _standard2._defaultProvider || null
    };
  }

  var standard = networks[network.name]; // Not a standard network; check that it is a valid network in general

  if (!standard) {
    if (typeof network.chainId !== "number") {
      networks_lib_esm_logger.throwArgumentError("invalid network chainId", "network", network);
    }

    return network;
  } // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)


  if (network.chainId !== 0 && network.chainId !== standard.chainId) {
    networks_lib_esm_logger.throwArgumentError("network chainId mismatch", "network", network);
  } // @TODO: In the next major version add an attach function to a defaultProvider
  // class and move the _defaultProvider internal to this file (extend Network)


  var defaultProvider = network._defaultProvider || null;

  if (defaultProvider == null && standard._defaultProvider) {
    if (isRenetworkable(standard._defaultProvider)) {
      defaultProvider = standard._defaultProvider.renetwork(network);
    } else {
      defaultProvider = standard._defaultProvider;
    }
  } // Standard Network (allow overriding the ENS address)


  return {
    name: network.name,
    chainId: standard.chainId,
    ensAddress: network.ensAddress || standard.ensAddress || null,
    _defaultProvider: defaultProvider
  };
}
// EXTERNAL MODULE: ./node_modules/hash.js/lib/hash.js
var lib_hash = __webpack_require__(15);
var hash_default = /*#__PURE__*/__webpack_require__.n(lib_hash);

// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/types.js
var SupportedAlgorithm;

(function (SupportedAlgorithm) {
  SupportedAlgorithm["sha256"] = "sha256";
  SupportedAlgorithm["sha512"] = "sha512";
})(SupportedAlgorithm || (SupportedAlgorithm = {}));

;
// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/_version.js
var sha2_lib_esm_version_version = "sha2/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/sha2.js


 //const _ripemd160 = _hash.ripemd160;





var sha2_logger = new logger_lib_esm["a" /* Logger */](sha2_lib_esm_version_version);
function ripemd160(data) {
  return "0x" + hash_default.a.ripemd160().update(Object(lib_esm["a" /* arrayify */])(data)).digest("hex");
}
function sha256(data) {
  return "0x" + hash_default.a.sha256().update(Object(lib_esm["a" /* arrayify */])(data)).digest("hex");
}
function sha512(data) {
  return "0x" + hash_default.a.sha512().update(Object(lib_esm["a" /* arrayify */])(data)).digest("hex");
}
function computeHmac(algorithm, key, data) {
  if (!SupportedAlgorithm[algorithm]) {
    sha2_logger.throwError("unsupported algorithm " + algorithm, logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
      operation: "hmac",
      algorithm: algorithm
    });
  }

  return "0x" + hash_default.a.hmac(hash_default.a[algorithm], Object(lib_esm["a" /* arrayify */])(key)).update(Object(lib_esm["a" /* arrayify */])(data)).digest("hex");
}
// EXTERNAL MODULE: ./node_modules/bech32/index.js
var bech32 = __webpack_require__(34);
var bech32_default = /*#__PURE__*/__webpack_require__.n(bech32);

// CONCATENATED MODULE: ./node_modules/@ethersproject/constants/lib.esm/addresses.js
var AddressZero = "0x0000000000000000000000000000000000000000";
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/formatter.js












var formatter_logger = new logger_lib_esm["a" /* Logger */](_version_version);
var formatter_Formatter = /*#__PURE__*/function () {
  function Formatter() {
    Object(classCallCheck["a" /* default */])(this, Formatter);

    formatter_logger.checkNew(this instanceof Formatter ? this.constructor : void 0, Formatter);
    this.formats = this.getDefaultFormats();
  }

  Object(createClass["a" /* default */])(Formatter, [{
    key: "getDefaultFormats",
    value: function getDefaultFormats() {
      var _this = this;

      var formats = {};
      var address = this.address.bind(this);
      var bigNumber = this.bigNumber.bind(this);
      var blockTag = this.blockTag.bind(this);
      var data = this.data.bind(this);
      var hash = this.hash.bind(this);
      var hex = this.hex.bind(this);
      var number = this.number.bind(this);
      var type = this.type.bind(this);

      var strictData = function strictData(v) {
        return _this.data(v, true);
      };

      formats.transaction = {
        hash: hash,
        type: type,
        accessList: Formatter.allowNull(this.accessList.bind(this), null),
        blockHash: Formatter.allowNull(hash, null),
        blockNumber: Formatter.allowNull(number, null),
        transactionIndex: Formatter.allowNull(number, null),
        confirmations: Formatter.allowNull(number, null),
        from: address,
        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
        // must be set
        gasPrice: Formatter.allowNull(bigNumber),
        maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
        maxFeePerGas: Formatter.allowNull(bigNumber),
        gasLimit: bigNumber,
        to: Formatter.allowNull(address, null),
        value: bigNumber,
        nonce: number,
        data: data,
        r: Formatter.allowNull(this.uint256),
        s: Formatter.allowNull(this.uint256),
        v: Formatter.allowNull(number),
        creates: Formatter.allowNull(address, null),
        raw: Formatter.allowNull(data)
      };
      formats.transactionRequest = {
        from: Formatter.allowNull(address),
        nonce: Formatter.allowNull(number),
        gasLimit: Formatter.allowNull(bigNumber),
        gasPrice: Formatter.allowNull(bigNumber),
        maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
        maxFeePerGas: Formatter.allowNull(bigNumber),
        to: Formatter.allowNull(address),
        value: Formatter.allowNull(bigNumber),
        data: Formatter.allowNull(strictData),
        type: Formatter.allowNull(number),
        accessList: Formatter.allowNull(this.accessList.bind(this), null)
      };
      formats.receiptLog = {
        transactionIndex: number,
        blockNumber: number,
        transactionHash: hash,
        address: address,
        topics: Formatter.arrayOf(hash),
        data: data,
        logIndex: number,
        blockHash: hash
      };
      formats.receipt = {
        to: Formatter.allowNull(this.address, null),
        from: Formatter.allowNull(this.address, null),
        contractAddress: Formatter.allowNull(address, null),
        transactionIndex: number,
        // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
        root: Formatter.allowNull(hex),
        gasUsed: bigNumber,
        logsBloom: Formatter.allowNull(data),
        blockHash: hash,
        transactionHash: hash,
        logs: Formatter.arrayOf(this.receiptLog.bind(this)),
        blockNumber: number,
        confirmations: Formatter.allowNull(number, null),
        cumulativeGasUsed: bigNumber,
        effectiveGasPrice: Formatter.allowNull(bigNumber),
        status: Formatter.allowNull(number),
        type: type
      };
      formats.block = {
        hash: hash,
        parentHash: hash,
        number: number,
        timestamp: number,
        nonce: Formatter.allowNull(hex),
        difficulty: this.difficulty.bind(this),
        gasLimit: bigNumber,
        gasUsed: bigNumber,
        miner: address,
        extraData: data,
        transactions: Formatter.allowNull(Formatter.arrayOf(hash)),
        baseFeePerGas: Formatter.allowNull(bigNumber)
      };
      formats.blockWithTransactions = shallowCopy(formats.block);
      formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));
      formats.filter = {
        fromBlock: Formatter.allowNull(blockTag, undefined),
        toBlock: Formatter.allowNull(blockTag, undefined),
        blockHash: Formatter.allowNull(hash, undefined),
        address: Formatter.allowNull(address, undefined),
        topics: Formatter.allowNull(this.topics.bind(this), undefined)
      };
      formats.filterLog = {
        blockNumber: Formatter.allowNull(number),
        blockHash: Formatter.allowNull(hash),
        transactionIndex: number,
        removed: Formatter.allowNull(this.boolean.bind(this)),
        address: address,
        data: Formatter.allowFalsish(data, "0x"),
        topics: Formatter.arrayOf(hash),
        transactionHash: hash,
        logIndex: number
      };
      return formats;
    }
  }, {
    key: "accessList",
    value: function accessList(_accessList) {
      return accessListify(_accessList || []);
    } // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.

  }, {
    key: "number",
    value: function number(_number) {
      if (_number === "0x") {
        return 0;
      }

      return bignumber_BigNumber.from(_number).toNumber();
    }
  }, {
    key: "type",
    value: function type(number) {
      if (number === "0x" || number == null) {
        return 0;
      }

      return bignumber_BigNumber.from(number).toNumber();
    } // Strict! Used on input.

  }, {
    key: "bigNumber",
    value: function bigNumber(value) {
      return bignumber_BigNumber.from(value);
    } // Requires a boolean, "true" or  "false"; returns a boolean

  }, {
    key: "boolean",
    value: function boolean(value) {
      if (typeof value === "boolean") {
        return value;
      }

      if (typeof value === "string") {
        value = value.toLowerCase();

        if (value === "true") {
          return true;
        }

        if (value === "false") {
          return false;
        }
      }

      throw new Error("invalid boolean - " + value);
    }
  }, {
    key: "hex",
    value: function hex(value, strict) {
      if (typeof value === "string") {
        if (!strict && value.substring(0, 2) !== "0x") {
          value = "0x" + value;
        }

        if (Object(lib_esm["k" /* isHexString */])(value)) {
          return value.toLowerCase();
        }
      }

      return formatter_logger.throwArgumentError("invalid hash", "value", value);
    }
  }, {
    key: "data",
    value: function data(value, strict) {
      var result = this.hex(value, strict);

      if (result.length % 2 !== 0) {
        throw new Error("invalid data; odd-length - " + value);
      }

      return result;
    } // Requires an address
    // Strict! Used on input.

  }, {
    key: "address",
    value: function address(value) {
      return lib_esm_getAddress(value);
    }
  }, {
    key: "callAddress",
    value: function callAddress(value) {
      if (!Object(lib_esm["k" /* isHexString */])(value, 32)) {
        return null;
      }

      var address = lib_esm_getAddress(Object(lib_esm["e" /* hexDataSlice */])(value, 12));
      return address === AddressZero ? null : address;
    }
  }, {
    key: "contractAddress",
    value: function contractAddress(value) {
      return getContractAddress(value);
    } // Strict! Used on input.

  }, {
    key: "blockTag",
    value: function blockTag(_blockTag) {
      if (_blockTag == null) {
        return "latest";
      }

      if (_blockTag === "earliest") {
        return "0x0";
      }

      if (_blockTag === "latest" || _blockTag === "pending") {
        return _blockTag;
      }

      if (typeof _blockTag === "number" || Object(lib_esm["k" /* isHexString */])(_blockTag)) {
        return Object(lib_esm["f" /* hexValue */])(_blockTag);
      }

      throw new Error("invalid blockTag");
    } // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.

  }, {
    key: "hash",
    value: function hash(value, strict) {
      var result = this.hex(value, strict);

      if (Object(lib_esm["d" /* hexDataLength */])(result) !== 32) {
        return formatter_logger.throwArgumentError("invalid hash", "value", value);
      }

      return result;
    } // Returns the difficulty as a number, or if too large (i.e. PoA network) null

  }, {
    key: "difficulty",
    value: function difficulty(value) {
      if (value == null) {
        return null;
      }

      var v = bignumber_BigNumber.from(value);

      try {
        return v.toNumber();
      } catch (error) {}

      return null;
    }
  }, {
    key: "uint256",
    value: function uint256(value) {
      if (!Object(lib_esm["k" /* isHexString */])(value)) {
        throw new Error("invalid uint256");
      }

      return Object(lib_esm["g" /* hexZeroPad */])(value, 32);
    }
  }, {
    key: "_block",
    value: function _block(value, format) {
      if (value.author != null && value.miner == null) {
        value.miner = value.author;
      } // The difficulty may need to come from _difficulty in recursed blocks


      var difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
      var result = Formatter.check(format, value);
      result._difficulty = difficulty == null ? null : bignumber_BigNumber.from(difficulty);
      return result;
    }
  }, {
    key: "block",
    value: function block(value) {
      return this._block(value, this.formats.block);
    }
  }, {
    key: "blockWithTransactions",
    value: function blockWithTransactions(value) {
      return this._block(value, this.formats.blockWithTransactions);
    } // Strict! Used on input.

  }, {
    key: "transactionRequest",
    value: function transactionRequest(value) {
      return Formatter.check(this.formats.transactionRequest, value);
    }
  }, {
    key: "transactionResponse",
    value: function transactionResponse(transaction) {
      // Rename gas to gasLimit
      if (transaction.gas != null && transaction.gasLimit == null) {
        transaction.gasLimit = transaction.gas;
      } // Some clients (TestRPC) do strange things like return 0x0 for the
      // 0 address; correct this to be a real address


      if (transaction.to && bignumber_BigNumber.from(transaction.to).isZero()) {
        transaction.to = "0x0000000000000000000000000000000000000000";
      } // Rename input to data


      if (transaction.input != null && transaction.data == null) {
        transaction.data = transaction.input;
      } // If to and creates are empty, populate the creates from the transaction


      if (transaction.to == null && transaction.creates == null) {
        transaction.creates = this.contractAddress(transaction);
      }

      if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
        transaction.accessList = [];
      }

      var result = Formatter.check(this.formats.transaction, transaction);

      if (transaction.chainId != null) {
        var chainId = transaction.chainId;

        if (Object(lib_esm["k" /* isHexString */])(chainId)) {
          chainId = bignumber_BigNumber.from(chainId).toNumber();
        }

        result.chainId = chainId;
      } else {
        var _chainId = transaction.networkId; // geth-etc returns chainId

        if (_chainId == null && result.v == null) {
          _chainId = transaction.chainId;
        }

        if (Object(lib_esm["k" /* isHexString */])(_chainId)) {
          _chainId = bignumber_BigNumber.from(_chainId).toNumber();
        }

        if (typeof _chainId !== "number" && result.v != null) {
          _chainId = (result.v - 35) / 2;

          if (_chainId < 0) {
            _chainId = 0;
          }

          _chainId = parseInt(_chainId);
        }

        if (typeof _chainId !== "number") {
          _chainId = 0;
        }

        result.chainId = _chainId;
      } // 0x0000... should actually be null


      if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
        result.blockHash = null;
      }

      return result;
    }
  }, {
    key: "transaction",
    value: function transaction(value) {
      return parse(value);
    }
  }, {
    key: "receiptLog",
    value: function receiptLog(value) {
      return Formatter.check(this.formats.receiptLog, value);
    }
  }, {
    key: "receipt",
    value: function receipt(value) {
      var result = Formatter.check(this.formats.receipt, value); // RSK incorrectly implemented EIP-658, so we munge things a bit here for it

      if (result.root != null) {
        if (result.root.length <= 4) {
          // Could be 0x00, 0x0, 0x01 or 0x1
          var _value = bignumber_BigNumber.from(result.root).toNumber();

          if (_value === 0 || _value === 1) {
            // Make sure if both are specified, they match
            if (result.status != null && result.status !== _value) {
              formatter_logger.throwArgumentError("alt-root-status/status mismatch", "value", {
                root: result.root,
                status: result.status
              });
            }

            result.status = _value;
            delete result.root;
          } else {
            formatter_logger.throwArgumentError("invalid alt-root-status", "value.root", result.root);
          }
        } else if (result.root.length !== 66) {
          // Must be a valid bytes32
          formatter_logger.throwArgumentError("invalid root hash", "value.root", result.root);
        }
      }

      if (result.status != null) {
        result.byzantium = true;
      }

      return result;
    }
  }, {
    key: "topics",
    value: function topics(value) {
      var _this2 = this;

      if (Array.isArray(value)) {
        return value.map(function (v) {
          return _this2.topics(v);
        });
      } else if (value != null) {
        return this.hash(value, true);
      }

      return null;
    }
  }, {
    key: "filter",
    value: function filter(value) {
      return Formatter.check(this.formats.filter, value);
    }
  }, {
    key: "filterLog",
    value: function filterLog(value) {
      return Formatter.check(this.formats.filterLog, value);
    }
  }], [{
    key: "check",
    value: function check(format, object) {
      var result = {};

      for (var key in format) {
        try {
          var value = format[key](object[key]);

          if (value !== undefined) {
            result[key] = value;
          }
        } catch (error) {
          error.checkKey = key;
          error.checkValue = object[key];
          throw error;
        }
      }

      return result;
    } // if value is null-ish, nullValue is returned

  }, {
    key: "allowNull",
    value: function allowNull(format, nullValue) {
      return function (value) {
        if (value == null) {
          return nullValue;
        }

        return format(value);
      };
    } // If value is false-ish, replaceValue is returned

  }, {
    key: "allowFalsish",
    value: function allowFalsish(format, replaceValue) {
      return function (value) {
        if (!value) {
          return replaceValue;
        }

        return format(value);
      };
    } // Requires an Array satisfying check

  }, {
    key: "arrayOf",
    value: function arrayOf(format) {
      return function (array) {
        if (!Array.isArray(array)) {
          throw new Error("not an array");
        }

        var result = [];
        array.forEach(function (value) {
          result.push(format(value));
        });
        return result;
      };
    }
  }]);

  return Formatter;
}();
function isCommunityResourcable(value) {
  return value && typeof value.isCommunityResource === "function";
}
function isCommunityResource(value) {
  return isCommunityResourcable(value) && value.isCommunityResource();
} // Show the throttle message only once

var throttleMessage = false;
function showThrottleMessage() {
  if (throttleMessage) {
    return;
  }

  throttleMessage = true;
  console.log("========= NOTICE =========");
  console.log("Request-Rate Exceeded  (this message will not be repeated)");
  console.log("");
  console.log("The default API keys for each service are provided as a highly-throttled,");
  console.log("community resource for low-traffic projects and early prototyping.");
  console.log("");
  console.log("While your application will continue to function, we highly recommended");
  console.log("signing up for your own API keys to improve performance, increase your");
  console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");
  console.log("");
  console.log("For more details: https:/\/docs.ethers.io/api-keys/");
  console.log("==========================");
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/base-provider.js









var base_provider_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};















var base_provider_logger = new logger_lib_esm["a" /* Logger */](_version_version);
 //////////////////////////////
// Event Serializeing

function checkTopic(topic) {
  if (topic == null) {
    return "null";
  }

  if (Object(lib_esm["d" /* hexDataLength */])(topic) !== 32) {
    base_provider_logger.throwArgumentError("invalid topic", "topic", topic);
  }

  return topic.toLowerCase();
}

function serializeTopics(topics) {
  // Remove trailing null AND-topics; they are redundant
  topics = topics.slice();

  while (topics.length > 0 && topics[topics.length - 1] == null) {
    topics.pop();
  }

  return topics.map(function (topic) {
    if (Array.isArray(topic)) {
      // Only track unique OR-topics
      var unique = {};
      topic.forEach(function (topic) {
        unique[checkTopic(topic)] = true;
      }); // The order of OR-topics does not matter

      var sorted = Object.keys(unique);
      sorted.sort();
      return sorted.join("|");
    } else {
      return checkTopic(topic);
    }
  }).join("&");
}

function deserializeTopics(data) {
  if (data === "") {
    return [];
  }

  return data.split(/&/g).map(function (topic) {
    if (topic === "") {
      return [];
    }

    var comps = topic.split("|").map(function (topic) {
      return topic === "null" ? null : topic;
    });
    return comps.length === 1 ? comps[0] : comps;
  });
}

function getEventTag(eventName) {
  if (typeof eventName === "string") {
    eventName = eventName.toLowerCase();

    if (Object(lib_esm["d" /* hexDataLength */])(eventName) === 32) {
      return "tx:" + eventName;
    }

    if (eventName.indexOf(":") === -1) {
      return eventName;
    }
  } else if (Array.isArray(eventName)) {
    return "filter:*:" + serializeTopics(eventName);
  } else if (lib_esm_ForkEvent.isForkEvent(eventName)) {
    base_provider_logger.warn("not implemented");
    throw new Error("not implemented");
  } else if (eventName && typeof eventName === "object") {
    return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
  }

  throw new Error("invalid event - " + eventName);
} //////////////////////////////
// Helper Object


function getTime() {
  return new Date().getTime();
}

function base_provider_stall(duration) {
  return new Promise(function (resolve) {
    setTimeout(resolve, duration);
  });
} //////////////////////////////
// Provider Object

/**
 *  EventType
 *   - "block"
 *   - "poll"
 *   - "didPoll"
 *   - "pending"
 *   - "error"
 *   - "network"
 *   - filter
 *   - topics array
 *   - transaction hash
 */


var PollableEvents = ["block", "network", "pending", "poll"];
var base_provider_Event = /*#__PURE__*/function () {
  function Event(tag, listener, once) {
    Object(classCallCheck["a" /* default */])(this, Event);

    defineReadOnly(this, "tag", tag);
    defineReadOnly(this, "listener", listener);
    defineReadOnly(this, "once", once);
  }

  Object(createClass["a" /* default */])(Event, [{
    key: "event",
    get: function get() {
      switch (this.type) {
        case "tx":
          return this.hash;

        case "filter":
          return this.filter;
      }

      return this.tag;
    }
  }, {
    key: "type",
    get: function get() {
      return this.tag.split(":")[0];
    }
  }, {
    key: "hash",
    get: function get() {
      var comps = this.tag.split(":");

      if (comps[0] !== "tx") {
        return null;
      }

      return comps[1];
    }
  }, {
    key: "filter",
    get: function get() {
      var comps = this.tag.split(":");

      if (comps[0] !== "filter") {
        return null;
      }

      var address = comps[1];
      var topics = deserializeTopics(comps[2]);
      var filter = {};

      if (topics.length > 0) {
        filter.topics = topics;
      }

      if (address && address !== "*") {
        filter.address = address;
      }

      return filter;
    }
  }, {
    key: "pollable",
    value: function pollable() {
      return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
    }
  }]);

  return Event;
}();
; // https://github.com/satoshilabs/slips/blob/master/slip-0044.md

var coinInfos = {
  "0": {
    symbol: "btc",
    p2pkh: 0x00,
    p2sh: 0x05,
    prefix: "bc"
  },
  "2": {
    symbol: "ltc",
    p2pkh: 0x30,
    p2sh: 0x32,
    prefix: "ltc"
  },
  "3": {
    symbol: "doge",
    p2pkh: 0x1e,
    p2sh: 0x16
  },
  "60": {
    symbol: "eth",
    ilk: "eth"
  },
  "61": {
    symbol: "etc",
    ilk: "eth"
  },
  "700": {
    symbol: "xdai",
    ilk: "eth"
  }
};

function bytes32ify(value) {
  return Object(lib_esm["g" /* hexZeroPad */])(bignumber_BigNumber.from(value).toHexString(), 32);
} // Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)


function base58Encode(data) {
  return Base58.encode(Object(lib_esm["b" /* concat */])([data, Object(lib_esm["e" /* hexDataSlice */])(sha256(sha256(data)), 0, 4)]));
}

var base_provider_matchers = [new RegExp("^(https):/\/(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), new RegExp("^(ipfs):/\/(.*)$", "i"), new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];

function _parseString(result) {
  try {
    return toUtf8String(_parseBytes(result));
  } catch (error) {}

  return null;
}

function _parseBytes(result) {
  if (result === "0x") {
    return null;
  }

  var offset = bignumber_BigNumber.from(Object(lib_esm["e" /* hexDataSlice */])(result, 0, 32)).toNumber();
  var length = bignumber_BigNumber.from(Object(lib_esm["e" /* hexDataSlice */])(result, offset, offset + 32)).toNumber();
  return Object(lib_esm["e" /* hexDataSlice */])(result, offset + 32, offset + 32 + length);
}

var base_provider_Resolver = /*#__PURE__*/function () {
  // The resolvedAddress is only for creating a ReverseLookup resolver
  function Resolver(provider, address, name, resolvedAddress) {
    Object(classCallCheck["a" /* default */])(this, Resolver);

    defineReadOnly(this, "provider", provider);
    defineReadOnly(this, "name", name);
    defineReadOnly(this, "address", provider.formatter.address(address));
    defineReadOnly(this, "_resolvedAddress", resolvedAddress);
  }

  Object(createClass["a" /* default */])(Resolver, [{
    key: "_fetchBytes",
    value: function _fetchBytes(selector, parameters) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var tx;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // e.g. keccak256("addr(bytes32,uint256)")
                tx = {
                  to: this.address,
                  data: Object(lib_esm["c" /* hexConcat */])([selector, namehash(this.name), parameters || "0x"])
                };
                _context.prev = 1;
                _context.t0 = _parseBytes;
                _context.next = 5;
                return this.provider.call(tx);

              case 5:
                _context.t1 = _context.sent;
                return _context.abrupt("return", (0, _context.t0)(_context.t1));

              case 9:
                _context.prev = 9;
                _context.t2 = _context["catch"](1);

                if (!(_context.t2.code === logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION)) {
                  _context.next = 13;
                  break;
                }

                return _context.abrupt("return", null);

              case 13:
                return _context.abrupt("return", null);

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[1, 9]]);
      }));
    }
  }, {
    key: "_getAddress",
    value: function _getAddress(coinType, hexBytes) {
      var coinInfo = coinInfos[String(coinType)];

      if (coinInfo == null) {
        base_provider_logger.throwError("unsupported coin type: ".concat(coinType), logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
          operation: "getAddress(".concat(coinType, ")")
        });
      }

      if (coinInfo.ilk === "eth") {
        return this.provider.formatter.address(hexBytes);
      }

      var bytes = Object(lib_esm["a" /* arrayify */])(hexBytes); // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG

      if (coinInfo.p2pkh != null) {
        var p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);

        if (p2pkh) {
          var length = parseInt(p2pkh[1], 16);

          if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
            return base58Encode(Object(lib_esm["b" /* concat */])([[coinInfo.p2pkh], "0x" + p2pkh[2]]));
          }
        }
      } // P2SH: OP_HASH160 <scriptHash> OP_EQUAL


      if (coinInfo.p2sh != null) {
        var p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);

        if (p2sh) {
          var _length = parseInt(p2sh[1], 16);

          if (p2sh[2].length === _length * 2 && _length >= 1 && _length <= 75) {
            return base58Encode(Object(lib_esm["b" /* concat */])([[coinInfo.p2sh], "0x" + p2sh[2]]));
          }
        }
      } // Bech32


      if (coinInfo.prefix != null) {
        var _length2 = bytes[1]; // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program

        var _version = bytes[0];

        if (_version === 0x00) {
          if (_length2 !== 20 && _length2 !== 32) {
            _version = -1;
          }
        } else {
          _version = -1;
        }

        if (_version >= 0 && bytes.length === 2 + _length2 && _length2 >= 1 && _length2 <= 75) {
          var words = bech32_default.a.toWords(bytes.slice(2));
          words.unshift(_version);
          return bech32_default.a.encode(coinInfo.prefix, words);
        }
      }

      return null;
    }
  }, {
    key: "getAddress",
    value: function getAddress(coinType) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
        var transaction, _hexBytes, hexBytes, address;

        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (coinType == null) {
                  coinType = 60;
                } // If Ethereum, use the standard `addr(bytes32)`


                if (!(coinType === 60)) {
                  _context2.next = 17;
                  break;
                }

                _context2.prev = 2;
                // keccak256("addr(bytes32)")
                transaction = {
                  to: this.address,
                  data: "0x3b3b57de" + namehash(this.name).substring(2)
                };
                _context2.next = 6;
                return this.provider.call(transaction);

              case 6:
                _hexBytes = _context2.sent;

                if (!(_hexBytes === "0x" || _hexBytes === HashZero)) {
                  _context2.next = 9;
                  break;
                }

                return _context2.abrupt("return", null);

              case 9:
                return _context2.abrupt("return", this.provider.formatter.callAddress(_hexBytes));

              case 12:
                _context2.prev = 12;
                _context2.t0 = _context2["catch"](2);

                if (!(_context2.t0.code === logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION)) {
                  _context2.next = 16;
                  break;
                }

                return _context2.abrupt("return", null);

              case 16:
                throw _context2.t0;

              case 17:
                _context2.next = 19;
                return this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));

              case 19:
                hexBytes = _context2.sent;

                if (!(hexBytes == null || hexBytes === "0x")) {
                  _context2.next = 22;
                  break;
                }

                return _context2.abrupt("return", null);

              case 22:
                // Compute the address
                address = this._getAddress(coinType, hexBytes);

                if (address == null) {
                  base_provider_logger.throwError("invalid or unsupported coin data", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                    operation: "getAddress(".concat(coinType, ")"),
                    coinType: coinType,
                    data: hexBytes
                  });
                }

                return _context2.abrupt("return", address);

              case 25:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[2, 12]]);
      }));
    }
  }, {
    key: "getAvatar",
    value: function getAvatar() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
        var linkage, avatar, i, match, selector, owner, comps, addr, tokenId, tokenOwner, balance, tx, metadataUrl, metadata;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                linkage = [];
                _context3.prev = 1;
                _context3.next = 4;
                return this.getText("avatar");

              case 4:
                avatar = _context3.sent;

                if (!(avatar == null)) {
                  _context3.next = 7;
                  break;
                }

                return _context3.abrupt("return", null);

              case 7:
                i = 0;

              case 8:
                if (!(i < base_provider_matchers.length)) {
                  _context3.next = 77;
                  break;
                }

                match = avatar.match(base_provider_matchers[i]);

                if (!(match == null)) {
                  _context3.next = 12;
                  break;
                }

                return _context3.abrupt("continue", 74);

              case 12:
                _context3.t0 = match[1];
                _context3.next = _context3.t0 === "https" ? 15 : _context3.t0 === "data" ? 17 : _context3.t0 === "ipfs" ? 19 : _context3.t0 === "erc721" ? 21 : _context3.t0 === "erc1155" ? 21 : 74;
                break;

              case 15:
                linkage.push({
                  type: "url",
                  content: avatar
                });
                return _context3.abrupt("return", {
                  linkage: linkage,
                  url: avatar
                });

              case 17:
                linkage.push({
                  type: "data",
                  content: avatar
                });
                return _context3.abrupt("return", {
                  linkage: linkage,
                  url: avatar
                });

              case 19:
                linkage.push({
                  type: "ipfs",
                  content: avatar
                });
                return _context3.abrupt("return", {
                  linkage: linkage,
                  url: "https://gateway.ipfs.io/ipfs/".concat(avatar.substring(7))
                });

              case 21:
                // Depending on the ERC type, use tokenURI(uint256) or url(uint256)
                selector = match[1] === "erc721" ? "0xc87b56dd" : "0x0e89341c";
                linkage.push({
                  type: match[1],
                  content: avatar
                }); // The owner of this name

                _context3.t1 = this._resolvedAddress;

                if (_context3.t1) {
                  _context3.next = 28;
                  break;
                }

                _context3.next = 27;
                return this.getAddress();

              case 27:
                _context3.t1 = _context3.sent;

              case 28:
                owner = _context3.t1;
                comps = (match[2] || "").split("/");

                if (!(comps.length !== 2)) {
                  _context3.next = 32;
                  break;
                }

                return _context3.abrupt("return", null);

              case 32:
                _context3.next = 34;
                return this.provider.formatter.address(comps[0]);

              case 34:
                addr = _context3.sent;
                tokenId = Object(lib_esm["g" /* hexZeroPad */])(bignumber_BigNumber.from(comps[1]).toHexString(), 32); // Check that this account owns the token

                if (!(match[1] === "erc721")) {
                  _context3.next = 47;
                  break;
                }

                _context3.t2 = this.provider.formatter;
                _context3.next = 40;
                return this.provider.call({
                  to: addr,
                  data: Object(lib_esm["c" /* hexConcat */])(["0x6352211e", tokenId])
                });

              case 40:
                _context3.t3 = _context3.sent;
                tokenOwner = _context3.t2.callAddress.call(_context3.t2, _context3.t3);

                if (!(owner !== tokenOwner)) {
                  _context3.next = 44;
                  break;
                }

                return _context3.abrupt("return", null);

              case 44:
                linkage.push({
                  type: "owner",
                  content: tokenOwner
                });
                _context3.next = 56;
                break;

              case 47:
                if (!(match[1] === "erc1155")) {
                  _context3.next = 56;
                  break;
                }

                _context3.t4 = bignumber_BigNumber;
                _context3.next = 51;
                return this.provider.call({
                  to: addr,
                  data: Object(lib_esm["c" /* hexConcat */])(["0x00fdd58e", Object(lib_esm["g" /* hexZeroPad */])(owner, 32), tokenId])
                });

              case 51:
                _context3.t5 = _context3.sent;
                balance = _context3.t4.from.call(_context3.t4, _context3.t5);

                if (!balance.isZero()) {
                  _context3.next = 55;
                  break;
                }

                return _context3.abrupt("return", null);

              case 55:
                linkage.push({
                  type: "balance",
                  content: balance.toString()
                });

              case 56:
                // Call the token contract for the metadata URL
                tx = {
                  to: this.provider.formatter.address(comps[0]),
                  data: Object(lib_esm["c" /* hexConcat */])([selector, tokenId])
                };
                _context3.t6 = _parseString;
                _context3.next = 60;
                return this.provider.call(tx);

              case 60:
                _context3.t7 = _context3.sent;
                metadataUrl = (0, _context3.t6)(_context3.t7);

                if (!(metadataUrl == null)) {
                  _context3.next = 64;
                  break;
                }

                return _context3.abrupt("return", null);

              case 64:
                linkage.push({
                  type: "metadata-url",
                  content: metadataUrl
                }); // ERC-1155 allows a generic {id} in the URL

                if (match[1] === "erc1155") {
                  metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                } // Get the token metadata


                _context3.next = 68;
                return fetchJson(metadataUrl);

              case 68:
                metadata = _context3.sent;

                if (!(!metadata || typeof metadata.image !== "string" || !metadata.image.match(/^https:\/\//i))) {
                  _context3.next = 71;
                  break;
                }

                return _context3.abrupt("return", null);

              case 71:
                linkage.push({
                  type: "metadata",
                  content: JSON.stringify(metadata)
                });
                linkage.push({
                  type: "url",
                  content: metadata.image
                });
                return _context3.abrupt("return", {
                  linkage: linkage,
                  url: metadata.image
                });

              case 74:
                i++;
                _context3.next = 8;
                break;

              case 77:
                _context3.next = 81;
                break;

              case 79:
                _context3.prev = 79;
                _context3.t8 = _context3["catch"](1);

              case 81:
                return _context3.abrupt("return", null);

              case 82:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 79]]);
      }));
    }
  }, {
    key: "getContentHash",
    value: function getContentHash() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
        var hexBytes, ipfs, length, swarm;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return this._fetchBytes("0xbc1c58d1");

              case 2:
                hexBytes = _context4.sent;

                if (!(hexBytes == null || hexBytes === "0x")) {
                  _context4.next = 5;
                  break;
                }

                return _context4.abrupt("return", null);

              case 5:
                // IPFS (CID: 1, Type: DAG-PB)
                ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);

                if (!ipfs) {
                  _context4.next = 10;
                  break;
                }

                length = parseInt(ipfs[3], 16);

                if (!(ipfs[4].length === length * 2)) {
                  _context4.next = 10;
                  break;
                }

                return _context4.abrupt("return", "ipfs:/\/" + Base58.encode("0x" + ipfs[1]));

              case 10:
                // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)
                swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);

                if (!swarm) {
                  _context4.next = 14;
                  break;
                }

                if (!(swarm[1].length === 32 * 2)) {
                  _context4.next = 14;
                  break;
                }

                return _context4.abrupt("return", "bzz:/\/" + swarm[1]);

              case 14:
                return _context4.abrupt("return", base_provider_logger.throwError("invalid or unsupported content hash data", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                  operation: "getContentHash()",
                  data: hexBytes
                }));

              case 15:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
    }
  }, {
    key: "getText",
    value: function getText(key) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
        var keyBytes, hexBytes;
        return regenerator_default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                // The key encoded as parameter to fetchBytes
                keyBytes = toUtf8Bytes(key); // The nodehash consumes the first slot, so the string pointer targets
                // offset 64, with the length at offset 64 and data starting at offset 96

                keyBytes = Object(lib_esm["b" /* concat */])([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]); // Pad to word-size (32 bytes)

                if (keyBytes.length % 32 !== 0) {
                  keyBytes = Object(lib_esm["b" /* concat */])([keyBytes, Object(lib_esm["g" /* hexZeroPad */])("0x", 32 - key.length % 32)]);
                }

                _context5.next = 5;
                return this._fetchBytes("0x59d1d43c", Object(lib_esm["h" /* hexlify */])(keyBytes));

              case 5:
                hexBytes = _context5.sent;

                if (!(hexBytes == null || hexBytes === "0x")) {
                  _context5.next = 8;
                  break;
                }

                return _context5.abrupt("return", null);

              case 8:
                return _context5.abrupt("return", toUtf8String(hexBytes));

              case 9:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
    }
  }]);

  return Resolver;
}();
var defaultFormatter = null;
var nextPollId = 1;
var base_provider_BaseProvider = /*#__PURE__*/function (_Provider) {
  Object(inherits["a" /* default */])(BaseProvider, _Provider);

  var _super = Object(createSuper["a" /* default */])(BaseProvider);

  /**
   *  ready
   *
   *  A Promise<Network> that resolves only once the provider is ready.
   *
   *  Sub-classes that call the super with a network without a chainId
   *  MUST set this. Standard named networks have a known chainId.
   *
   */
  function BaseProvider(network) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, BaseProvider);

    base_provider_logger.checkNew(this instanceof BaseProvider ? this.constructor : void 0, lib_esm_Provider);
    _this = _super.call(this); // Events being listened to

    _this._events = [];
    _this._emitted = {
      block: -2
    };
    _this.formatter = (this instanceof BaseProvider ? this.constructor : void 0).getFormatter(); // If network is any, this Provider allows the underlying
    // network to change dynamically, and we auto-detect the
    // current network

    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "anyNetwork", network === "any");

    if (_this.anyNetwork) {
      network = _this.detectNetwork();
    }

    if (network instanceof Promise) {
      _this._networkPromise = network; // Squash any "unhandled promise" errors; that do not need to be handled

      network.catch(function (error) {}); // Trigger initial network setting (async)

      _this._ready().catch(function (error) {});
    } else {
      var knownNetwork = getStatic(this instanceof BaseProvider ? this.constructor : void 0, "getNetwork")(network);

      if (knownNetwork) {
        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_network", knownNetwork);

        _this.emit("network", knownNetwork, null);
      } else {
        base_provider_logger.throwArgumentError("invalid network", "network", network);
      }
    }

    _this._maxInternalBlockNumber = -1024;
    _this._lastBlockNumber = -2;
    _this._pollingInterval = 4000;
    _this._fastQueryDate = 0;
    return _this;
  }

  Object(createClass["a" /* default */])(BaseProvider, [{
    key: "_ready",
    value: function _ready() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee6() {
        var network;
        return regenerator_default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                if (!(this._network == null)) {
                  _context6.next = 17;
                  break;
                }

                network = null;

                if (!this._networkPromise) {
                  _context6.next = 11;
                  break;
                }

                _context6.prev = 3;
                _context6.next = 6;
                return this._networkPromise;

              case 6:
                network = _context6.sent;
                _context6.next = 11;
                break;

              case 9:
                _context6.prev = 9;
                _context6.t0 = _context6["catch"](3);

              case 11:
                if (!(network == null)) {
                  _context6.next = 15;
                  break;
                }

                _context6.next = 14;
                return this.detectNetwork();

              case 14:
                network = _context6.sent;

              case 15:
                // This should never happen; every Provider sub-class should have
                // suggested a network by here (or have thrown).
                if (!network) {
                  base_provider_logger.throwError("no network detected", logger_lib_esm["a" /* Logger */].errors.UNKNOWN_ERROR, {});
                } // Possible this call stacked so do not call defineReadOnly again


                if (this._network == null) {
                  if (this.anyNetwork) {
                    this._network = network;
                  } else {
                    defineReadOnly(this, "_network", network);
                  }

                  this.emit("network", network, null);
                }

              case 17:
                return _context6.abrupt("return", this._network);

              case 18:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[3, 9]]);
      }));
    } // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change

  }, {
    key: "ready",
    get: function get() {
      var _this2 = this;

      return lib_esm_poll(function () {
        return _this2._ready().then(function (network) {
          return network;
        }, function (error) {
          // If the network isn't running yet, we will wait
          if (error.code === logger_lib_esm["a" /* Logger */].errors.NETWORK_ERROR && error.event === "noNetwork") {
            return undefined;
          }

          throw error;
        });
      });
    } // @TODO: Remove this and just create a singleton formatter

  }, {
    key: "_getInternalBlockNumber",
    value: // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    function _getInternalBlockNumber(maxAge) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee7() {
        var _this3 = this;

        var internalBlockNumber, result, reqTime, checkInternalBlockNumber;
        return regenerator_default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.next = 2;
                return this._ready();

              case 2:
                if (!(maxAge > 0)) {
                  _context7.next = 20;
                  break;
                }

              case 3:
                if (!this._internalBlockNumber) {
                  _context7.next = 20;
                  break;
                }

                // ..."remember" which fetch we started with
                internalBlockNumber = this._internalBlockNumber;
                _context7.prev = 5;
                _context7.next = 8;
                return internalBlockNumber;

              case 8:
                result = _context7.sent;

                if (!(getTime() - result.respTime <= maxAge)) {
                  _context7.next = 11;
                  break;
                }

                return _context7.abrupt("return", result.blockNumber);

              case 11:
                return _context7.abrupt("break", 20);

              case 14:
                _context7.prev = 14;
                _context7.t0 = _context7["catch"](5);

                if (!(this._internalBlockNumber === internalBlockNumber)) {
                  _context7.next = 18;
                  break;
                }

                return _context7.abrupt("break", 20);

              case 18:
                _context7.next = 3;
                break;

              case 20:
                reqTime = getTime();
                checkInternalBlockNumber = resolveProperties({
                  blockNumber: this.perform("getBlockNumber", {}),
                  networkError: this.getNetwork().then(function (network) {
                    return null;
                  }, function (error) {
                    return error;
                  })
                }).then(function (_ref) {
                  var blockNumber = _ref.blockNumber,
                      networkError = _ref.networkError;

                  if (networkError) {
                    // Unremember this bad internal block number
                    if (_this3._internalBlockNumber === checkInternalBlockNumber) {
                      _this3._internalBlockNumber = null;
                    }

                    throw networkError;
                  }

                  var respTime = getTime();
                  blockNumber = bignumber_BigNumber.from(blockNumber).toNumber();

                  if (blockNumber < _this3._maxInternalBlockNumber) {
                    blockNumber = _this3._maxInternalBlockNumber;
                  }

                  _this3._maxInternalBlockNumber = blockNumber;

                  _this3._setFastBlockNumber(blockNumber); // @TODO: Still need this?


                  return {
                    blockNumber: blockNumber,
                    reqTime: reqTime,
                    respTime: respTime
                  };
                });
                this._internalBlockNumber = checkInternalBlockNumber; // Swallow unhandled exceptions; if needed they are handled else where

                checkInternalBlockNumber.catch(function (error) {
                  // Don't null the dead (rejected) fetch, if it has already been updated
                  if (_this3._internalBlockNumber === checkInternalBlockNumber) {
                    _this3._internalBlockNumber = null;
                  }
                });
                _context7.next = 26;
                return checkInternalBlockNumber;

              case 26:
                return _context7.abrupt("return", _context7.sent.blockNumber);

              case 27:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this, [[5, 14]]);
      }));
    }
  }, {
    key: "poll",
    value: function poll() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee8() {
        var _this4 = this;

        var pollId, runners, blockNumber, i;
        return regenerator_default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                pollId = nextPollId++; // Track all running promises, so we can trigger a post-poll once they are complete

                runners = [];
                blockNumber = null;
                _context8.prev = 3;
                _context8.next = 6;
                return this._getInternalBlockNumber(100 + this.pollingInterval / 2);

              case 6:
                blockNumber = _context8.sent;
                _context8.next = 13;
                break;

              case 9:
                _context8.prev = 9;
                _context8.t0 = _context8["catch"](3);
                this.emit("error", _context8.t0);
                return _context8.abrupt("return");

              case 13:
                this._setFastBlockNumber(blockNumber); // Emit a poll event after we have the latest (fast) block number


                this.emit("poll", pollId, blockNumber); // If the block has not changed, meh.

                if (!(blockNumber === this._lastBlockNumber)) {
                  _context8.next = 18;
                  break;
                }

                this.emit("didPoll", pollId);
                return _context8.abrupt("return");

              case 18:
                // First polling cycle, trigger a "block" events
                if (this._emitted.block === -2) {
                  this._emitted.block = blockNumber - 1;
                }

                if (Math.abs(this._emitted.block - blockNumber) > 1000) {
                  base_provider_logger.warn("network block skew detected; skipping block events (emitted=".concat(this._emitted.block, " blockNumber").concat(blockNumber, ")"));
                  this.emit("error", base_provider_logger.makeError("network block skew detected", logger_lib_esm["a" /* Logger */].errors.NETWORK_ERROR, {
                    blockNumber: blockNumber,
                    event: "blockSkew",
                    previousBlockNumber: this._emitted.block
                  }));
                  this.emit("block", blockNumber);
                } else {
                  // Notify all listener for each block that has passed
                  for (i = this._emitted.block + 1; i <= blockNumber; i++) {
                    this.emit("block", i);
                  }
                } // The emitted block was updated, check for obsolete events


                if (this._emitted.block !== blockNumber) {
                  this._emitted.block = blockNumber;
                  Object.keys(this._emitted).forEach(function (key) {
                    // The block event does not expire
                    if (key === "block") {
                      return;
                    } // The block we were at when we emitted this event


                    var eventBlockNumber = _this4._emitted[key]; // We cannot garbage collect pending transactions or blocks here
                    // They should be garbage collected by the Provider when setting
                    // "pending" events

                    if (eventBlockNumber === "pending") {
                      return;
                    } // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways


                    if (blockNumber - eventBlockNumber > 12) {
                      delete _this4._emitted[key];
                    }
                  });
                } // First polling cycle


                if (this._lastBlockNumber === -2) {
                  this._lastBlockNumber = blockNumber - 1;
                } // Find all transaction hashes we are waiting on


                this._events.forEach(function (event) {
                  switch (event.type) {
                    case "tx":
                      {
                        var hash = event.hash;

                        var runner = _this4.getTransactionReceipt(hash).then(function (receipt) {
                          if (!receipt || receipt.blockNumber == null) {
                            return null;
                          }

                          _this4._emitted["t:" + hash] = receipt.blockNumber;

                          _this4.emit(hash, receipt);

                          return null;
                        }).catch(function (error) {
                          _this4.emit("error", error);
                        });

                        runners.push(runner);
                        break;
                      }

                    case "filter":
                      {
                        var filter = event.filter;
                        filter.fromBlock = _this4._lastBlockNumber + 1;
                        filter.toBlock = blockNumber;

                        var _runner = _this4.getLogs(filter).then(function (logs) {
                          if (logs.length === 0) {
                            return;
                          }

                          logs.forEach(function (log) {
                            _this4._emitted["b:" + log.blockHash] = log.blockNumber;
                            _this4._emitted["t:" + log.transactionHash] = log.blockNumber;

                            _this4.emit(filter, log);
                          });
                        }).catch(function (error) {
                          _this4.emit("error", error);
                        });

                        runners.push(_runner);
                        break;
                      }
                  }
                });

                this._lastBlockNumber = blockNumber; // Once all events for this loop have been processed, emit "didPoll"

                Promise.all(runners).then(function () {
                  _this4.emit("didPoll", pollId);
                }).catch(function (error) {
                  _this4.emit("error", error);
                });
                return _context8.abrupt("return");

              case 26:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[3, 9]]);
      }));
    } // Deprecated; do not use this

  }, {
    key: "resetEventsBlock",
    value: function resetEventsBlock(blockNumber) {
      this._lastBlockNumber = blockNumber - 1;

      if (this.polling) {
        this.poll();
      }
    }
  }, {
    key: "network",
    get: function get() {
      return this._network;
    } // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend

  }, {
    key: "detectNetwork",
    value: function detectNetwork() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee9() {
        return regenerator_default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                return _context9.abrupt("return", base_provider_logger.throwError("provider does not support network detection", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                  operation: "provider.detectNetwork"
                }));

              case 1:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));
    }
  }, {
    key: "getNetwork",
    value: function getNetwork() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee10() {
        var network, currentNetwork, error;
        return regenerator_default.a.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                _context10.next = 2;
                return this._ready();

              case 2:
                network = _context10.sent;
                _context10.next = 5;
                return this.detectNetwork();

              case 5:
                currentNetwork = _context10.sent;

                if (!(network.chainId !== currentNetwork.chainId)) {
                  _context10.next = 23;
                  break;
                }

                if (!this.anyNetwork) {
                  _context10.next = 20;
                  break;
                }

                this._network = currentNetwork; // Reset all internal block number guards and caches

                this._lastBlockNumber = -2;
                this._fastBlockNumber = null;
                this._fastBlockNumberPromise = null;
                this._fastQueryDate = 0;
                this._emitted.block = -2;
                this._maxInternalBlockNumber = -1024;
                this._internalBlockNumber = null; // The "network" event MUST happen before this method resolves
                // so any events have a chance to unregister, so we stall an
                // additional event loop before returning from /this/ call

                this.emit("network", currentNetwork, network);
                _context10.next = 19;
                return base_provider_stall(0);

              case 19:
                return _context10.abrupt("return", this._network);

              case 20:
                error = base_provider_logger.makeError("underlying network changed", logger_lib_esm["a" /* Logger */].errors.NETWORK_ERROR, {
                  event: "changed",
                  network: network,
                  detectedNetwork: currentNetwork
                });
                this.emit("error", error);
                throw error;

              case 23:
                return _context10.abrupt("return", network);

              case 24:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
    }
  }, {
    key: "blockNumber",
    get: function get() {
      var _this5 = this;

      this._getInternalBlockNumber(100 + this.pollingInterval / 2).then(function (blockNumber) {
        _this5._setFastBlockNumber(blockNumber);
      }, function (error) {});

      return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
    }
  }, {
    key: "polling",
    get: function get() {
      return this._poller != null;
    },
    set: function set(value) {
      var _this6 = this;

      if (value && !this._poller) {
        this._poller = setInterval(function () {
          _this6.poll();
        }, this.pollingInterval);

        if (!this._bootstrapPoll) {
          this._bootstrapPoll = setTimeout(function () {
            _this6.poll(); // We block additional polls until the polling interval
            // is done, to prevent overwhelming the poll function


            _this6._bootstrapPoll = setTimeout(function () {
              // If polling was disabled, something may require a poke
              // since starting the bootstrap poll and it was disabled
              if (!_this6._poller) {
                _this6.poll();
              } // Clear out the bootstrap so we can do another


              _this6._bootstrapPoll = null;
            }, _this6.pollingInterval);
          }, 0);
        }
      } else if (!value && this._poller) {
        clearInterval(this._poller);
        this._poller = null;
      }
    }
  }, {
    key: "pollingInterval",
    get: function get() {
      return this._pollingInterval;
    },
    set: function set(value) {
      var _this7 = this;

      if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) {
        throw new Error("invalid polling interval");
      }

      this._pollingInterval = value;

      if (this._poller) {
        clearInterval(this._poller);
        this._poller = setInterval(function () {
          _this7.poll();
        }, this._pollingInterval);
      }
    }
  }, {
    key: "_getFastBlockNumber",
    value: function _getFastBlockNumber() {
      var _this8 = this;

      var now = getTime(); // Stale block number, request a newer value

      if (now - this._fastQueryDate > 2 * this._pollingInterval) {
        this._fastQueryDate = now;
        this._fastBlockNumberPromise = this.getBlockNumber().then(function (blockNumber) {
          if (_this8._fastBlockNumber == null || blockNumber > _this8._fastBlockNumber) {
            _this8._fastBlockNumber = blockNumber;
          }

          return _this8._fastBlockNumber;
        });
      }

      return this._fastBlockNumberPromise;
    }
  }, {
    key: "_setFastBlockNumber",
    value: function _setFastBlockNumber(blockNumber) {
      // Older block, maybe a stale request
      if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
        return;
      } // Update the time we updated the blocknumber


      this._fastQueryDate = getTime(); // Newer block number, use  it

      if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
        this._fastBlockNumber = blockNumber;
        this._fastBlockNumberPromise = Promise.resolve(blockNumber);
      }
    }
  }, {
    key: "waitForTransaction",
    value: function waitForTransaction(transactionHash, confirmations, timeout) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee11() {
        return regenerator_default.a.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                return _context11.abrupt("return", this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null));

              case 1:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
    }
  }, {
    key: "_waitForTransaction",
    value: function _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee14() {
        var _this9 = this;

        var receipt;
        return regenerator_default.a.wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                _context14.next = 2;
                return this.getTransactionReceipt(transactionHash);

              case 2:
                receipt = _context14.sent;

                if (!((receipt ? receipt.confirmations : 0) >= confirmations)) {
                  _context14.next = 5;
                  break;
                }

                return _context14.abrupt("return", receipt);

              case 5:
                return _context14.abrupt("return", new Promise(function (resolve, reject) {
                  var cancelFuncs = [];
                  var done = false;

                  var alreadyDone = function alreadyDone() {
                    if (done) {
                      return true;
                    }

                    done = true;
                    cancelFuncs.forEach(function (func) {
                      func();
                    });
                    return false;
                  };

                  var minedHandler = function minedHandler(receipt) {
                    if (receipt.confirmations < confirmations) {
                      return;
                    }

                    if (alreadyDone()) {
                      return;
                    }

                    resolve(receipt);
                  };

                  _this9.on(transactionHash, minedHandler);

                  cancelFuncs.push(function () {
                    _this9.removeListener(transactionHash, minedHandler);
                  });

                  if (replaceable) {
                    var lastBlockNumber = replaceable.startBlock;
                    var scannedBlock = null;

                    var replaceHandler = function replaceHandler(blockNumber) {
                      return base_provider_awaiter(_this9, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee13() {
                        var _this10 = this;

                        return regenerator_default.a.wrap(function _callee13$(_context13) {
                          while (1) {
                            switch (_context13.prev = _context13.next) {
                              case 0:
                                if (!done) {
                                  _context13.next = 2;
                                  break;
                                }

                                return _context13.abrupt("return");

                              case 2:
                                _context13.next = 4;
                                return base_provider_stall(1000);

                              case 4:
                                this.getTransactionCount(replaceable.from).then(function (nonce) {
                                  return base_provider_awaiter(_this10, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee12() {
                                    var mined, block, ti, tx, _receipt, reason;

                                    return regenerator_default.a.wrap(function _callee12$(_context12) {
                                      while (1) {
                                        switch (_context12.prev = _context12.next) {
                                          case 0:
                                            if (!done) {
                                              _context12.next = 2;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 2:
                                            if (!(nonce <= replaceable.nonce)) {
                                              _context12.next = 6;
                                              break;
                                            }

                                            lastBlockNumber = blockNumber;
                                            _context12.next = 41;
                                            break;

                                          case 6:
                                            _context12.next = 8;
                                            return this.getTransaction(transactionHash);

                                          case 8:
                                            mined = _context12.sent;

                                            if (!(mined && mined.blockNumber != null)) {
                                              _context12.next = 11;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 11:
                                            // First time scanning. We start a little earlier for some
                                            // wiggle room here to handle the eventually consistent nature
                                            // of blockchain (e.g. the getTransactionCount was for a
                                            // different block)
                                            if (scannedBlock == null) {
                                              scannedBlock = lastBlockNumber - 3;

                                              if (scannedBlock < replaceable.startBlock) {
                                                scannedBlock = replaceable.startBlock;
                                              }
                                            }

                                          case 12:
                                            if (!(scannedBlock <= blockNumber)) {
                                              _context12.next = 41;
                                              break;
                                            }

                                            if (!done) {
                                              _context12.next = 15;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 15:
                                            _context12.next = 17;
                                            return this.getBlockWithTransactions(scannedBlock);

                                          case 17:
                                            block = _context12.sent;
                                            ti = 0;

                                          case 19:
                                            if (!(ti < block.transactions.length)) {
                                              _context12.next = 38;
                                              break;
                                            }

                                            tx = block.transactions[ti]; // Successfully mined!

                                            if (!(tx.hash === transactionHash)) {
                                              _context12.next = 23;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 23:
                                            if (!(tx.from === replaceable.from && tx.nonce === replaceable.nonce)) {
                                              _context12.next = 35;
                                              break;
                                            }

                                            if (!done) {
                                              _context12.next = 26;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 26:
                                            _context12.next = 28;
                                            return this.waitForTransaction(tx.hash, confirmations);

                                          case 28:
                                            _receipt = _context12.sent;

                                            if (!alreadyDone()) {
                                              _context12.next = 31;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 31:
                                            // The reason we were replaced
                                            reason = "replaced";

                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                                              reason = "repriced";
                                            } else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                                              reason = "cancelled";
                                            } // Explain why we were replaced


                                            // Explain why we were replaced
                                            reject(base_provider_logger.makeError("transaction was replaced", logger_lib_esm["a" /* Logger */].errors.TRANSACTION_REPLACED, {
                                              cancelled: reason === "replaced" || reason === "cancelled",
                                              reason: reason,
                                              replacement: this._wrapTransaction(tx),
                                              hash: transactionHash,
                                              receipt: _receipt
                                            }));
                                            return _context12.abrupt("return");

                                          case 35:
                                            ti++;
                                            _context12.next = 19;
                                            break;

                                          case 38:
                                            scannedBlock++;
                                            _context12.next = 12;
                                            break;

                                          case 41:
                                            if (!done) {
                                              _context12.next = 43;
                                              break;
                                            }

                                            return _context12.abrupt("return");

                                          case 43:
                                            this.once("block", replaceHandler);

                                          case 44:
                                          case "end":
                                            return _context12.stop();
                                        }
                                      }
                                    }, _callee12, this);
                                  }));
                                }, function (error) {
                                  if (done) {
                                    return;
                                  }

                                  _this10.once("block", replaceHandler);
                                });

                              case 5:
                              case "end":
                                return _context13.stop();
                            }
                          }
                        }, _callee13, this);
                      }));
                    };

                    if (done) {
                      return;
                    }

                    _this9.once("block", replaceHandler);

                    cancelFuncs.push(function () {
                      _this9.removeListener("block", replaceHandler);
                    });
                  }

                  if (typeof timeout === "number" && timeout > 0) {
                    var timer = setTimeout(function () {
                      if (alreadyDone()) {
                        return;
                      }

                      reject(base_provider_logger.makeError("timeout exceeded", logger_lib_esm["a" /* Logger */].errors.TIMEOUT, {
                        timeout: timeout
                      }));
                    }, timeout);

                    if (timer.unref) {
                      timer.unref();
                    }

                    cancelFuncs.push(function () {
                      clearTimeout(timer);
                    });
                  }
                }));

              case 6:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14, this);
      }));
    }
  }, {
    key: "getBlockNumber",
    value: function getBlockNumber() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee15() {
        return regenerator_default.a.wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                return _context15.abrupt("return", this._getInternalBlockNumber(0));

              case 1:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));
    }
  }, {
    key: "getGasPrice",
    value: function getGasPrice() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee16() {
        var result;
        return regenerator_default.a.wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                _context16.next = 2;
                return this.getNetwork();

              case 2:
                _context16.next = 4;
                return this.perform("getGasPrice", {});

              case 4:
                result = _context16.sent;
                _context16.prev = 5;
                return _context16.abrupt("return", bignumber_BigNumber.from(result));

              case 9:
                _context16.prev = 9;
                _context16.t0 = _context16["catch"](5);
                return _context16.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "getGasPrice",
                  result: result,
                  error: _context16.t0
                }));

              case 12:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this, [[5, 9]]);
      }));
    }
  }, {
    key: "getBalance",
    value: function getBalance(addressOrName, blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee17() {
        var params, result;
        return regenerator_default.a.wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                _context17.next = 2;
                return this.getNetwork();

              case 2:
                _context17.next = 4;
                return resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

              case 4:
                params = _context17.sent;
                _context17.next = 7;
                return this.perform("getBalance", params);

              case 7:
                result = _context17.sent;
                _context17.prev = 8;
                return _context17.abrupt("return", bignumber_BigNumber.from(result));

              case 12:
                _context17.prev = 12;
                _context17.t0 = _context17["catch"](8);
                return _context17.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "getBalance",
                  params: params,
                  result: result,
                  error: _context17.t0
                }));

              case 15:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this, [[8, 12]]);
      }));
    }
  }, {
    key: "getTransactionCount",
    value: function getTransactionCount(addressOrName, blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee18() {
        var params, result;
        return regenerator_default.a.wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                _context18.next = 2;
                return this.getNetwork();

              case 2:
                _context18.next = 4;
                return resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

              case 4:
                params = _context18.sent;
                _context18.next = 7;
                return this.perform("getTransactionCount", params);

              case 7:
                result = _context18.sent;
                _context18.prev = 8;
                return _context18.abrupt("return", bignumber_BigNumber.from(result).toNumber());

              case 12:
                _context18.prev = 12;
                _context18.t0 = _context18["catch"](8);
                return _context18.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "getTransactionCount",
                  params: params,
                  result: result,
                  error: _context18.t0
                }));

              case 15:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this, [[8, 12]]);
      }));
    }
  }, {
    key: "getCode",
    value: function getCode(addressOrName, blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee19() {
        var params, result;
        return regenerator_default.a.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                _context19.next = 2;
                return this.getNetwork();

              case 2:
                _context19.next = 4;
                return resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag)
                });

              case 4:
                params = _context19.sent;
                _context19.next = 7;
                return this.perform("getCode", params);

              case 7:
                result = _context19.sent;
                _context19.prev = 8;
                return _context19.abrupt("return", Object(lib_esm["h" /* hexlify */])(result));

              case 12:
                _context19.prev = 12;
                _context19.t0 = _context19["catch"](8);
                return _context19.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "getCode",
                  params: params,
                  result: result,
                  error: _context19.t0
                }));

              case 15:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this, [[8, 12]]);
      }));
    }
  }, {
    key: "getStorageAt",
    value: function getStorageAt(addressOrName, position, blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee20() {
        var params, result;
        return regenerator_default.a.wrap(function _callee20$(_context20) {
          while (1) {
            switch (_context20.prev = _context20.next) {
              case 0:
                _context20.next = 2;
                return this.getNetwork();

              case 2:
                _context20.next = 4;
                return resolveProperties({
                  address: this._getAddress(addressOrName),
                  blockTag: this._getBlockTag(blockTag),
                  position: Promise.resolve(position).then(function (p) {
                    return Object(lib_esm["f" /* hexValue */])(p);
                  })
                });

              case 4:
                params = _context20.sent;
                _context20.next = 7;
                return this.perform("getStorageAt", params);

              case 7:
                result = _context20.sent;
                _context20.prev = 8;
                return _context20.abrupt("return", Object(lib_esm["h" /* hexlify */])(result));

              case 12:
                _context20.prev = 12;
                _context20.t0 = _context20["catch"](8);
                return _context20.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "getStorageAt",
                  params: params,
                  result: result,
                  error: _context20.t0
                }));

              case 15:
              case "end":
                return _context20.stop();
            }
          }
        }, _callee20, this, [[8, 12]]);
      }));
    } // This should be called by any subclass wrapping a TransactionResponse

  }, {
    key: "_wrapTransaction",
    value: function _wrapTransaction(tx, hash, startBlock) {
      var _this11 = this;

      if (hash != null && Object(lib_esm["d" /* hexDataLength */])(hash) !== 32) {
        throw new Error("invalid response - sendTransaction");
      }

      var result = tx; // Check the hash we expect is the same as the hash the server reported

      if (hash != null && tx.hash !== hash) {
        base_provider_logger.throwError("Transaction hash mismatch from Provider.sendTransaction.", logger_lib_esm["a" /* Logger */].errors.UNKNOWN_ERROR, {
          expectedHash: tx.hash,
          returnedHash: hash
        });
      }

      result.wait = function (confirms, timeout) {
        return base_provider_awaiter(_this11, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee21() {
          var replacement, receipt;
          return regenerator_default.a.wrap(function _callee21$(_context21) {
            while (1) {
              switch (_context21.prev = _context21.next) {
                case 0:
                  if (confirms == null) {
                    confirms = 1;
                  }

                  if (timeout == null) {
                    timeout = 0;
                  } // Get the details to detect replacement


                  replacement = undefined;

                  if (confirms !== 0 && startBlock != null) {
                    replacement = {
                      data: tx.data,
                      from: tx.from,
                      nonce: tx.nonce,
                      to: tx.to,
                      value: tx.value,
                      startBlock: startBlock
                    };
                  }

                  _context21.next = 6;
                  return this._waitForTransaction(tx.hash, confirms, timeout, replacement);

                case 6:
                  receipt = _context21.sent;

                  if (!(receipt == null && confirms === 0)) {
                    _context21.next = 9;
                    break;
                  }

                  return _context21.abrupt("return", null);

                case 9:
                  // No longer pending, allow the polling loop to garbage collect this
                  this._emitted["t:" + tx.hash] = receipt.blockNumber;

                  if (receipt.status === 0) {
                    base_provider_logger.throwError("transaction failed", logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION, {
                      transactionHash: tx.hash,
                      transaction: tx,
                      receipt: receipt
                    });
                  }

                  return _context21.abrupt("return", receipt);

                case 12:
                case "end":
                  return _context21.stop();
              }
            }
          }, _callee21, this);
        }));
      };

      return result;
    }
  }, {
    key: "sendTransaction",
    value: function sendTransaction(signedTransaction) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee22() {
        var hexTx, tx, blockNumber, hash;
        return regenerator_default.a.wrap(function _callee22$(_context22) {
          while (1) {
            switch (_context22.prev = _context22.next) {
              case 0:
                _context22.next = 2;
                return this.getNetwork();

              case 2:
                _context22.next = 4;
                return Promise.resolve(signedTransaction).then(function (t) {
                  return Object(lib_esm["h" /* hexlify */])(t);
                });

              case 4:
                hexTx = _context22.sent;
                tx = this.formatter.transaction(signedTransaction);

                if (tx.confirmations == null) {
                  tx.confirmations = 0;
                }

                _context22.next = 9;
                return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

              case 9:
                blockNumber = _context22.sent;
                _context22.prev = 10;
                _context22.next = 13;
                return this.perform("sendTransaction", {
                  signedTransaction: hexTx
                });

              case 13:
                hash = _context22.sent;
                return _context22.abrupt("return", this._wrapTransaction(tx, hash, blockNumber));

              case 17:
                _context22.prev = 17;
                _context22.t0 = _context22["catch"](10);
                _context22.t0.transaction = tx;
                _context22.t0.transactionHash = tx.hash;
                throw _context22.t0;

              case 22:
              case "end":
                return _context22.stop();
            }
          }
        }, _callee22, this, [[10, 17]]);
      }));
    }
  }, {
    key: "_getTransactionRequest",
    value: function _getTransactionRequest(transaction) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee23() {
        var _this12 = this;

        var values, tx;
        return regenerator_default.a.wrap(function _callee23$(_context23) {
          while (1) {
            switch (_context23.prev = _context23.next) {
              case 0:
                _context23.next = 2;
                return transaction;

              case 2:
                values = _context23.sent;
                tx = {};
                ["from", "to"].forEach(function (key) {
                  if (values[key] == null) {
                    return;
                  }

                  tx[key] = Promise.resolve(values[key]).then(function (v) {
                    return v ? _this12._getAddress(v) : null;
                  });
                });
                ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach(function (key) {
                  if (values[key] == null) {
                    return;
                  }

                  tx[key] = Promise.resolve(values[key]).then(function (v) {
                    return v ? bignumber_BigNumber.from(v) : null;
                  });
                });
                ["type"].forEach(function (key) {
                  if (values[key] == null) {
                    return;
                  }

                  tx[key] = Promise.resolve(values[key]).then(function (v) {
                    return v != null ? v : null;
                  });
                });

                if (values.accessList) {
                  tx.accessList = this.formatter.accessList(values.accessList);
                }

                ["data"].forEach(function (key) {
                  if (values[key] == null) {
                    return;
                  }

                  tx[key] = Promise.resolve(values[key]).then(function (v) {
                    return v ? Object(lib_esm["h" /* hexlify */])(v) : null;
                  });
                });
                _context23.t0 = this.formatter;
                _context23.next = 12;
                return resolveProperties(tx);

              case 12:
                _context23.t1 = _context23.sent;
                return _context23.abrupt("return", _context23.t0.transactionRequest.call(_context23.t0, _context23.t1));

              case 14:
              case "end":
                return _context23.stop();
            }
          }
        }, _callee23, this);
      }));
    }
  }, {
    key: "_getFilter",
    value: function _getFilter(filter) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee24() {
        var _this13 = this;

        var result;
        return regenerator_default.a.wrap(function _callee24$(_context24) {
          while (1) {
            switch (_context24.prev = _context24.next) {
              case 0:
                _context24.next = 2;
                return filter;

              case 2:
                filter = _context24.sent;
                result = {};

                if (filter.address != null) {
                  result.address = this._getAddress(filter.address);
                }

                ["blockHash", "topics"].forEach(function (key) {
                  if (filter[key] == null) {
                    return;
                  }

                  result[key] = filter[key];
                });
                ["fromBlock", "toBlock"].forEach(function (key) {
                  if (filter[key] == null) {
                    return;
                  }

                  result[key] = _this13._getBlockTag(filter[key]);
                });
                _context24.t0 = this.formatter;
                _context24.next = 10;
                return resolveProperties(result);

              case 10:
                _context24.t1 = _context24.sent;
                return _context24.abrupt("return", _context24.t0.filter.call(_context24.t0, _context24.t1));

              case 12:
              case "end":
                return _context24.stop();
            }
          }
        }, _callee24, this);
      }));
    }
  }, {
    key: "call",
    value: function call(transaction, blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee25() {
        var params, result;
        return regenerator_default.a.wrap(function _callee25$(_context25) {
          while (1) {
            switch (_context25.prev = _context25.next) {
              case 0:
                _context25.next = 2;
                return this.getNetwork();

              case 2:
                _context25.next = 4;
                return resolveProperties({
                  transaction: this._getTransactionRequest(transaction),
                  blockTag: this._getBlockTag(blockTag)
                });

              case 4:
                params = _context25.sent;
                _context25.next = 7;
                return this.perform("call", params);

              case 7:
                result = _context25.sent;
                _context25.prev = 8;
                return _context25.abrupt("return", Object(lib_esm["h" /* hexlify */])(result));

              case 12:
                _context25.prev = 12;
                _context25.t0 = _context25["catch"](8);
                return _context25.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "call",
                  params: params,
                  result: result,
                  error: _context25.t0
                }));

              case 15:
              case "end":
                return _context25.stop();
            }
          }
        }, _callee25, this, [[8, 12]]);
      }));
    }
  }, {
    key: "estimateGas",
    value: function estimateGas(transaction) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee26() {
        var params, result;
        return regenerator_default.a.wrap(function _callee26$(_context26) {
          while (1) {
            switch (_context26.prev = _context26.next) {
              case 0:
                _context26.next = 2;
                return this.getNetwork();

              case 2:
                _context26.next = 4;
                return resolveProperties({
                  transaction: this._getTransactionRequest(transaction)
                });

              case 4:
                params = _context26.sent;
                _context26.next = 7;
                return this.perform("estimateGas", params);

              case 7:
                result = _context26.sent;
                _context26.prev = 8;
                return _context26.abrupt("return", bignumber_BigNumber.from(result));

              case 12:
                _context26.prev = 12;
                _context26.t0 = _context26["catch"](8);
                return _context26.abrupt("return", base_provider_logger.throwError("bad result from backend", logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR, {
                  method: "estimateGas",
                  params: params,
                  result: result,
                  error: _context26.t0
                }));

              case 15:
              case "end":
                return _context26.stop();
            }
          }
        }, _callee26, this, [[8, 12]]);
      }));
    }
  }, {
    key: "_getAddress",
    value: function _getAddress(addressOrName) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee27() {
        var address;
        return regenerator_default.a.wrap(function _callee27$(_context27) {
          while (1) {
            switch (_context27.prev = _context27.next) {
              case 0:
                _context27.next = 2;
                return addressOrName;

              case 2:
                addressOrName = _context27.sent;

                if (typeof addressOrName !== "string") {
                  base_provider_logger.throwArgumentError("invalid address or ENS name", "name", addressOrName);
                }

                _context27.next = 6;
                return this.resolveName(addressOrName);

              case 6:
                address = _context27.sent;

                if (address == null) {
                  base_provider_logger.throwError("ENS name not configured", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                    operation: "resolveName(".concat(JSON.stringify(addressOrName), ")")
                  });
                }

                return _context27.abrupt("return", address);

              case 9:
              case "end":
                return _context27.stop();
            }
          }
        }, _callee27, this);
      }));
    }
  }, {
    key: "_getBlock",
    value: function _getBlock(blockHashOrBlockTag, includeTransactions) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee29() {
        var _this14 = this;

        var blockNumber, params;
        return regenerator_default.a.wrap(function _callee29$(_context29) {
          while (1) {
            switch (_context29.prev = _context29.next) {
              case 0:
                _context29.next = 2;
                return this.getNetwork();

              case 2:
                _context29.next = 4;
                return blockHashOrBlockTag;

              case 4:
                blockHashOrBlockTag = _context29.sent;
                // If blockTag is a number (not "latest", etc), this is the block number
                blockNumber = -128;
                params = {
                  includeTransactions: !!includeTransactions
                };

                if (!Object(lib_esm["k" /* isHexString */])(blockHashOrBlockTag, 32)) {
                  _context29.next = 11;
                  break;
                }

                params.blockHash = blockHashOrBlockTag;
                _context29.next = 21;
                break;

              case 11:
                _context29.prev = 11;
                _context29.next = 14;
                return this._getBlockTag(blockHashOrBlockTag);

              case 14:
                params.blockTag = _context29.sent;

                if (Object(lib_esm["k" /* isHexString */])(params.blockTag)) {
                  blockNumber = parseInt(params.blockTag.substring(2), 16);
                }

                _context29.next = 21;
                break;

              case 18:
                _context29.prev = 18;
                _context29.t0 = _context29["catch"](11);
                base_provider_logger.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);

              case 21:
                return _context29.abrupt("return", lib_esm_poll(function () {
                  return base_provider_awaiter(_this14, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee28() {
                    var _this15 = this;

                    var block, _blockNumber, i, tx, confirmations, blockWithTxs;

                    return regenerator_default.a.wrap(function _callee28$(_context28) {
                      while (1) {
                        switch (_context28.prev = _context28.next) {
                          case 0:
                            _context28.next = 2;
                            return this.perform("getBlock", params);

                          case 2:
                            block = _context28.sent;

                            if (!(block == null)) {
                              _context28.next = 11;
                              break;
                            }

                            if (!(params.blockHash != null)) {
                              _context28.next = 7;
                              break;
                            }

                            if (!(this._emitted["b:" + params.blockHash] == null)) {
                              _context28.next = 7;
                              break;
                            }

                            return _context28.abrupt("return", null);

                          case 7:
                            if (!(params.blockTag != null)) {
                              _context28.next = 10;
                              break;
                            }

                            if (!(blockNumber > this._emitted.block)) {
                              _context28.next = 10;
                              break;
                            }

                            return _context28.abrupt("return", null);

                          case 10:
                            return _context28.abrupt("return", undefined);

                          case 11:
                            if (!includeTransactions) {
                              _context28.next = 34;
                              break;
                            }

                            _blockNumber = null;
                            i = 0;

                          case 14:
                            if (!(i < block.transactions.length)) {
                              _context28.next = 31;
                              break;
                            }

                            tx = block.transactions[i];

                            if (!(tx.blockNumber == null)) {
                              _context28.next = 20;
                              break;
                            }

                            tx.confirmations = 0;
                            _context28.next = 28;
                            break;

                          case 20:
                            if (!(tx.confirmations == null)) {
                              _context28.next = 28;
                              break;
                            }

                            if (!(_blockNumber == null)) {
                              _context28.next = 25;
                              break;
                            }

                            _context28.next = 24;
                            return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                          case 24:
                            _blockNumber = _context28.sent;

                          case 25:
                            // Add the confirmations using the fast block number (pessimistic)
                            confirmations = _blockNumber - tx.blockNumber + 1;

                            if (confirmations <= 0) {
                              confirmations = 1;
                            }

                            tx.confirmations = confirmations;

                          case 28:
                            i++;
                            _context28.next = 14;
                            break;

                          case 31:
                            blockWithTxs = this.formatter.blockWithTransactions(block);
                            blockWithTxs.transactions = blockWithTxs.transactions.map(function (tx) {
                              return _this15._wrapTransaction(tx);
                            });
                            return _context28.abrupt("return", blockWithTxs);

                          case 34:
                            return _context28.abrupt("return", this.formatter.block(block));

                          case 35:
                          case "end":
                            return _context28.stop();
                        }
                      }
                    }, _callee28, this);
                  }));
                }, {
                  oncePoll: this
                }));

              case 22:
              case "end":
                return _context29.stop();
            }
          }
        }, _callee29, this, [[11, 18]]);
      }));
    }
  }, {
    key: "getBlock",
    value: function getBlock(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, false);
    }
  }, {
    key: "getBlockWithTransactions",
    value: function getBlockWithTransactions(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, true);
    }
  }, {
    key: "getTransaction",
    value: function getTransaction(transactionHash) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee31() {
        var _this16 = this;

        var params;
        return regenerator_default.a.wrap(function _callee31$(_context31) {
          while (1) {
            switch (_context31.prev = _context31.next) {
              case 0:
                _context31.next = 2;
                return this.getNetwork();

              case 2:
                _context31.next = 4;
                return transactionHash;

              case 4:
                transactionHash = _context31.sent;
                params = {
                  transactionHash: this.formatter.hash(transactionHash, true)
                };
                return _context31.abrupt("return", lib_esm_poll(function () {
                  return base_provider_awaiter(_this16, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee30() {
                    var result, tx, blockNumber, confirmations;
                    return regenerator_default.a.wrap(function _callee30$(_context30) {
                      while (1) {
                        switch (_context30.prev = _context30.next) {
                          case 0:
                            _context30.next = 2;
                            return this.perform("getTransaction", params);

                          case 2:
                            result = _context30.sent;

                            if (!(result == null)) {
                              _context30.next = 7;
                              break;
                            }

                            if (!(this._emitted["t:" + transactionHash] == null)) {
                              _context30.next = 6;
                              break;
                            }

                            return _context30.abrupt("return", null);

                          case 6:
                            return _context30.abrupt("return", undefined);

                          case 7:
                            tx = this.formatter.transactionResponse(result);

                            if (!(tx.blockNumber == null)) {
                              _context30.next = 12;
                              break;
                            }

                            tx.confirmations = 0;
                            _context30.next = 19;
                            break;

                          case 12:
                            if (!(tx.confirmations == null)) {
                              _context30.next = 19;
                              break;
                            }

                            _context30.next = 15;
                            return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                          case 15:
                            blockNumber = _context30.sent;
                            // Add the confirmations using the fast block number (pessimistic)
                            confirmations = blockNumber - tx.blockNumber + 1;

                            if (confirmations <= 0) {
                              confirmations = 1;
                            }

                            tx.confirmations = confirmations;

                          case 19:
                            return _context30.abrupt("return", this._wrapTransaction(tx));

                          case 20:
                          case "end":
                            return _context30.stop();
                        }
                      }
                    }, _callee30, this);
                  }));
                }, {
                  oncePoll: this
                }));

              case 7:
              case "end":
                return _context31.stop();
            }
          }
        }, _callee31, this);
      }));
    }
  }, {
    key: "getTransactionReceipt",
    value: function getTransactionReceipt(transactionHash) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee33() {
        var _this17 = this;

        var params;
        return regenerator_default.a.wrap(function _callee33$(_context33) {
          while (1) {
            switch (_context33.prev = _context33.next) {
              case 0:
                _context33.next = 2;
                return this.getNetwork();

              case 2:
                _context33.next = 4;
                return transactionHash;

              case 4:
                transactionHash = _context33.sent;
                params = {
                  transactionHash: this.formatter.hash(transactionHash, true)
                };
                return _context33.abrupt("return", lib_esm_poll(function () {
                  return base_provider_awaiter(_this17, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee32() {
                    var result, receipt, blockNumber, confirmations;
                    return regenerator_default.a.wrap(function _callee32$(_context32) {
                      while (1) {
                        switch (_context32.prev = _context32.next) {
                          case 0:
                            _context32.next = 2;
                            return this.perform("getTransactionReceipt", params);

                          case 2:
                            result = _context32.sent;

                            if (!(result == null)) {
                              _context32.next = 7;
                              break;
                            }

                            if (!(this._emitted["t:" + transactionHash] == null)) {
                              _context32.next = 6;
                              break;
                            }

                            return _context32.abrupt("return", null);

                          case 6:
                            return _context32.abrupt("return", undefined);

                          case 7:
                            if (!(result.blockHash == null)) {
                              _context32.next = 9;
                              break;
                            }

                            return _context32.abrupt("return", undefined);

                          case 9:
                            receipt = this.formatter.receipt(result);

                            if (!(receipt.blockNumber == null)) {
                              _context32.next = 14;
                              break;
                            }

                            receipt.confirmations = 0;
                            _context32.next = 21;
                            break;

                          case 14:
                            if (!(receipt.confirmations == null)) {
                              _context32.next = 21;
                              break;
                            }

                            _context32.next = 17;
                            return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

                          case 17:
                            blockNumber = _context32.sent;
                            // Add the confirmations using the fast block number (pessimistic)
                            confirmations = blockNumber - receipt.blockNumber + 1;

                            if (confirmations <= 0) {
                              confirmations = 1;
                            }

                            receipt.confirmations = confirmations;

                          case 21:
                            return _context32.abrupt("return", receipt);

                          case 22:
                          case "end":
                            return _context32.stop();
                        }
                      }
                    }, _callee32, this);
                  }));
                }, {
                  oncePoll: this
                }));

              case 7:
              case "end":
                return _context33.stop();
            }
          }
        }, _callee33, this);
      }));
    }
  }, {
    key: "getLogs",
    value: function getLogs(filter) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee34() {
        var params, logs;
        return regenerator_default.a.wrap(function _callee34$(_context34) {
          while (1) {
            switch (_context34.prev = _context34.next) {
              case 0:
                _context34.next = 2;
                return this.getNetwork();

              case 2:
                _context34.next = 4;
                return resolveProperties({
                  filter: this._getFilter(filter)
                });

              case 4:
                params = _context34.sent;
                _context34.next = 7;
                return this.perform("getLogs", params);

              case 7:
                logs = _context34.sent;
                logs.forEach(function (log) {
                  if (log.removed == null) {
                    log.removed = false;
                  }
                });
                return _context34.abrupt("return", formatter_Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs));

              case 10:
              case "end":
                return _context34.stop();
            }
          }
        }, _callee34, this);
      }));
    }
  }, {
    key: "getEtherPrice",
    value: function getEtherPrice() {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee35() {
        return regenerator_default.a.wrap(function _callee35$(_context35) {
          while (1) {
            switch (_context35.prev = _context35.next) {
              case 0:
                _context35.next = 2;
                return this.getNetwork();

              case 2:
                return _context35.abrupt("return", this.perform("getEtherPrice", {}));

              case 3:
              case "end":
                return _context35.stop();
            }
          }
        }, _callee35, this);
      }));
    }
  }, {
    key: "_getBlockTag",
    value: function _getBlockTag(blockTag) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee36() {
        var blockNumber;
        return regenerator_default.a.wrap(function _callee36$(_context36) {
          while (1) {
            switch (_context36.prev = _context36.next) {
              case 0:
                _context36.next = 2;
                return blockTag;

              case 2:
                blockTag = _context36.sent;

                if (!(typeof blockTag === "number" && blockTag < 0)) {
                  _context36.next = 11;
                  break;
                }

                if (blockTag % 1) {
                  base_provider_logger.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                }

                _context36.next = 7;
                return this._getInternalBlockNumber(100 + 2 * this.pollingInterval);

              case 7:
                blockNumber = _context36.sent;
                blockNumber += blockTag;

                if (blockNumber < 0) {
                  blockNumber = 0;
                }

                return _context36.abrupt("return", this.formatter.blockTag(blockNumber));

              case 11:
                return _context36.abrupt("return", this.formatter.blockTag(blockTag));

              case 12:
              case "end":
                return _context36.stop();
            }
          }
        }, _callee36, this);
      }));
    }
  }, {
    key: "getResolver",
    value: function getResolver(name) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee37() {
        var address;
        return regenerator_default.a.wrap(function _callee37$(_context37) {
          while (1) {
            switch (_context37.prev = _context37.next) {
              case 0:
                _context37.prev = 0;
                _context37.next = 3;
                return this._getResolver(name);

              case 3:
                address = _context37.sent;

                if (!(address == null)) {
                  _context37.next = 6;
                  break;
                }

                return _context37.abrupt("return", null);

              case 6:
                return _context37.abrupt("return", new base_provider_Resolver(this, address, name));

              case 9:
                _context37.prev = 9;
                _context37.t0 = _context37["catch"](0);

                if (!(_context37.t0.code === logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION)) {
                  _context37.next = 13;
                  break;
                }

                return _context37.abrupt("return", null);

              case 13:
                return _context37.abrupt("return", null);

              case 14:
              case "end":
                return _context37.stop();
            }
          }
        }, _callee37, this, [[0, 9]]);
      }));
    }
  }, {
    key: "_getResolver",
    value: function _getResolver(name) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee38() {
        var network, transaction;
        return regenerator_default.a.wrap(function _callee38$(_context38) {
          while (1) {
            switch (_context38.prev = _context38.next) {
              case 0:
                _context38.next = 2;
                return this.getNetwork();

              case 2:
                network = _context38.sent;

                // No ENS...
                if (!network.ensAddress) {
                  base_provider_logger.throwError("network does not support ENS", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                    operation: "ENS",
                    network: network.name
                  });
                } // keccak256("resolver(bytes32)")


                transaction = {
                  to: network.ensAddress,
                  data: "0x0178b8bf" + namehash(name).substring(2)
                };
                _context38.prev = 5;
                _context38.t0 = this.formatter;
                _context38.next = 9;
                return this.call(transaction);

              case 9:
                _context38.t1 = _context38.sent;
                return _context38.abrupt("return", _context38.t0.callAddress.call(_context38.t0, _context38.t1));

              case 13:
                _context38.prev = 13;
                _context38.t2 = _context38["catch"](5);

                if (!(_context38.t2.code === logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION)) {
                  _context38.next = 17;
                  break;
                }

                return _context38.abrupt("return", null);

              case 17:
                throw _context38.t2;

              case 18:
              case "end":
                return _context38.stop();
            }
          }
        }, _callee38, this, [[5, 13]]);
      }));
    }
  }, {
    key: "resolveName",
    value: function resolveName(name) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee39() {
        var resolver;
        return regenerator_default.a.wrap(function _callee39$(_context39) {
          while (1) {
            switch (_context39.prev = _context39.next) {
              case 0:
                _context39.next = 2;
                return name;

              case 2:
                name = _context39.sent;
                _context39.prev = 3;
                return _context39.abrupt("return", Promise.resolve(this.formatter.address(name)));

              case 7:
                _context39.prev = 7;
                _context39.t0 = _context39["catch"](3);

                if (!Object(lib_esm["k" /* isHexString */])(name)) {
                  _context39.next = 11;
                  break;
                }

                throw _context39.t0;

              case 11:
                if (typeof name !== "string") {
                  base_provider_logger.throwArgumentError("invalid ENS name", "name", name);
                } // Get the addr from the resovler


                _context39.next = 14;
                return this.getResolver(name);

              case 14:
                resolver = _context39.sent;

                if (resolver) {
                  _context39.next = 17;
                  break;
                }

                return _context39.abrupt("return", null);

              case 17:
                _context39.next = 19;
                return resolver.getAddress();

              case 19:
                return _context39.abrupt("return", _context39.sent);

              case 20:
              case "end":
                return _context39.stop();
            }
          }
        }, _callee39, this, [[3, 7]]);
      }));
    }
  }, {
    key: "lookupAddress",
    value: function lookupAddress(address) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee40() {
        var reverseName, resolverAddress, bytes, length, name, addr;
        return regenerator_default.a.wrap(function _callee40$(_context40) {
          while (1) {
            switch (_context40.prev = _context40.next) {
              case 0:
                _context40.next = 2;
                return address;

              case 2:
                address = _context40.sent;
                address = this.formatter.address(address);
                reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
                _context40.next = 7;
                return this._getResolver(reverseName);

              case 7:
                resolverAddress = _context40.sent;

                if (resolverAddress) {
                  _context40.next = 10;
                  break;
                }

                return _context40.abrupt("return", null);

              case 10:
                _context40.t0 = lib_esm["a" /* arrayify */];
                _context40.next = 13;
                return this.call({
                  to: resolverAddress,
                  data: "0x691f3431" + namehash(reverseName).substring(2)
                });

              case 13:
                _context40.t1 = _context40.sent;
                bytes = (0, _context40.t0)(_context40.t1);

                if (!(bytes.length < 32 || !bignumber_BigNumber.from(bytes.slice(0, 32)).eq(32))) {
                  _context40.next = 17;
                  break;
                }

                return _context40.abrupt("return", null);

              case 17:
                bytes = bytes.slice(32); // Not a length-prefixed string

                if (!(bytes.length < 32)) {
                  _context40.next = 20;
                  break;
                }

                return _context40.abrupt("return", null);

              case 20:
                // Get the length of the string (from the length-prefix)
                length = bignumber_BigNumber.from(bytes.slice(0, 32)).toNumber();
                bytes = bytes.slice(32); // Length longer than available data

                if (!(length > bytes.length)) {
                  _context40.next = 24;
                  break;
                }

                return _context40.abrupt("return", null);

              case 24:
                name = toUtf8String(bytes.slice(0, length)); // Make sure the reverse record matches the foward record

                _context40.next = 27;
                return this.resolveName(name);

              case 27:
                addr = _context40.sent;

                if (!(addr != address)) {
                  _context40.next = 30;
                  break;
                }

                return _context40.abrupt("return", null);

              case 30:
                return _context40.abrupt("return", name);

              case 31:
              case "end":
                return _context40.stop();
            }
          }
        }, _callee40, this);
      }));
    }
  }, {
    key: "getAvatar",
    value: function getAvatar(nameOrAddress) {
      return base_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee41() {
        var resolver, address, reverseName, resolverAddress, avatar;
        return regenerator_default.a.wrap(function _callee41$(_context41) {
          while (1) {
            switch (_context41.prev = _context41.next) {
              case 0:
                resolver = null;

                if (!Object(lib_esm["k" /* isHexString */])(nameOrAddress)) {
                  _context41.next = 12;
                  break;
                }

                // Address; reverse lookup
                address = this.formatter.address(nameOrAddress);
                reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
                _context41.next = 6;
                return this._getResolver(reverseName);

              case 6:
                resolverAddress = _context41.sent;

                if (resolverAddress) {
                  _context41.next = 9;
                  break;
                }

                return _context41.abrupt("return", null);

              case 9:
                resolver = new base_provider_Resolver(this, resolverAddress, "_", address);
                _context41.next = 15;
                break;

              case 12:
                _context41.next = 14;
                return this.getResolver(nameOrAddress);

              case 14:
                resolver = _context41.sent;

              case 15:
                _context41.next = 17;
                return resolver.getAvatar();

              case 17:
                avatar = _context41.sent;

                if (!(avatar == null)) {
                  _context41.next = 20;
                  break;
                }

                return _context41.abrupt("return", null);

              case 20:
                return _context41.abrupt("return", avatar.url);

              case 21:
              case "end":
                return _context41.stop();
            }
          }
        }, _callee41, this);
      }));
    }
  }, {
    key: "perform",
    value: function perform(method, params) {
      return base_provider_logger.throwError(method + " not implemented", logger_lib_esm["a" /* Logger */].errors.NOT_IMPLEMENTED, {
        operation: method
      });
    }
  }, {
    key: "_startEvent",
    value: function _startEvent(event) {
      this.polling = this._events.filter(function (e) {
        return e.pollable();
      }).length > 0;
    }
  }, {
    key: "_stopEvent",
    value: function _stopEvent(event) {
      this.polling = this._events.filter(function (e) {
        return e.pollable();
      }).length > 0;
    }
  }, {
    key: "_addEventListener",
    value: function _addEventListener(eventName, listener, once) {
      var event = new base_provider_Event(getEventTag(eventName), listener, once);

      this._events.push(event);

      this._startEvent(event);

      return this;
    }
  }, {
    key: "on",
    value: function on(eventName, listener) {
      return this._addEventListener(eventName, listener, false);
    }
  }, {
    key: "once",
    value: function once(eventName, listener) {
      return this._addEventListener(eventName, listener, true);
    }
  }, {
    key: "emit",
    value: function emit(eventName) {
      var _this18 = this;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var result = false;
      var stopped = [];
      var eventTag = getEventTag(eventName);
      this._events = this._events.filter(function (event) {
        if (event.tag !== eventTag) {
          return true;
        }

        setTimeout(function () {
          event.listener.apply(_this18, args);
        }, 0);
        result = true;

        if (event.once) {
          stopped.push(event);
          return false;
        }

        return true;
      });
      stopped.forEach(function (event) {
        _this18._stopEvent(event);
      });
      return result;
    }
  }, {
    key: "listenerCount",
    value: function listenerCount(eventName) {
      if (!eventName) {
        return this._events.length;
      }

      var eventTag = getEventTag(eventName);
      return this._events.filter(function (event) {
        return event.tag === eventTag;
      }).length;
    }
  }, {
    key: "listeners",
    value: function listeners(eventName) {
      if (eventName == null) {
        return this._events.map(function (event) {
          return event.listener;
        });
      }

      var eventTag = getEventTag(eventName);
      return this._events.filter(function (event) {
        return event.tag === eventTag;
      }).map(function (event) {
        return event.listener;
      });
    }
  }, {
    key: "off",
    value: function off(eventName, listener) {
      var _this19 = this;

      if (listener == null) {
        return this.removeAllListeners(eventName);
      }

      var stopped = [];
      var found = false;
      var eventTag = getEventTag(eventName);
      this._events = this._events.filter(function (event) {
        if (event.tag !== eventTag || event.listener != listener) {
          return true;
        }

        if (found) {
          return true;
        }

        found = true;
        stopped.push(event);
        return false;
      });
      stopped.forEach(function (event) {
        _this19._stopEvent(event);
      });
      return this;
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(eventName) {
      var _this20 = this;

      var stopped = [];

      if (eventName == null) {
        stopped = this._events;
        this._events = [];
      } else {
        var eventTag = getEventTag(eventName);
        this._events = this._events.filter(function (event) {
          if (event.tag !== eventTag) {
            return true;
          }

          stopped.push(event);
          return false;
        });
      }

      stopped.forEach(function (event) {
        _this20._stopEvent(event);
      });
      return this;
    }
  }], [{
    key: "getFormatter",
    value: function getFormatter() {
      if (defaultFormatter == null) {
        defaultFormatter = new formatter_Formatter();
      }

      return defaultFormatter;
    } // @TODO: Remove this and just use getNetwork

  }, {
    key: "getNetwork",
    value: function getNetwork(network) {
      return lib_esm_getNetwork(network == null ? "homestead" : network);
    }
  }]);

  return BaseProvider;
}(lib_esm_Provider);
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js











var json_rpc_provider_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};











var json_rpc_provider_logger = new logger_lib_esm["a" /* Logger */](_version_version);

var errorGas = ["call", "estimateGas"];

function checkError(method, error, params) {
  // Undo the "convenience" some nodes are attempting to prevent backwards
  // incompatibility; maybe for v6 consider forwarding reverts as errors
  if (method === "call" && error.code === logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR) {
    var e = error.error;

    if (e && e.message.match("reverted") && Object(lib_esm["k" /* isHexString */])(e.data)) {
      return e.data;
    }

    json_rpc_provider_logger.throwError("missing revert data in call exception", logger_lib_esm["a" /* Logger */].errors.CALL_EXCEPTION, {
      error: error,
      data: "0x"
    });
  }

  var message = error.message;

  if (error.code === logger_lib_esm["a" /* Logger */].errors.SERVER_ERROR && error.error && typeof error.error.message === "string") {
    message = error.error.message;
  } else if (typeof error.body === "string") {
    message = error.body;
  } else if (typeof error.responseText === "string") {
    message = error.responseText;
  }

  message = (message || "").toLowerCase();
  var transaction = params.transaction || params.signedTransaction; // "insufficient funds for gas * price + value + cost(data)"

  if (message.match(/insufficient funds|base fee exceeds gas limit/)) {
    json_rpc_provider_logger.throwError("insufficient funds for intrinsic transaction cost", logger_lib_esm["a" /* Logger */].errors.INSUFFICIENT_FUNDS, {
      error: error,
      method: method,
      transaction: transaction
    });
  } // "nonce too low"


  if (message.match(/nonce too low/)) {
    json_rpc_provider_logger.throwError("nonce has already been used", logger_lib_esm["a" /* Logger */].errors.NONCE_EXPIRED, {
      error: error,
      method: method,
      transaction: transaction
    });
  } // "replacement transaction underpriced"


  if (message.match(/replacement transaction underpriced/)) {
    json_rpc_provider_logger.throwError("replacement fee too low", logger_lib_esm["a" /* Logger */].errors.REPLACEMENT_UNDERPRICED, {
      error: error,
      method: method,
      transaction: transaction
    });
  } // "replacement transaction underpriced"


  if (message.match(/only replay-protected/)) {
    json_rpc_provider_logger.throwError("legacy pre-eip-155 transactions not supported", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
      error: error,
      method: method,
      transaction: transaction
    });
  }

  if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {
    json_rpc_provider_logger.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", logger_lib_esm["a" /* Logger */].errors.UNPREDICTABLE_GAS_LIMIT, {
      error: error,
      method: method,
      transaction: transaction
    });
  }

  throw error;
}

function json_rpc_provider_timer(timeout) {
  return new Promise(function (resolve) {
    setTimeout(resolve, timeout);
  });
}

function getResult(payload) {
  if (payload.error) {
    // @TODO: not any
    var error = new Error(payload.error.message);
    error.code = payload.error.code;
    error.data = payload.error.data;
    throw error;
  }

  return payload.result;
}

function getLowerCase(value) {
  if (value) {
    return value.toLowerCase();
  }

  return value;
}

var json_rpc_provider_constructorGuard = {};
var json_rpc_provider_JsonRpcSigner = /*#__PURE__*/function (_Signer) {
  Object(inherits["a" /* default */])(JsonRpcSigner, _Signer);

  var _super = Object(createSuper["a" /* default */])(JsonRpcSigner);

  function JsonRpcSigner(constructorGuard, provider, addressOrIndex) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, JsonRpcSigner);

    json_rpc_provider_logger.checkNew(this instanceof JsonRpcSigner ? this.constructor : void 0, JsonRpcSigner);
    _this = _super.call(this);

    if (constructorGuard !== json_rpc_provider_constructorGuard) {
      throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
    }

    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "provider", provider);

    if (addressOrIndex == null) {
      addressOrIndex = 0;
    }

    if (typeof addressOrIndex === "string") {
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_address", _this.provider.formatter.address(addressOrIndex));
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_index", null);
    } else if (typeof addressOrIndex === "number") {
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_index", addressOrIndex);
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_address", null);
    } else {
      json_rpc_provider_logger.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
    }

    return _this;
  }

  Object(createClass["a" /* default */])(JsonRpcSigner, [{
    key: "connect",
    value: function connect(provider) {
      return json_rpc_provider_logger.throwError("cannot alter JSON-RPC Signer connection", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
        operation: "connect"
      });
    }
  }, {
    key: "connectUnchecked",
    value: function connectUnchecked() {
      return new json_rpc_provider_UncheckedJsonRpcSigner(json_rpc_provider_constructorGuard, this.provider, this._address || this._index);
    }
  }, {
    key: "getAddress",
    value: function getAddress() {
      var _this2 = this;

      if (this._address) {
        return Promise.resolve(this._address);
      }

      return this.provider.send("eth_accounts", []).then(function (accounts) {
        if (accounts.length <= _this2._index) {
          json_rpc_provider_logger.throwError("unknown account #" + _this2._index, logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
            operation: "getAddress"
          });
        }

        return _this2.provider.formatter.address(accounts[_this2._index]);
      });
    }
  }, {
    key: "sendUncheckedTransaction",
    value: function sendUncheckedTransaction(transaction) {
      var _this3 = this;

      transaction = shallowCopy(transaction);
      var fromAddress = this.getAddress().then(function (address) {
        if (address) {
          address = address.toLowerCase();
        }

        return address;
      }); // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user
      // wishes to use this, it is easy to specify explicitly, otherwise
      // we look it up for them.

      if (transaction.gasLimit == null) {
        var estimate = shallowCopy(transaction);
        estimate.from = fromAddress;
        transaction.gasLimit = this.provider.estimateGas(estimate);
      }

      if (transaction.to != null) {
        transaction.to = Promise.resolve(transaction.to).then(function (to) {
          return json_rpc_provider_awaiter(_this3, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
            var address;
            return regenerator_default.a.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (!(to == null)) {
                      _context.next = 2;
                      break;
                    }

                    return _context.abrupt("return", null);

                  case 2:
                    _context.next = 4;
                    return this.provider.resolveName(to);

                  case 4:
                    address = _context.sent;

                    if (address == null) {
                      json_rpc_provider_logger.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                    }

                    return _context.abrupt("return", address);

                  case 7:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
        });
      }

      return resolveProperties({
        tx: resolveProperties(transaction),
        sender: fromAddress
      }).then(function (_ref) {
        var tx = _ref.tx,
            sender = _ref.sender;

        if (tx.from != null) {
          if (tx.from.toLowerCase() !== sender) {
            json_rpc_provider_logger.throwArgumentError("from address mismatch", "transaction", transaction);
          }
        } else {
          tx.from = sender;
        }

        var hexTx = _this3.provider.constructor.hexlifyTransaction(tx, {
          from: true
        });

        return _this3.provider.send("eth_sendTransaction", [hexTx]).then(function (hash) {
          return hash;
        }, function (error) {
          return checkError("sendTransaction", error, hexTx);
        });
      });
    }
  }, {
    key: "signTransaction",
    value: function signTransaction(transaction) {
      return json_rpc_provider_logger.throwError("signing transactions is unsupported", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
        operation: "signTransaction"
      });
    }
  }, {
    key: "sendTransaction",
    value: function sendTransaction(transaction) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee3() {
        var _this4 = this;

        var blockNumber, hash;
        return regenerator_default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);

              case 2:
                blockNumber = _context3.sent;
                _context3.next = 5;
                return this.sendUncheckedTransaction(transaction);

              case 5:
                hash = _context3.sent;
                _context3.prev = 6;
                _context3.next = 9;
                return lib_esm_poll(function () {
                  return json_rpc_provider_awaiter(_this4, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
                    var tx;
                    return regenerator_default.a.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.next = 2;
                            return this.provider.getTransaction(hash);

                          case 2:
                            tx = _context2.sent;

                            if (!(tx === null)) {
                              _context2.next = 5;
                              break;
                            }

                            return _context2.abrupt("return", undefined);

                          case 5:
                            return _context2.abrupt("return", this.provider._wrapTransaction(tx, hash, blockNumber));

                          case 6:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2, this);
                  }));
                }, {
                  oncePoll: this.provider
                });

              case 9:
                return _context3.abrupt("return", _context3.sent);

              case 12:
                _context3.prev = 12;
                _context3.t0 = _context3["catch"](6);
                _context3.t0.transactionHash = hash;
                throw _context3.t0;

              case 16:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[6, 12]]);
      }));
    }
  }, {
    key: "signMessage",
    value: function signMessage(message) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee4() {
        var data, address;
        return regenerator_default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                data = typeof message === "string" ? toUtf8Bytes(message) : message;
                _context4.next = 3;
                return this.getAddress();

              case 3:
                address = _context4.sent;
                _context4.next = 6;
                return this.provider.send("personal_sign", [Object(lib_esm["h" /* hexlify */])(data), address.toLowerCase()]);

              case 6:
                return _context4.abrupt("return", _context4.sent);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
    }
  }, {
    key: "_legacySignMessage",
    value: function _legacySignMessage(message) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee5() {
        var data, address;
        return regenerator_default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                data = typeof message === "string" ? toUtf8Bytes(message) : message;
                _context5.next = 3;
                return this.getAddress();

              case 3:
                address = _context5.sent;
                _context5.next = 6;
                return this.provider.send("eth_sign", [address.toLowerCase(), Object(lib_esm["h" /* hexlify */])(data)]);

              case 6:
                return _context5.abrupt("return", _context5.sent);

              case 7:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
    }
  }, {
    key: "_signTypedData",
    value: function _signTypedData(domain, types, value) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee6() {
        var _this5 = this;

        var populated, address;
        return regenerator_default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return typed_data_TypedDataEncoder.resolveNames(domain, types, value, function (name) {
                  return _this5.provider.resolveName(name);
                });

              case 2:
                populated = _context6.sent;
                _context6.next = 5;
                return this.getAddress();

              case 5:
                address = _context6.sent;
                _context6.next = 8;
                return this.provider.send("eth_signTypedData_v4", [address.toLowerCase(), JSON.stringify(typed_data_TypedDataEncoder.getPayload(populated.domain, types, populated.value))]);

              case 8:
                return _context6.abrupt("return", _context6.sent);

              case 9:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
    }
  }, {
    key: "unlock",
    value: function unlock(password) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee7() {
        var provider, address;
        return regenerator_default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                provider = this.provider;
                _context7.next = 3;
                return this.getAddress();

              case 3:
                address = _context7.sent;
                return _context7.abrupt("return", provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]));

              case 5:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
    }
  }]);

  return JsonRpcSigner;
}(lib_esm_Signer);

var json_rpc_provider_UncheckedJsonRpcSigner = /*#__PURE__*/function (_JsonRpcSigner) {
  Object(inherits["a" /* default */])(UncheckedJsonRpcSigner, _JsonRpcSigner);

  var _super2 = Object(createSuper["a" /* default */])(UncheckedJsonRpcSigner);

  function UncheckedJsonRpcSigner() {
    Object(classCallCheck["a" /* default */])(this, UncheckedJsonRpcSigner);

    return _super2.apply(this, arguments);
  }

  Object(createClass["a" /* default */])(UncheckedJsonRpcSigner, [{
    key: "sendTransaction",
    value: function sendTransaction(transaction) {
      var _this6 = this;

      return this.sendUncheckedTransaction(transaction).then(function (hash) {
        return {
          hash: hash,
          nonce: null,
          gasLimit: null,
          gasPrice: null,
          data: null,
          value: null,
          chainId: null,
          confirmations: 0,
          from: null,
          wait: function wait(confirmations) {
            return _this6.provider.waitForTransaction(hash, confirmations);
          }
        };
      });
    }
  }]);

  return UncheckedJsonRpcSigner;
}(json_rpc_provider_JsonRpcSigner);

var json_rpc_provider_allowedTransactionKeys = {
  chainId: true,
  data: true,
  gasLimit: true,
  gasPrice: true,
  nonce: true,
  to: true,
  value: true,
  type: true,
  accessList: true,
  maxFeePerGas: true,
  maxPriorityFeePerGas: true
};
var json_rpc_provider_JsonRpcProvider = /*#__PURE__*/function (_BaseProvider) {
  Object(inherits["a" /* default */])(JsonRpcProvider, _BaseProvider);

  var _super3 = Object(createSuper["a" /* default */])(JsonRpcProvider);

  function JsonRpcProvider(url, network) {
    var _this7;

    Object(classCallCheck["a" /* default */])(this, JsonRpcProvider);

    json_rpc_provider_logger.checkNew(this instanceof JsonRpcProvider ? this.constructor : void 0, JsonRpcProvider);
    var networkOrReady = network; // The network is unknown, query the JSON-RPC for it

    if (networkOrReady == null) {
      networkOrReady = new Promise(function (resolve, reject) {
        setTimeout(function () {
          _this7.detectNetwork().then(function (network) {
            resolve(network);
          }, function (error) {
            reject(error);
          });
        }, 0);
      });
    }

    _this7 = _super3.call(this, networkOrReady); // Default URL

    if (!url) {
      url = getStatic(_this7.constructor, "defaultUrl")();
    }

    if (typeof url === "string") {
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this7), "connection", Object.freeze({
        url: url
      }));
    } else {
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this7), "connection", Object.freeze(shallowCopy(url)));
    }

    _this7._nextId = 42;
    return _this7;
  }

  Object(createClass["a" /* default */])(JsonRpcProvider, [{
    key: "_cache",
    get: function get() {
      if (this._eventLoopCache == null) {
        this._eventLoopCache = {};
      }

      return this._eventLoopCache;
    }
  }, {
    key: "detectNetwork",
    value: function detectNetwork() {
      var _this8 = this;

      if (!this._cache["detectNetwork"]) {
        this._cache["detectNetwork"] = this._uncachedDetectNetwork(); // Clear this cache at the beginning of the next event loop

        setTimeout(function () {
          _this8._cache["detectNetwork"] = null;
        }, 0);
      }

      return this._cache["detectNetwork"];
    }
  }, {
    key: "_uncachedDetectNetwork",
    value: function _uncachedDetectNetwork() {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee8() {
        var chainId, getNetwork;
        return regenerator_default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                _context8.next = 2;
                return json_rpc_provider_timer(0);

              case 2:
                chainId = null;
                _context8.prev = 3;
                _context8.next = 6;
                return this.send("eth_chainId", []);

              case 6:
                chainId = _context8.sent;
                _context8.next = 19;
                break;

              case 9:
                _context8.prev = 9;
                _context8.t0 = _context8["catch"](3);
                _context8.prev = 11;
                _context8.next = 14;
                return this.send("net_version", []);

              case 14:
                chainId = _context8.sent;
                _context8.next = 19;
                break;

              case 17:
                _context8.prev = 17;
                _context8.t1 = _context8["catch"](11);

              case 19:
                if (!(chainId != null)) {
                  _context8.next = 28;
                  break;
                }

                getNetwork = getStatic(this.constructor, "getNetwork");
                _context8.prev = 21;
                return _context8.abrupt("return", getNetwork(bignumber_BigNumber.from(chainId).toNumber()));

              case 25:
                _context8.prev = 25;
                _context8.t2 = _context8["catch"](21);
                return _context8.abrupt("return", json_rpc_provider_logger.throwError("could not detect network", logger_lib_esm["a" /* Logger */].errors.NETWORK_ERROR, {
                  chainId: chainId,
                  event: "invalidNetwork",
                  serverError: _context8.t2
                }));

              case 28:
                return _context8.abrupt("return", json_rpc_provider_logger.throwError("could not detect network", logger_lib_esm["a" /* Logger */].errors.NETWORK_ERROR, {
                  event: "noNetwork"
                }));

              case 29:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[3, 9], [11, 17], [21, 25]]);
      }));
    }
  }, {
    key: "getSigner",
    value: function getSigner(addressOrIndex) {
      return new json_rpc_provider_JsonRpcSigner(json_rpc_provider_constructorGuard, this, addressOrIndex);
    }
  }, {
    key: "getUncheckedSigner",
    value: function getUncheckedSigner(addressOrIndex) {
      return this.getSigner(addressOrIndex).connectUnchecked();
    }
  }, {
    key: "listAccounts",
    value: function listAccounts() {
      var _this9 = this;

      return this.send("eth_accounts", []).then(function (accounts) {
        return accounts.map(function (a) {
          return _this9.formatter.address(a);
        });
      });
    }
  }, {
    key: "send",
    value: function send(method, params) {
      var _this10 = this;

      var request = {
        method: method,
        params: params,
        id: this._nextId++,
        jsonrpc: "2.0"
      };
      this.emit("debug", {
        action: "request",
        request: deepCopy(request),
        provider: this
      }); // We can expand this in the future to any call, but for now these
      // are the biggest wins and do not require any serializing parameters.

      var cache = ["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0;

      if (cache && this._cache[method]) {
        return this._cache[method];
      }

      var result = fetchJson(this.connection, JSON.stringify(request), getResult).then(function (result) {
        _this10.emit("debug", {
          action: "response",
          request: request,
          response: result,
          provider: _this10
        });

        return result;
      }, function (error) {
        _this10.emit("debug", {
          action: "response",
          error: error,
          request: request,
          provider: _this10
        });

        throw error;
      }); // Cache the fetch, but clear it on the next event loop

      if (cache) {
        this._cache[method] = result;
        setTimeout(function () {
          _this10._cache[method] = null;
        }, 0);
      }

      return result;
    }
  }, {
    key: "prepareRequest",
    value: function prepareRequest(method, params) {
      switch (method) {
        case "getBlockNumber":
          return ["eth_blockNumber", []];

        case "getGasPrice":
          return ["eth_gasPrice", []];

        case "getBalance":
          return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];

        case "getTransactionCount":
          return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];

        case "getCode":
          return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];

        case "getStorageAt":
          return ["eth_getStorageAt", [getLowerCase(params.address), params.position, params.blockTag]];

        case "sendTransaction":
          return ["eth_sendRawTransaction", [params.signedTransaction]];

        case "getBlock":
          if (params.blockTag) {
            return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
          } else if (params.blockHash) {
            return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
          }

          return null;

        case "getTransaction":
          return ["eth_getTransactionByHash", [params.transactionHash]];

        case "getTransactionReceipt":
          return ["eth_getTransactionReceipt", [params.transactionHash]];

        case "call":
          {
            var hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
            return ["eth_call", [hexlifyTransaction(params.transaction, {
              from: true
            }), params.blockTag]];
          }

        case "estimateGas":
          {
            var _hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");

            return ["eth_estimateGas", [_hexlifyTransaction(params.transaction, {
              from: true
            })]];
          }

        case "getLogs":
          if (params.filter && params.filter.address != null) {
            params.filter.address = getLowerCase(params.filter.address);
          }

          return ["eth_getLogs", [params.filter]];

        default:
          break;
      }

      return null;
    }
  }, {
    key: "perform",
    value: function perform(method, params) {
      return json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee9() {
        var tx, feeData, args;
        return regenerator_default.a.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (!(method === "call" || method === "estimateGas")) {
                  _context9.next = 8;
                  break;
                }

                tx = params.transaction;

                if (!(tx && tx.type != null && bignumber_BigNumber.from(tx.type).isZero())) {
                  _context9.next = 8;
                  break;
                }

                if (!(tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null)) {
                  _context9.next = 8;
                  break;
                }

                _context9.next = 6;
                return this.getFeeData();

              case 6:
                feeData = _context9.sent;

                if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                  // Network doesn't know about EIP-1559 (and hence type)
                  params = shallowCopy(params);
                  params.transaction = shallowCopy(tx);
                  delete params.transaction.type;
                }

              case 8:
                args = this.prepareRequest(method, params);

                if (args == null) {
                  json_rpc_provider_logger.throwError(method + " not implemented", logger_lib_esm["a" /* Logger */].errors.NOT_IMPLEMENTED, {
                    operation: method
                  });
                }

                _context9.prev = 10;
                _context9.next = 13;
                return this.send(args[0], args[1]);

              case 13:
                return _context9.abrupt("return", _context9.sent);

              case 16:
                _context9.prev = 16;
                _context9.t0 = _context9["catch"](10);
                return _context9.abrupt("return", checkError(method, _context9.t0, params));

              case 19:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9, this, [[10, 16]]);
      }));
    }
  }, {
    key: "_startEvent",
    value: function _startEvent(event) {
      if (event.tag === "pending") {
        this._startPending();
      }

      get_get(Object(getPrototypeOf["a" /* default */])(JsonRpcProvider.prototype), "_startEvent", this).call(this, event);
    }
  }, {
    key: "_startPending",
    value: function _startPending() {
      if (this._pendingFilter != null) {
        return;
      }

      var self = this;
      var pendingFilter = this.send("eth_newPendingTransactionFilter", []);
      this._pendingFilter = pendingFilter;
      pendingFilter.then(function (filterId) {
        function poll() {
          self.send("eth_getFilterChanges", [filterId]).then(function (hashes) {
            if (self._pendingFilter != pendingFilter) {
              return null;
            }

            var seq = Promise.resolve();
            hashes.forEach(function (hash) {
              // @TODO: This should be garbage collected at some point... How? When?
              self._emitted["t:" + hash.toLowerCase()] = "pending";
              seq = seq.then(function () {
                return self.getTransaction(hash).then(function (tx) {
                  self.emit("pending", tx);
                  return null;
                });
              });
            });
            return seq.then(function () {
              return json_rpc_provider_timer(1000);
            });
          }).then(function () {
            if (self._pendingFilter != pendingFilter) {
              self.send("eth_uninstallFilter", [filterId]);
              return;
            }

            setTimeout(function () {
              poll();
            }, 0);
            return null;
          }).catch(function (error) {});
        }

        poll();
        return filterId;
      }).catch(function (error) {});
    }
  }, {
    key: "_stopEvent",
    value: function _stopEvent(event) {
      if (event.tag === "pending" && this.listenerCount("pending") === 0) {
        this._pendingFilter = null;
      }

      get_get(Object(getPrototypeOf["a" /* default */])(JsonRpcProvider.prototype), "_stopEvent", this).call(this, event);
    } // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.

  }], [{
    key: "defaultUrl",
    value: function defaultUrl() {
      return "http:/\/localhost:8545";
    }
  }, {
    key: "hexlifyTransaction",
    value: function hexlifyTransaction(transaction, allowExtra) {
      // Check only allowed properties are given
      var allowed = shallowCopy(json_rpc_provider_allowedTransactionKeys);

      if (allowExtra) {
        for (var key in allowExtra) {
          if (allowExtra[key]) {
            allowed[key] = true;
          }
        }
      }

      checkProperties(transaction, allowed);
      var result = {}; // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.

      ["gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function (key) {
        if (transaction[key] == null) {
          return;
        }

        var value = Object(lib_esm["f" /* hexValue */])(transaction[key]);

        if (key === "gasLimit") {
          key = "gas";
        }

        result[key] = value;
      });
      ["from", "to", "data"].forEach(function (key) {
        if (transaction[key] == null) {
          return;
        }

        result[key] = Object(lib_esm["h" /* hexlify */])(transaction[key]);
      });

      if (transaction.accessList) {
        result["accessList"] = accessListify(transaction.accessList);
      }

      return result;
    }
  }]);

  return JsonRpcProvider;
}(base_provider_BaseProvider);
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/web3-provider.js










var web3_provider_logger = new logger_lib_esm["a" /* Logger */](_version_version);

var _nextId = 1;

function buildWeb3LegacyFetcher(provider, sendFunc) {
  var fetcher = "Web3LegacyFetcher";
  return function (method, params) {
    var _this = this;

    var request = {
      method: method,
      params: params,
      id: _nextId++,
      jsonrpc: "2.0"
    };
    return new Promise(function (resolve, reject) {
      _this.emit("debug", {
        action: "request",
        fetcher: fetcher,
        request: deepCopy(request),
        provider: _this
      });

      sendFunc(request, function (error, response) {
        if (error) {
          _this.emit("debug", {
            action: "response",
            fetcher: fetcher,
            error: error,
            request: request,
            provider: _this
          });

          return reject(error);
        }

        _this.emit("debug", {
          action: "response",
          fetcher: fetcher,
          request: request,
          response: response,
          provider: _this
        });

        if (response.error) {
          var _error = new Error(response.error.message);

          _error.code = response.error.code;
          _error.data = response.error.data;
          return reject(_error);
        }

        resolve(response.result);
      });
    });
  };
}

function buildEip1193Fetcher(provider) {
  return function (method, params) {
    var _this2 = this;

    if (params == null) {
      params = [];
    }

    var request = {
      method: method,
      params: params
    };
    this.emit("debug", {
      action: "request",
      fetcher: "Eip1193Fetcher",
      request: deepCopy(request),
      provider: this
    });
    return provider.request(request).then(function (response) {
      _this2.emit("debug", {
        action: "response",
        fetcher: "Eip1193Fetcher",
        request: request,
        response: response,
        provider: _this2
      });

      return response;
    }, function (error) {
      _this2.emit("debug", {
        action: "response",
        fetcher: "Eip1193Fetcher",
        request: request,
        error: error,
        provider: _this2
      });

      throw error;
    });
  };
}

var web3_provider_Web3Provider = /*#__PURE__*/function (_JsonRpcProvider) {
  Object(inherits["a" /* default */])(Web3Provider, _JsonRpcProvider);

  var _super = Object(createSuper["a" /* default */])(Web3Provider);

  function Web3Provider(provider, network) {
    var _this3;

    Object(classCallCheck["a" /* default */])(this, Web3Provider);

    web3_provider_logger.checkNew(this instanceof Web3Provider ? this.constructor : void 0, Web3Provider);

    if (provider == null) {
      web3_provider_logger.throwArgumentError("missing provider", "provider", provider);
    }

    var path = null;
    var jsonRpcFetchFunc = null;
    var subprovider = null;

    if (typeof provider === "function") {
      path = "unknown:";
      jsonRpcFetchFunc = provider;
    } else {
      path = provider.host || provider.path || "";

      if (!path && provider.isMetaMask) {
        path = "metamask";
      }

      subprovider = provider;

      if (provider.request) {
        if (path === "") {
          path = "eip-1193:";
        }

        jsonRpcFetchFunc = buildEip1193Fetcher(provider);
      } else if (provider.sendAsync) {
        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
      } else if (provider.send) {
        jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
      } else {
        web3_provider_logger.throwArgumentError("unsupported provider", "provider", provider);
      }

      if (!path) {
        path = "unknown:";
      }
    }

    _this3 = _super.call(this, path, network);
    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this3), "jsonRpcFetchFunc", jsonRpcFetchFunc);
    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this3), "provider", subprovider);
    return _this3;
  }

  Object(createClass["a" /* default */])(Web3Provider, [{
    key: "send",
    value: function send(method, params) {
      return this.jsonRpcFetchFunc(method, params);
    }
  }]);

  return Web3Provider;
}(json_rpc_provider_JsonRpcProvider);
// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/message.js



var messagePrefix = "\x19Ethereum Signed Message:\n";
function hashMessage(message) {
  if (typeof message === "string") {
    message = toUtf8Bytes(message);
  }

  return keccak256(Object(lib_esm["b" /* concat */])([toUtf8Bytes(messagePrefix), toUtf8Bytes(String(message.length)), message]));
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js




function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
  password = Object(lib_esm["a" /* arrayify */])(password);
  salt = Object(lib_esm["a" /* arrayify */])(salt);
  var hLen;
  var l = 1;
  var DK = new Uint8Array(keylen);
  var block1 = new Uint8Array(salt.length + 4);
  block1.set(salt); //salt.copy(block1, 0, 0, salt.length)

  var r;
  var T;

  for (var i = 1; i <= l; i++) {
    //block1.writeUInt32BE(i, salt.length)
    block1[salt.length] = i >> 24 & 0xff;
    block1[salt.length + 1] = i >> 16 & 0xff;
    block1[salt.length + 2] = i >> 8 & 0xff;
    block1[salt.length + 3] = i & 0xff; //let U = createHmac(password).update(block1).digest();

    var U = Object(lib_esm["a" /* arrayify */])(computeHmac(hashAlgorithm, password, block1));

    if (!hLen) {
      hLen = U.length;
      T = new Uint8Array(hLen);
      l = Math.ceil(keylen / hLen);
      r = keylen - (l - 1) * hLen;
    } //U.copy(T, 0, 0, hLen)


    T.set(U);

    for (var j = 1; j < iterations; j++) {
      //U = createHmac(password).update(U).digest();
      U = Object(lib_esm["a" /* arrayify */])(computeHmac(hashAlgorithm, password, U));

      for (var k = 0; k < hLen; k++) {
        T[k] ^= U[k];
      }
    }

    var destPos = (i - 1) * hLen;
    var len = i === l ? r : hLen; //T.copy(DK, destPos, 0, len)

    DK.set(Object(lib_esm["a" /* arrayify */])(T).slice(0, len), destPos);
  }

  return Object(lib_esm["h" /* hexlify */])(DK);
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/_version.js
var wordlists_lib_esm_version_version = "wordlists/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js
 // This gets overridden by rollup



var exportWordlist = false;




var wordlist_logger = new logger_lib_esm["a" /* Logger */](wordlists_lib_esm_version_version);
var wordlist_Wordlist = /*#__PURE__*/function () {
  function Wordlist(locale) {
    Object(classCallCheck["a" /* default */])(this, Wordlist);

    wordlist_logger.checkAbstract(this instanceof Wordlist ? this.constructor : void 0, Wordlist);
    defineReadOnly(this, "locale", locale);
  } // Subclasses may override this


  Object(createClass["a" /* default */])(Wordlist, [{
    key: "split",
    value: function split(mnemonic) {
      return mnemonic.toLowerCase().split(/ +/g);
    } // Subclasses may override this

  }, {
    key: "join",
    value: function join(words) {
      return words.join(" ");
    }
  }], [{
    key: "check",
    value: function check(wordlist) {
      var words = [];

      for (var i = 0; i < 2048; i++) {
        var word = wordlist.getWord(i);
        /* istanbul ignore if */

        if (i !== wordlist.getWordIndex(word)) {
          return "0x";
        }

        words.push(word);
      }

      return id_id(words.join("\n") + "\n");
    }
  }, {
    key: "register",
    value: function register(lang, name) {
      if (!name) {
        name = lang.locale;
      }
      /* istanbul ignore if */


      if (exportWordlist) {
        try {
          var anyGlobal = window;

          if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {
            if (!anyGlobal._ethers.wordlists[name]) {
              defineReadOnly(anyGlobal._ethers.wordlists, name, lang);
            }
          }
        } catch (error) {}
      }
    }
  }]);

  return Wordlist;
}();
// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js







var lang_en_words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
var lang_en_wordlist = null;

function loadWords(lang) {
  if (lang_en_wordlist != null) {
    return;
  }

  lang_en_wordlist = lang_en_words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "); // Verify the computed list matches the official list

  /* istanbul ignore if */

  if (wordlist_Wordlist.check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
    lang_en_wordlist = null;
    throw new Error("BIP39 Wordlist for en (English) FAILED");
  }
}

var lang_en_LangEn = /*#__PURE__*/function (_Wordlist) {
  Object(inherits["a" /* default */])(LangEn, _Wordlist);

  var _super = Object(createSuper["a" /* default */])(LangEn);

  function LangEn() {
    Object(classCallCheck["a" /* default */])(this, LangEn);

    return _super.call(this, "en");
  }

  Object(createClass["a" /* default */])(LangEn, [{
    key: "getWord",
    value: function getWord(index) {
      loadWords(this);
      return lang_en_wordlist[index];
    }
  }, {
    key: "getWordIndex",
    value: function getWordIndex(word) {
      loadWords(this);
      return lang_en_wordlist.indexOf(word);
    }
  }]);

  return LangEn;
}(wordlist_Wordlist);

var langEn = new lang_en_LangEn();
wordlist_Wordlist.register(langEn);

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js



var wordlists = {
  en: langEn
};
// CONCATENATED MODULE: ./node_modules/@ethersproject/hdnode/lib.esm/_version.js
var hdnode_lib_esm_version_version = "hdnode/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/hdnode/lib.esm/index.js
















var hdnode_lib_esm_logger = new logger_lib_esm["a" /* Logger */](hdnode_lib_esm_version_version);
var lib_esm_N = bignumber_BigNumber.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"); // "Bitcoin seed"

var MasterSecret = toUtf8Bytes("Bitcoin seed");
var HardenedBit = 0x80000000; // Returns a byte with the MSB bits set

function getUpperMask(bits) {
  return (1 << bits) - 1 << 8 - bits;
} // Returns a byte with the LSB bits set


function getLowerMask(bits) {
  return (1 << bits) - 1;
}

function bytes32(value) {
  return Object(lib_esm["g" /* hexZeroPad */])(Object(lib_esm["h" /* hexlify */])(value), 32);
}

function base58check(data) {
  return Base58.encode(Object(lib_esm["b" /* concat */])([data, Object(lib_esm["e" /* hexDataSlice */])(sha256(sha256(data)), 0, 4)]));
}

function getWordlist(wordlist) {
  if (wordlist == null) {
    return wordlists["en"];
  }

  if (typeof wordlist === "string") {
    var words = wordlists[wordlist];

    if (words == null) {
      hdnode_lib_esm_logger.throwArgumentError("unknown locale", "wordlist", wordlist);
    }

    return words;
  }

  return wordlist;
}

var lib_esm_constructorGuard = {};
var defaultPath = "m/44'/60'/0'/0/0";
;
var lib_esm_HDNode = /*#__PURE__*/function () {
  /**
   *  This constructor should not be called directly.
   *
   *  Please use:
   *   - fromMnemonic
   *   - fromSeed
   */
  function HDNode(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {
    Object(classCallCheck["a" /* default */])(this, HDNode);

    hdnode_lib_esm_logger.checkNew(this instanceof HDNode ? this.constructor : void 0, HDNode);
    /* istanbul ignore if */

    if (constructorGuard !== lib_esm_constructorGuard) {
      throw new Error("HDNode constructor cannot be called directly");
    }

    if (privateKey) {
      var signingKey = new lib_esm_SigningKey(privateKey);
      defineReadOnly(this, "privateKey", signingKey.privateKey);
      defineReadOnly(this, "publicKey", signingKey.compressedPublicKey);
    } else {
      defineReadOnly(this, "privateKey", null);
      defineReadOnly(this, "publicKey", Object(lib_esm["h" /* hexlify */])(publicKey));
    }

    defineReadOnly(this, "parentFingerprint", parentFingerprint);
    defineReadOnly(this, "fingerprint", Object(lib_esm["e" /* hexDataSlice */])(ripemd160(sha256(this.publicKey)), 0, 4));
    defineReadOnly(this, "address", computeAddress(this.publicKey));
    defineReadOnly(this, "chainCode", chainCode);
    defineReadOnly(this, "index", index);
    defineReadOnly(this, "depth", depth);

    if (mnemonicOrPath == null) {
      // From a source that does not preserve the path (e.g. extended keys)
      defineReadOnly(this, "mnemonic", null);
      defineReadOnly(this, "path", null);
    } else if (typeof mnemonicOrPath === "string") {
      // From a source that does not preserve the mnemonic (e.g. neutered)
      defineReadOnly(this, "mnemonic", null);
      defineReadOnly(this, "path", mnemonicOrPath);
    } else {
      // From a fully qualified source
      defineReadOnly(this, "mnemonic", mnemonicOrPath);
      defineReadOnly(this, "path", mnemonicOrPath.path);
    }
  }

  Object(createClass["a" /* default */])(HDNode, [{
    key: "extendedKey",
    get: function get() {
      // We only support the mainnet values for now, but if anyone needs
      // testnet values, let me know. I believe current sentiment is that
      // we should always use mainnet, and use BIP-44 to derive the network
      //   - Mainnet: public=0x0488B21E, private=0x0488ADE4
      //   - Testnet: public=0x043587CF, private=0x04358394
      if (this.depth >= 256) {
        throw new Error("Depth too large!");
      }

      return base58check(Object(lib_esm["b" /* concat */])([this.privateKey != null ? "0x0488ADE4" : "0x0488B21E", Object(lib_esm["h" /* hexlify */])(this.depth), this.parentFingerprint, Object(lib_esm["g" /* hexZeroPad */])(Object(lib_esm["h" /* hexlify */])(this.index), 4), this.chainCode, this.privateKey != null ? Object(lib_esm["b" /* concat */])(["0x00", this.privateKey]) : this.publicKey]));
    }
  }, {
    key: "neuter",
    value: function neuter() {
      return new HDNode(lib_esm_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
    }
  }, {
    key: "_derive",
    value: function _derive(index) {
      if (index > 0xffffffff) {
        throw new Error("invalid index - " + String(index));
      } // Base path


      var path = this.path;

      if (path) {
        path += "/" + (index & ~HardenedBit);
      }

      var data = new Uint8Array(37);

      if (index & HardenedBit) {
        if (!this.privateKey) {
          throw new Error("cannot derive child of neutered node");
        } // Data = 0x00 || ser_256(k_par)


        data.set(Object(lib_esm["a" /* arrayify */])(this.privateKey), 1); // Hardened path

        if (path) {
          path += "'";
        }
      } else {
        // Data = ser_p(point(k_par))
        data.set(Object(lib_esm["a" /* arrayify */])(this.publicKey));
      } // Data += ser_32(i)


      for (var i = 24; i >= 0; i -= 8) {
        data[33 + (i >> 3)] = index >> 24 - i & 0xff;
      }

      var I = Object(lib_esm["a" /* arrayify */])(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));
      var IL = I.slice(0, 32);
      var IR = I.slice(32); // The private key

      var ki = null; // The public key

      var Ki = null;

      if (this.privateKey) {
        ki = bytes32(bignumber_BigNumber.from(IL).add(this.privateKey).mod(lib_esm_N));
      } else {
        var ek = new lib_esm_SigningKey(Object(lib_esm["h" /* hexlify */])(IL));
        Ki = ek._addPoint(this.publicKey);
      }

      var mnemonicOrPath = path;
      var srcMnemonic = this.mnemonic;

      if (srcMnemonic) {
        mnemonicOrPath = Object.freeze({
          phrase: srcMnemonic.phrase,
          path: path,
          locale: srcMnemonic.locale || "en"
        });
      }

      return new HDNode(lib_esm_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);
    }
  }, {
    key: "derivePath",
    value: function derivePath(path) {
      var components = path.split("/");

      if (components.length === 0 || components[0] === "m" && this.depth !== 0) {
        throw new Error("invalid path - " + path);
      }

      if (components[0] === "m") {
        components.shift();
      }

      var result = this;

      for (var i = 0; i < components.length; i++) {
        var component = components[i];

        if (component.match(/^[0-9]+'$/)) {
          var index = parseInt(component.substring(0, component.length - 1));

          if (index >= HardenedBit) {
            throw new Error("invalid path index - " + component);
          }

          result = result._derive(HardenedBit + index);
        } else if (component.match(/^[0-9]+$/)) {
          var _index = parseInt(component);

          if (_index >= HardenedBit) {
            throw new Error("invalid path index - " + component);
          }

          result = result._derive(_index);
        } else {
          throw new Error("invalid path component - " + component);
        }
      }

      return result;
    }
  }], [{
    key: "_fromSeed",
    value: function _fromSeed(seed, mnemonic) {
      var seedArray = Object(lib_esm["a" /* arrayify */])(seed);

      if (seedArray.length < 16 || seedArray.length > 64) {
        throw new Error("invalid seed");
      }

      var I = Object(lib_esm["a" /* arrayify */])(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));
      return new HDNode(lib_esm_constructorGuard, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
    }
  }, {
    key: "fromMnemonic",
    value: function fromMnemonic(mnemonic, password, wordlist) {
      // If a locale name was passed in, find the associated wordlist
      wordlist = getWordlist(wordlist); // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)

      mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);
      return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
        phrase: mnemonic,
        path: "m",
        locale: wordlist.locale
      });
    }
  }, {
    key: "fromSeed",
    value: function fromSeed(seed) {
      return HDNode._fromSeed(seed, null);
    }
  }, {
    key: "fromExtendedKey",
    value: function fromExtendedKey(extendedKey) {
      var bytes = Base58.decode(extendedKey);

      if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
        hdnode_lib_esm_logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
      }

      var depth = bytes[4];
      var parentFingerprint = Object(lib_esm["h" /* hexlify */])(bytes.slice(5, 9));
      var index = parseInt(Object(lib_esm["h" /* hexlify */])(bytes.slice(9, 13)).substring(2), 16);
      var chainCode = Object(lib_esm["h" /* hexlify */])(bytes.slice(13, 45));
      var key = bytes.slice(45, 78);

      switch (Object(lib_esm["h" /* hexlify */])(bytes.slice(0, 4))) {
        // Public Key
        case "0x0488b21e":
        case "0x043587cf":
          return new HDNode(lib_esm_constructorGuard, null, Object(lib_esm["h" /* hexlify */])(key), parentFingerprint, chainCode, index, depth, null);
        // Private Key

        case "0x0488ade4":
        case "0x04358394 ":
          if (key[0] !== 0) {
            break;
          }

          return new HDNode(lib_esm_constructorGuard, Object(lib_esm["h" /* hexlify */])(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);
      }

      return hdnode_lib_esm_logger.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
  }]);

  return HDNode;
}();
function mnemonicToSeed(mnemonic, password) {
  if (!password) {
    password = "";
  }

  var salt = toUtf8Bytes("mnemonic" + password, UnicodeNormalizationForm.NFKD);
  return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, "sha512");
}
function mnemonicToEntropy(mnemonic, wordlist) {
  wordlist = getWordlist(wordlist);
  hdnode_lib_esm_logger.checkNormalize();
  var words = wordlist.split(mnemonic);

  if (words.length % 3 !== 0) {
    throw new Error("invalid mnemonic");
  }

  var entropy = Object(lib_esm["a" /* arrayify */])(new Uint8Array(Math.ceil(11 * words.length / 8)));
  var offset = 0;

  for (var i = 0; i < words.length; i++) {
    var index = wordlist.getWordIndex(words[i].normalize("NFKD"));

    if (index === -1) {
      throw new Error("invalid mnemonic");
    }

    for (var bit = 0; bit < 11; bit++) {
      if (index & 1 << 10 - bit) {
        entropy[offset >> 3] |= 1 << 7 - offset % 8;
      }

      offset++;
    }
  }

  var entropyBits = 32 * words.length / 3;
  var checksumBits = words.length / 3;
  var checksumMask = getUpperMask(checksumBits);
  var checksum = Object(lib_esm["a" /* arrayify */])(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;

  if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
    throw new Error("invalid checksum");
  }

  return Object(lib_esm["h" /* hexlify */])(entropy.slice(0, entropyBits / 8));
}
function entropyToMnemonic(entropy, wordlist) {
  wordlist = getWordlist(wordlist);
  entropy = Object(lib_esm["a" /* arrayify */])(entropy);

  if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {
    throw new Error("invalid entropy");
  }

  var indices = [0];
  var remainingBits = 11;

  for (var i = 0; i < entropy.length; i++) {
    // Consume the whole byte (with still more to go)
    if (remainingBits > 8) {
      indices[indices.length - 1] <<= 8;
      indices[indices.length - 1] |= entropy[i];
      remainingBits -= 8; // This byte will complete an 11-bit index
    } else {
      indices[indices.length - 1] <<= remainingBits;
      indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits; // Start the next word

      indices.push(entropy[i] & getLowerMask(8 - remainingBits));
      remainingBits += 3;
    }
  } // Compute the checksum bits


  var checksumBits = entropy.length / 4;
  var checksum = Object(lib_esm["a" /* arrayify */])(sha256(entropy))[0] & getUpperMask(checksumBits); // Shift the checksum into the word indices

  indices[indices.length - 1] <<= checksumBits;
  indices[indices.length - 1] |= checksum >> 8 - checksumBits;
  return wordlist.join(indices.map(function (index) {
    return wordlist.getWord(index);
  }));
}
function isValidMnemonic(mnemonic, wordlist) {
  try {
    mnemonicToEntropy(mnemonic, wordlist);
    return true;
  } catch (error) {}

  return false;
}
function getAccountPath(index) {
  if (typeof index !== "number" || index < 0 || index >= HardenedBit || index % 1) {
    hdnode_lib_esm_logger.throwArgumentError("invalid account index", "index", index);
  }

  return "m/44'/60'/".concat(index, "'/0/0");
}
// EXTERNAL MODULE: ./node_modules/@ethersproject/random/lib.esm/random.js
var random = __webpack_require__(94);

// EXTERNAL MODULE: ./node_modules/aes-js/index.js
var aes_js = __webpack_require__(16);
var aes_js_default = /*#__PURE__*/__webpack_require__.n(aes_js);

// EXTERNAL MODULE: ./node_modules/scrypt-js/scrypt.js
var scrypt = __webpack_require__(27);
var scrypt_default = /*#__PURE__*/__webpack_require__.n(scrypt);

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/utils.js




function looseArrayify(hexString) {
  if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {
    hexString = '0x' + hexString;
  }

  return Object(lib_esm["a" /* arrayify */])(hexString);
}
function zpad(value, length) {
  value = String(value);

  while (value.length < length) {
    value = '0' + value;
  }

  return value;
}
function getPassword(password) {
  if (typeof password === 'string') {
    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);
  }

  return Object(lib_esm["a" /* arrayify */])(password);
}
function searchPath(object, path) {
  var currentChild = object;
  var comps = path.toLowerCase().split('/');

  for (var i = 0; i < comps.length; i++) {
    // Search for a child object with a case-insensitive matching key
    var matchingChild = null;

    for (var key in currentChild) {
      if (key.toLowerCase() === comps[i]) {
        matchingChild = currentChild[key];
        break;
      }
    } // Didn't find one. :'(


    if (matchingChild === null) {
      return null;
    } // Now check this child...


    currentChild = matchingChild;
  }

  return currentChild;
} // See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)

function uuidV4(randomBytes) {
  var bytes = Object(lib_esm["a" /* arrayify */])(randomBytes); // Section: 4.1.3:
  // - time_hi_and_version[12:16] = 0b0100

  bytes[6] = bytes[6] & 0x0f | 0x40; // Section 4.4
  // - clock_seq_hi_and_reserved[6] = 0b0
  // - clock_seq_hi_and_reserved[7] = 0b1

  bytes[8] = bytes[8] & 0x3f | 0x80;
  var value = Object(lib_esm["h" /* hexlify */])(bytes);
  return [value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34)].join("-");
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/_version.js
var json_wallets_lib_esm_version_version = "json-wallets/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js








var keystore_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};














var keystore_logger = new logger_lib_esm["a" /* Logger */](json_wallets_lib_esm_version_version); // Exported Types

function hasMnemonic(value) {
  return value != null && value.mnemonic && value.mnemonic.phrase;
}

var keystore_KeystoreAccount = /*#__PURE__*/function (_Description) {
  Object(inherits["a" /* default */])(KeystoreAccount, _Description);

  var _super = Object(createSuper["a" /* default */])(KeystoreAccount);

  function KeystoreAccount() {
    Object(classCallCheck["a" /* default */])(this, KeystoreAccount);

    return _super.apply(this, arguments);
  }

  Object(createClass["a" /* default */])(KeystoreAccount, [{
    key: "isKeystoreAccount",
    value: function isKeystoreAccount(value) {
      return !!(value && value._isKeystoreAccount);
    }
  }]);

  return KeystoreAccount;
}(lib_esm_Description);

function _decrypt(data, key, ciphertext) {
  var cipher = searchPath(data, "crypto/cipher");

  if (cipher === "aes-128-ctr") {
    var iv = looseArrayify(searchPath(data, "crypto/cipherparams/iv"));
    var counter = new aes_js_default.a.Counter(iv);
    var aesCtr = new aes_js_default.a.ModeOfOperation.ctr(key, counter);
    return Object(lib_esm["a" /* arrayify */])(aesCtr.decrypt(ciphertext));
  }

  return null;
}

function _getAccount(data, key) {
  var ciphertext = looseArrayify(searchPath(data, "crypto/ciphertext"));
  var computedMAC = Object(lib_esm["h" /* hexlify */])(keccak256(Object(lib_esm["b" /* concat */])([key.slice(16, 32), ciphertext]))).substring(2);

  if (computedMAC !== searchPath(data, "crypto/mac").toLowerCase()) {
    throw new Error("invalid password");
  }

  var privateKey = _decrypt(data, key.slice(0, 16), ciphertext);

  if (!privateKey) {
    keystore_logger.throwError("unsupported cipher", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
      operation: "decrypt"
    });
  }

  var mnemonicKey = key.slice(32, 64);
  var address = computeAddress(privateKey);

  if (data.address) {
    var check = data.address.toLowerCase();

    if (check.substring(0, 2) !== "0x") {
      check = "0x" + check;
    }

    if (lib_esm_getAddress(check) !== address) {
      throw new Error("address mismatch");
    }
  }

  var account = {
    _isKeystoreAccount: true,
    address: address,
    privateKey: Object(lib_esm["h" /* hexlify */])(privateKey)
  }; // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase

  if (searchPath(data, "x-ethers/version") === "0.1") {
    var mnemonicCiphertext = looseArrayify(searchPath(data, "x-ethers/mnemonicCiphertext"));
    var mnemonicIv = looseArrayify(searchPath(data, "x-ethers/mnemonicCounter"));
    var mnemonicCounter = new aes_js_default.a.Counter(mnemonicIv);
    var mnemonicAesCtr = new aes_js_default.a.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
    var path = searchPath(data, "x-ethers/path") || defaultPath;
    var locale = searchPath(data, "x-ethers/locale") || "en";
    var entropy = Object(lib_esm["a" /* arrayify */])(mnemonicAesCtr.decrypt(mnemonicCiphertext));

    try {
      var mnemonic = entropyToMnemonic(entropy, locale);
      var node = lib_esm_HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);

      if (node.privateKey != account.privateKey) {
        throw new Error("mnemonic mismatch");
      }

      account.mnemonic = node.mnemonic;
    } catch (error) {
      // If we don't have the locale wordlist installed to
      // read this mnemonic, just bail and don't set the
      // mnemonic
      if (error.code !== logger_lib_esm["a" /* Logger */].errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
        throw error;
      }
    }
  }

  return new keystore_KeystoreAccount(account);
}

function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
  return Object(lib_esm["a" /* arrayify */])(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));
}

function keystore_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {
  return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
}

function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
  var passwordBytes = getPassword(password);
  var kdf = searchPath(data, "crypto/kdf");

  if (kdf && typeof kdf === "string") {
    var throwError = function throwError(name, value) {
      return keystore_logger.throwArgumentError("invalid key-derivation function parameters", name, value);
    };

    if (kdf.toLowerCase() === "scrypt") {
      var salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
      var N = parseInt(searchPath(data, "crypto/kdfparams/n"));
      var r = parseInt(searchPath(data, "crypto/kdfparams/r"));
      var p = parseInt(searchPath(data, "crypto/kdfparams/p")); // Check for all required parameters

      if (!N || !r || !p) {
        throwError("kdf", kdf);
      } // Make sure N is a power of 2


      if ((N & N - 1) !== 0) {
        throwError("N", N);
      }

      var dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));

      if (dkLen !== 32) {
        throwError("dklen", dkLen);
      }

      return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);
    } else if (kdf.toLowerCase() === "pbkdf2") {
      var _salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));

      var prfFunc = null;
      var prf = searchPath(data, "crypto/kdfparams/prf");

      if (prf === "hmac-sha256") {
        prfFunc = "sha256";
      } else if (prf === "hmac-sha512") {
        prfFunc = "sha512";
      } else {
        throwError("prf", prf);
      }

      var count = parseInt(searchPath(data, "crypto/kdfparams/c"));

      var _dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));

      if (_dkLen !== 32) {
        throwError("dklen", _dkLen);
      }

      return pbkdf2Func(passwordBytes, _salt, count, _dkLen, prfFunc);
    }
  }

  return keystore_logger.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
}

function decryptSync(json, password) {
  var data = JSON.parse(json);

  var key = _computeKdfKey(data, password, pbkdf2Sync, scrypt_default.a.syncScrypt);

  return _getAccount(data, key);
}
function decrypt(json, password, progressCallback) {
  return keystore_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
    var data, key;
    return regenerator_default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            data = JSON.parse(json);
            _context.next = 3;
            return _computeKdfKey(data, password, keystore_pbkdf2, scrypt_default.a.scrypt, progressCallback);

          case 3:
            key = _context.sent;
            return _context.abrupt("return", _getAccount(data, key));

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}
function keystore_encrypt(account, password, options, progressCallback) {
  try {
    // Check the address matches the private key
    if (lib_esm_getAddress(account.address) !== computeAddress(account.privateKey)) {
      throw new Error("address/privateKey mismatch");
    } // Check the mnemonic (if any) matches the private key


    if (hasMnemonic(account)) {
      var mnemonic = account.mnemonic;
      var node = lib_esm_HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);

      if (node.privateKey != account.privateKey) {
        throw new Error("mnemonic mismatch");
      }
    }
  } catch (e) {
    return Promise.reject(e);
  } // The options are optional, so adjust the call as needed


  if (typeof options === "function" && !progressCallback) {
    progressCallback = options;
    options = {};
  }

  if (!options) {
    options = {};
  }

  var privateKey = Object(lib_esm["a" /* arrayify */])(account.privateKey);
  var passwordBytes = getPassword(password);
  var entropy = null;
  var path = null;
  var locale = null;

  if (hasMnemonic(account)) {
    var srcMnemonic = account.mnemonic;
    entropy = Object(lib_esm["a" /* arrayify */])(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || "en"));
    path = srcMnemonic.path || defaultPath;
    locale = srcMnemonic.locale || "en";
  }

  var client = options.client;

  if (!client) {
    client = "ethers.js";
  } // Check/generate the salt


  var salt = null;

  if (options.salt) {
    salt = Object(lib_esm["a" /* arrayify */])(options.salt);
  } else {
    salt = Object(random["a" /* randomBytes */])(32);
    ;
  } // Override initialization vector


  var iv = null;

  if (options.iv) {
    iv = Object(lib_esm["a" /* arrayify */])(options.iv);

    if (iv.length !== 16) {
      throw new Error("invalid iv");
    }
  } else {
    iv = Object(random["a" /* randomBytes */])(16);
  } // Override the uuid


  var uuidRandom = null;

  if (options.uuid) {
    uuidRandom = Object(lib_esm["a" /* arrayify */])(options.uuid);

    if (uuidRandom.length !== 16) {
      throw new Error("invalid uuid");
    }
  } else {
    uuidRandom = Object(random["a" /* randomBytes */])(16);
  } // Override the scrypt password-based key derivation function parameters


  var N = 1 << 17,
      r = 8,
      p = 1;

  if (options.scrypt) {
    if (options.scrypt.N) {
      N = options.scrypt.N;
    }

    if (options.scrypt.r) {
      r = options.scrypt.r;
    }

    if (options.scrypt.p) {
      p = options.scrypt.p;
    }
  } // We take 64 bytes:
  //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)
  //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)


  return scrypt_default.a.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then(function (key) {
    key = Object(lib_esm["a" /* arrayify */])(key); // This will be used to encrypt the wallet (as per Web3 secret storage)

    var derivedKey = key.slice(0, 16);
    var macPrefix = key.slice(16, 32); // This will be used to encrypt the mnemonic phrase (if any)

    var mnemonicKey = key.slice(32, 64); // Encrypt the private key

    var counter = new aes_js_default.a.Counter(iv);
    var aesCtr = new aes_js_default.a.ModeOfOperation.ctr(derivedKey, counter);
    var ciphertext = Object(lib_esm["a" /* arrayify */])(aesCtr.encrypt(privateKey)); // Compute the message authentication code, used to check the password

    var mac = keccak256(Object(lib_esm["b" /* concat */])([macPrefix, ciphertext])); // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition

    var data = {
      address: account.address.substring(2).toLowerCase(),
      id: uuidV4(uuidRandom),
      version: 3,
      Crypto: {
        cipher: "aes-128-ctr",
        cipherparams: {
          iv: Object(lib_esm["h" /* hexlify */])(iv).substring(2)
        },
        ciphertext: Object(lib_esm["h" /* hexlify */])(ciphertext).substring(2),
        kdf: "scrypt",
        kdfparams: {
          salt: Object(lib_esm["h" /* hexlify */])(salt).substring(2),
          n: N,
          dklen: 32,
          p: p,
          r: r
        },
        mac: mac.substring(2)
      }
    }; // If we have a mnemonic, encrypt it into the JSON wallet

    if (entropy) {
      var mnemonicIv = Object(random["a" /* randomBytes */])(16);
      var mnemonicCounter = new aes_js_default.a.Counter(mnemonicIv);
      var mnemonicAesCtr = new aes_js_default.a.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
      var mnemonicCiphertext = Object(lib_esm["a" /* arrayify */])(mnemonicAesCtr.encrypt(entropy));
      var now = new Date();
      var timestamp = now.getUTCFullYear() + "-" + zpad(now.getUTCMonth() + 1, 2) + "-" + zpad(now.getUTCDate(), 2) + "T" + zpad(now.getUTCHours(), 2) + "-" + zpad(now.getUTCMinutes(), 2) + "-" + zpad(now.getUTCSeconds(), 2) + ".0Z";
      data["x-ethers"] = {
        client: client,
        gethFilename: "UTC--" + timestamp + "--" + data.address,
        mnemonicCounter: Object(lib_esm["h" /* hexlify */])(mnemonicIv).substring(2),
        mnemonicCiphertext: Object(lib_esm["h" /* hexlify */])(mnemonicCiphertext).substring(2),
        path: path,
        locale: locale,
        version: "0.1"
      };
    }

    return JSON.stringify(data);
  });
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js















var crowdsale_logger = new logger_lib_esm["a" /* Logger */](json_wallets_lib_esm_version_version);

var crowdsale_CrowdsaleAccount = /*#__PURE__*/function (_Description) {
  Object(inherits["a" /* default */])(CrowdsaleAccount, _Description);

  var _super = Object(createSuper["a" /* default */])(CrowdsaleAccount);

  function CrowdsaleAccount() {
    Object(classCallCheck["a" /* default */])(this, CrowdsaleAccount);

    return _super.apply(this, arguments);
  }

  Object(createClass["a" /* default */])(CrowdsaleAccount, [{
    key: "isCrowdsaleAccount",
    value: function isCrowdsaleAccount(value) {
      return !!(value && value._isCrowdsaleAccount);
    }
  }]);

  return CrowdsaleAccount;
}(lib_esm_Description); // See: https://github.com/ethereum/pyethsaletool

function crowdsale_decrypt(json, password) {
  var data = JSON.parse(json);
  password = getPassword(password); // Ethereum Address

  var ethaddr = lib_esm_getAddress(searchPath(data, "ethaddr")); // Encrypted Seed

  var encseed = looseArrayify(searchPath(data, "encseed"));

  if (!encseed || encseed.length % 16 !== 0) {
    crowdsale_logger.throwArgumentError("invalid encseed", "json", json);
  }

  var key = Object(lib_esm["a" /* arrayify */])(pbkdf2(password, password, 2000, 32, "sha256")).slice(0, 16);
  var iv = encseed.slice(0, 16);
  var encryptedSeed = encseed.slice(16); // Decrypt the seed

  var aesCbc = new aes_js_default.a.ModeOfOperation.cbc(key, iv);
  var seed = aes_js_default.a.padding.pkcs7.strip(Object(lib_esm["a" /* arrayify */])(aesCbc.decrypt(encryptedSeed))); // This wallet format is weird... Convert the binary encoded hex to a string.

  var seedHex = "";

  for (var i = 0; i < seed.length; i++) {
    seedHex += String.fromCharCode(seed[i]);
  }

  var seedHexBytes = toUtf8Bytes(seedHex);
  var privateKey = keccak256(seedHexBytes);
  return new crowdsale_CrowdsaleAccount({
    _isCrowdsaleAccount: true,
    address: ethaddr,
    privateKey: privateKey
  });
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js



function isCrowdsaleWallet(json) {
  var data = null;

  try {
    data = JSON.parse(json);
  } catch (error) {
    return false;
  }

  return data.encseed && data.ethaddr;
}
function isKeystoreWallet(json) {
  var data = null;

  try {
    data = JSON.parse(json);
  } catch (error) {
    return false;
  }

  if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
    return false;
  } // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff


  return true;
} //export function isJsonWallet(json: string): boolean {
//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));
//}

function getJsonWalletAddress(json) {
  if (isCrowdsaleWallet(json)) {
    try {
      return lib_esm_getAddress(JSON.parse(json).ethaddr);
    } catch (error) {
      return null;
    }
  }

  if (isKeystoreWallet(json)) {
    try {
      return lib_esm_getAddress(JSON.parse(json).address);
    } catch (error) {
      return null;
    }
  }

  return null;
}
// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/index.js






function decryptJsonWallet(json, password, progressCallback) {
  if (isCrowdsaleWallet(json)) {
    if (progressCallback) {
      progressCallback(0);
    }

    var account = crowdsale_decrypt(json, password);

    if (progressCallback) {
      progressCallback(1);
    }

    return Promise.resolve(account);
  }

  if (isKeystoreWallet(json)) {
    return decrypt(json, password, progressCallback);
  }

  return Promise.reject(new Error("invalid JSON wallet"));
}

function decryptJsonWalletSync(json, password) {
  if (isCrowdsaleWallet(json)) {
    return crowdsale_decrypt(json, password);
  }

  if (isKeystoreWallet(json)) {
    return decryptSync(json, password);
  }

  throw new Error("invalid JSON wallet");
}


// CONCATENATED MODULE: ./node_modules/@ethersproject/wallet/lib.esm/_version.js
var wallet_lib_esm_version_version = "wallet/5.5.0";
// CONCATENATED MODULE: ./node_modules/@ethersproject/wallet/lib.esm/index.js









var wallet_lib_esm_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};















var wallet_lib_esm_logger = new logger_lib_esm["a" /* Logger */](wallet_lib_esm_version_version);

function isAccount(value) {
  return value != null && Object(lib_esm["k" /* isHexString */])(value.privateKey, 32) && value.address != null;
}

function lib_esm_hasMnemonic(value) {
  var mnemonic = value.mnemonic;
  return mnemonic && mnemonic.phrase;
}

var lib_esm_Wallet = /*#__PURE__*/function (_Signer) {
  Object(inherits["a" /* default */])(Wallet, _Signer);

  var _super = Object(createSuper["a" /* default */])(Wallet);

  function Wallet(privateKey, provider) {
    var _this;

    Object(classCallCheck["a" /* default */])(this, Wallet);

    wallet_lib_esm_logger.checkNew(this instanceof Wallet ? this.constructor : void 0, Wallet);
    _this = _super.call(this);

    if (isAccount(privateKey)) {
      var signingKey = new lib_esm_SigningKey(privateKey.privateKey);
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_signingKey", function () {
        return signingKey;
      });
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "address", computeAddress(_this.publicKey));

      if (_this.address !== lib_esm_getAddress(privateKey.address)) {
        wallet_lib_esm_logger.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
      }

      if (lib_esm_hasMnemonic(privateKey)) {
        var srcMnemonic = privateKey.mnemonic;
        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_mnemonic", function () {
          return {
            phrase: srcMnemonic.phrase,
            path: srcMnemonic.path || defaultPath,
            locale: srcMnemonic.locale || "en"
          };
        });
        var mnemonic = _this.mnemonic;
        var node = lib_esm_HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);

        if (computeAddress(node.privateKey) !== _this.address) {
          wallet_lib_esm_logger.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
        }
      } else {
        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_mnemonic", function () {
          return null;
        });
      }
    } else {
      if (lib_esm_SigningKey.isSigningKey(privateKey)) {
        /* istanbul ignore if */
        if (privateKey.curve !== "secp256k1") {
          wallet_lib_esm_logger.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
        }

        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_signingKey", function () {
          return privateKey;
        });
      } else {
        // A lot of common tools do not prefix private keys with a 0x (see: #1166)
        if (typeof privateKey === "string") {
          if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
            privateKey = "0x" + privateKey;
          }
        }

        var _signingKey = new lib_esm_SigningKey(privateKey);

        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_signingKey", function () {
          return _signingKey;
        });
      }

      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "_mnemonic", function () {
        return null;
      });
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "address", computeAddress(_this.publicKey));
    }
    /* istanbul ignore if */


    if (provider && !lib_esm_Provider.isProvider(provider)) {
      wallet_lib_esm_logger.throwArgumentError("invalid provider", "provider", provider);
    }

    defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this), "provider", provider || null);
    return _this;
  }

  Object(createClass["a" /* default */])(Wallet, [{
    key: "mnemonic",
    get: function get() {
      return this._mnemonic();
    }
  }, {
    key: "privateKey",
    get: function get() {
      return this._signingKey().privateKey;
    }
  }, {
    key: "publicKey",
    get: function get() {
      return this._signingKey().publicKey;
    }
  }, {
    key: "getAddress",
    value: function getAddress() {
      return Promise.resolve(this.address);
    }
  }, {
    key: "connect",
    value: function connect(provider) {
      return new Wallet(this, provider);
    }
  }, {
    key: "signTransaction",
    value: function signTransaction(transaction) {
      var _this2 = this;

      return resolveProperties(transaction).then(function (tx) {
        if (tx.from != null) {
          if (lib_esm_getAddress(tx.from) !== _this2.address) {
            wallet_lib_esm_logger.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
          }

          delete tx.from;
        }

        var signature = _this2._signingKey().signDigest(keccak256(lib_esm_serialize(tx)));

        return lib_esm_serialize(tx, signature);
      });
    }
  }, {
    key: "signMessage",
    value: function signMessage(message) {
      return wallet_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                return _context.abrupt("return", Object(lib_esm["l" /* joinSignature */])(this._signingKey().signDigest(hashMessage(message))));

              case 1:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }, {
    key: "_signTypedData",
    value: function _signTypedData(domain, types, value) {
      return wallet_lib_esm_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee2() {
        var _this3 = this;

        var populated;
        return regenerator_default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return typed_data_TypedDataEncoder.resolveNames(domain, types, value, function (name) {
                  if (_this3.provider == null) {
                    wallet_lib_esm_logger.throwError("cannot resolve ENS names without a provider", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
                      operation: "resolveName",
                      value: name
                    });
                  }

                  return _this3.provider.resolveName(name);
                });

              case 2:
                populated = _context2.sent;
                return _context2.abrupt("return", Object(lib_esm["l" /* joinSignature */])(this._signingKey().signDigest(typed_data_TypedDataEncoder.hash(populated.domain, types, populated.value))));

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
    }
  }, {
    key: "encrypt",
    value: function encrypt(password, options, progressCallback) {
      if (typeof options === "function" && !progressCallback) {
        progressCallback = options;
        options = {};
      }

      if (progressCallback && typeof progressCallback !== "function") {
        throw new Error("invalid callback");
      }

      if (!options) {
        options = {};
      }

      return keystore_encrypt(this, password, options, progressCallback);
    }
    /**
     *  Static methods to create Wallet instances.
     */

  }], [{
    key: "createRandom",
    value: function createRandom(options) {
      var entropy = Object(random["a" /* randomBytes */])(16);

      if (!options) {
        options = {};
      }

      if (options.extraEntropy) {
        entropy = Object(lib_esm["a" /* arrayify */])(Object(lib_esm["e" /* hexDataSlice */])(keccak256(Object(lib_esm["b" /* concat */])([entropy, options.extraEntropy])), 0, 16));
      }

      var mnemonic = entropyToMnemonic(entropy, options.locale);
      return Wallet.fromMnemonic(mnemonic, options.path, options.locale);
    }
  }, {
    key: "fromEncryptedJson",
    value: function fromEncryptedJson(json, password, progressCallback) {
      return decryptJsonWallet(json, password, progressCallback).then(function (account) {
        return new Wallet(account);
      });
    }
  }, {
    key: "fromEncryptedJsonSync",
    value: function fromEncryptedJsonSync(json, password) {
      return new Wallet(decryptJsonWalletSync(json, password));
    }
  }, {
    key: "fromMnemonic",
    value: function fromMnemonic(mnemonic, path, wordlist) {
      if (!path) {
        path = defaultPath;
      }

      return new Wallet(lib_esm_HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));
    }
  }]);

  return Wallet;
}(lib_esm_Signer);
function verifyMessage(message, signature) {
  return recoverAddress(hashMessage(message), signature);
}
function verifyTypedData(domain, types, value, signature) {
  return recoverAddress(typed_data_TypedDataEncoder.hash(domain, types, value), signature);
}
// CONCATENATED MODULE: ./src/helpers/clientEIP712/types.ts
var spaceTypes={Space:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"settings",type:"string"}]};var proposalTypes={Proposal:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"type",type:"string"},{name:"title",type:"string"},{name:"body",type:"string"},{name:"choices",type:"string[]"},{name:"start",type:"uint64"},{name:"end",type:"uint64"},{name:"snapshot",type:"uint64"},{name:"network",type:"string"},{name:"strategies",type:"string"},{name:"plugins",type:"string"},{name:"metadata",type:"string"}]};var cancelProposalTypes={CancelProposal:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"string"}]};var cancelProposal2Types={CancelProposal:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"bytes32"}]};var voteTypes={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"string"},{name:"choice",type:"uint32"},{name:"metadata",type:"string"}]};var voteArrayTypes={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"string"},{name:"choice",type:"uint32[]"},{name:"metadata",type:"string"}]};var voteStringTypes={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"string"},{name:"choice",type:"string"},{name:"metadata",type:"string"}]};var vote2Types={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"bytes32"},{name:"choice",type:"uint32"},{name:"metadata",type:"string"}]};var voteArray2Types={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"bytes32"},{name:"choice",type:"uint32[]"},{name:"metadata",type:"string"}]};var voteString2Types={Vote:[{name:"from",type:"address"},{name:"space",type:"string"},{name:"timestamp",type:"uint64"},{name:"proposal",type:"bytes32"},{name:"choice",type:"string"},{name:"metadata",type:"string"}]};var followTypes={Follow:[{name:"from",type:"address"},{name:"space",type:"string"}]};var unfollowTypes={Unfollow:[{name:"from",type:"address"},{name:"space",type:"string"}]};var subscribeTypes={Subscribe:[{name:"from",type:"address"},{name:"space",type:"string"}]};var unsubscribeTypes={Unsubscribe:[{name:"from",type:"address"},{name:"space",type:"string"}]};var aliasTypes={Alias:[{name:"from",type:"address"},{name:"alias",type:"address"}]};
// CONCATENATED MODULE: ./src/helpers/clientEIP712/clientEIP712.ts
var clientEIP712_domain={name:NAME,version:VERSION};var clientEIP712_Client=/*#__PURE__*/function(){function Client(){var address=arguments.length>0&&arguments[0]!==undefined?arguments[0]:OFFCHAIN_HUB_LINK;Object(classCallCheck["a" /* default */])(this,Client);this.address=void 0;this.address=address;}Object(createClass["a" /* default */])(Client,[{key:"sign",value:function(){var _sign=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(web3,address,message,types){var signer,data,sig;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(web3 instanceof lib_esm_Wallet)signer=web3;if(web3 instanceof web3_provider_Web3Provider)signer=web3.getSigner();if(!message.from)message.from=address;if(!message.timestamp)message.timestamp=parseInt((Date.now()/1e3).toFixed());data={domain:clientEIP712_domain,types:types,message:message};if(!signer){_context.next=13;break;}_context.next=8;return signer._signTypedData(clientEIP712_domain,data.types,message);case 8:sig=_context.sent;console.log("Sign",{address:address,sig:sig,data:data});_context.next=12;return this.send({address:address,sig:sig,data:data});case 12:return _context.abrupt("return",_context.sent);case 13:case"end":return _context.stop();}}},_callee,this);}));function sign(_x,_x2,_x3,_x4){return _sign.apply(this,arguments);}return sign;}()},{key:"send",value:function(){var _send=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(envelop){var url,init;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url="".concat(this.address,"/api/msg");init={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(envelop)};return _context2.abrupt("return",new Promise(function(resolve,reject){browser_ponyfill_default()(url,init).then(function(res){if(res.ok)return resolve(res.json());throw res;}).catch(function(e){return e.json().then(function(json){return reject(json);});});}));case 3:case"end":return _context2.stop();}}},_callee2,this);}));function send(_x5){return _send.apply(this,arguments);}return send;}()},{key:"space",value:function(){var _space=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee3(web3,address,message){return regenerator_default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.sign(web3,address,message,spaceTypes);case 2:return _context3.abrupt("return",_context3.sent);case 3:case"end":return _context3.stop();}}},_callee3,this);}));function space(_x6,_x7,_x8){return _space.apply(this,arguments);}return space;}()},{key:"proposal",value:function(){var _proposal=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee4(web3,address,message){return regenerator_default.a.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.sign(web3,address,message,proposalTypes);case 2:return _context4.abrupt("return",_context4.sent);case 3:case"end":return _context4.stop();}}},_callee4,this);}));function proposal(_x9,_x10,_x11){return _proposal.apply(this,arguments);}return proposal;}()},{key:"cancelProposal",value:function(){var _cancelProposal=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee5(web3,address,message){var type2;return regenerator_default.a.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:type2=message.proposal.startsWith("0x");_context5.next=3;return this.sign(web3,address,message,type2?cancelProposal2Types:cancelProposalTypes);case 3:return _context5.abrupt("return",_context5.sent);case 4:case"end":return _context5.stop();}}},_callee5,this);}));function cancelProposal(_x12,_x13,_x14){return _cancelProposal.apply(this,arguments);}return cancelProposal;}()},{key:"vote",value:function(){var _vote=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee6(web3,address,message){var type2,type;return regenerator_default.a.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:type2=message.proposal.startsWith("0x");type=type2?vote2Types:voteTypes;if(["approval","ranked-choice"].includes(message.type))type=type2?voteArray2Types:voteArrayTypes;if(["quadratic","weighted"].includes(message.type)){type=type2?voteString2Types:voteStringTypes;message.choice=JSON.stringify(message.choice);}// @ts-ignore
delete message.type;_context6.next=7;return this.sign(web3,address,message,type);case 7:return _context6.abrupt("return",_context6.sent);case 8:case"end":return _context6.stop();}}},_callee6,this);}));function vote(_x15,_x16,_x17){return _vote.apply(this,arguments);}return vote;}()},{key:"follow",value:function(){var _follow=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee7(web3,address,message){return regenerator_default.a.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return this.sign(web3,address,message,followTypes);case 2:return _context7.abrupt("return",_context7.sent);case 3:case"end":return _context7.stop();}}},_callee7,this);}));function follow(_x18,_x19,_x20){return _follow.apply(this,arguments);}return follow;}()},{key:"unfollow",value:function(){var _unfollow=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee8(web3,address,message){return regenerator_default.a.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return this.sign(web3,address,message,unfollowTypes);case 2:return _context8.abrupt("return",_context8.sent);case 3:case"end":return _context8.stop();}}},_callee8,this);}));function unfollow(_x21,_x22,_x23){return _unfollow.apply(this,arguments);}return unfollow;}()},{key:"subscribe",value:function(){var _subscribe=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee9(web3,address,message){return regenerator_default.a.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return this.sign(web3,address,message,subscribeTypes);case 2:return _context9.abrupt("return",_context9.sent);case 3:case"end":return _context9.stop();}}},_callee9,this);}));function subscribe(_x24,_x25,_x26){return _subscribe.apply(this,arguments);}return subscribe;}()},{key:"unsubscribe",value:function(){var _unsubscribe=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee10(web3,address,message){return regenerator_default.a.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.next=2;return this.sign(web3,address,message,unsubscribeTypes);case 2:return _context10.abrupt("return",_context10.sent);case 3:case"end":return _context10.stop();}}},_callee10,this);}));function unsubscribe(_x27,_x28,_x29){return _unsubscribe.apply(this,arguments);}return unsubscribe;}()},{key:"alias",value:function(){var _alias=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee11(web3,address,message){return regenerator_default.a.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return this.sign(web3,address,message,aliasTypes);case 2:return _context11.abrupt("return",_context11.sent);case 3:case"end":return _context11.stop();}}},_callee11,this);}));function alias(_x30,_x31,_x32){return _alias.apply(this,arguments);}return alias;}()}]);return Client;}();
// CONCATENATED MODULE: ./src/helpers/clientEIP712/index.ts
var clientEIP712_client=new clientEIP712_Client();/* harmony default export */ var clientEIP712 = (clientEIP712_client);
// CONCATENATED MODULE: ./src/hooks/useClient.ts
function useClient(){var _useWeb3React=useWeb3React(),_useWeb3React$account=_useWeb3React.account,account=_useWeb3React$account===void 0?"":_useWeb3React$account,library=_useWeb3React.library;var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];function send(_x,_x2,_x3){return _send.apply(this,arguments);}function _send(){_send=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(space,type,payload){return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);_context.prev=1;_context.next=4;return sendEIP712(space,type,payload);case 4:return _context.abrupt("return",_context.sent);case 7:_context.prev=7;_context.t0=_context["catch"](1);throw _context.t0;case 10:_context.prev=10;setIsLoading(false);return _context.finish(10);case 13:case"end":return _context.stop();}}},_callee,null,[[1,7,10,13]]);}));return _send.apply(this,arguments);}function sendEIP712(_x4,_x5,_x6){return _sendEIP.apply(this,arguments);}function _sendEIP(){_sendEIP=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(space,type,payload){var _payload$metadata,plugins;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(library){_context2.next=2;break;}throw new Error("Have not library");case 2:if(account){_context2.next=4;break;}throw new Error("Have not account");case 4:if(!(type==="proposal")){_context2.next=10;break;}plugins={};if(Object.keys((_payload$metadata=payload.metadata)===null||_payload$metadata===void 0?void 0:_payload$metadata.plugins).length!==0)plugins=payload.metadata.plugins;return _context2.abrupt("return",clientEIP712.proposal(library,account,{space:space.id,type:payload.type,title:payload.title,body:payload.body,choices:payload.choices,start:payload.start,end:payload.end,snapshot:payload.snapshot,network:payload.network,// strategies: JSON.stringify([space.strategies[0]]),
strategies:JSON.stringify(payload.strategies),plugins:JSON.stringify(plugins),metadata:JSON.stringify({})}));case 10:if(!(type==="vote")){_context2.next=14;break;}return _context2.abrupt("return",clientEIP712.vote(library,account,{space:space.id,proposal:payload.proposal.id,type:payload.proposal.type,choice:payload.choice,metadata:JSON.stringify({})}));case 14:if(!(type==="delete-proposal")){_context2.next=18;break;}return _context2.abrupt("return",clientEIP712.cancelProposal(library,account,{space:space.id,proposal:payload.proposal.id}));case 18:if(!(type==="settings")){_context2.next=20;break;}return _context2.abrupt("return",clientEIP712.space(library,account,{space:space.id,settings:JSON.stringify(payload)}));case 20:case"end":return _context2.stop();}}},_callee2);}));return _sendEIP.apply(this,arguments);}return{send:send,clientLoading:isLoading};}
// CONCATENATED MODULE: ./src/hooks/useSpaces.ts
var useSpaces_useSpaceList=function useSpaceList(id_in){var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=Object(react["useState"])([]),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),spacesData=_useState4[0],setSpacesData=_useState4[1];Object(react["useEffect"])(function(){var _fetchData=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var spaces;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return fetchSpaces(id_in);case 4:spaces=_context.sent;setSpacesData(spaces);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context["catch"](0);console.error("Error: Can't fetch space list. Description: ".concat(_context.t0));case 11:_context.prev=11;setIsLoading(false);return _context.finish(11);case 14:case"end":return _context.stop();}}},_callee,null,[[0,8,11,14]]);}));return function _fetchData(){return _ref.apply(this,arguments);};}();_fetchData();},[]);return{spacesData:spacesData,isLoading:isLoading};};var fetchSpaces=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(id_in){var spacesData;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Object(dist["request"])(OFFCHAIN_HUB_API,SPACES_QUERY,{id_in:id_in});case 2:spacesData=_context2.sent;return _context2.abrupt("return",spacesData.spaces);case 4:case"end":return _context2.stop();}}},_callee2);}));return function fetchSpaces(_x){return _ref2.apply(this,arguments);};}();
// CONCATENATED MODULE: ./src/pages/Proposal/ProposalBody/index.tsx
function ProposalBody(props){var proposal=props.proposal;var title=proposal.title,body=proposal.body,state=proposal.state,space=proposal.space;var navigate=useNavigate();var _useClient=useClient(),send=_useClient.send;var _useSpaceList=useSpaces_useSpaceList([space.id]),spacesData=_useSpaceList.spacesData;var _useWeb3React=useWeb3React(),active=_useWeb3React.active,_useWeb3React$account=_useWeb3React.account,account=_useWeb3React$account===void 0?"":_useWeb3React$account;var spaceData=spacesData[0];var isAdmin=Object(react["useMemo"])(function(){var admins=((spaceData===null||spaceData===void 0?void 0:spaceData.admins)||[]).map(function(admin){return admin.toLowerCase();});return account!==null&&admins.includes(account.toLowerCase());},[spaceData===null||spaceData===void 0?void 0:spaceData.admins,account]);var isCreator=Object(react["useMemo"])(function(){return account!==null&&(proposal===null||proposal===void 0?void 0:proposal.author)===account;},[proposal.author,account]);var showDeleteButton=active&&(isAdmin||isCreator);var haveHeader=!!state;var deleteProposal=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var result;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return send(space,"delete-proposal",{proposal:proposal});case 2:result=_context.sent;if(result.id){console.log("Succesfyly delete proposal with id:",proposal);navigate("/");}case 4:case"end":return _context.stop();}}},_callee);}));return function deleteProposal(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{children:[title&&/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{className:"proposalTitle",children:title}),haveHeader&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"proposalHeader",children:[state&&/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"proposalState floatLeft",children:state}),showDeleteButton&&/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"deleteButton floatRight",onClick:deleteProposal,children:"delete"})]}),body&&/*#__PURE__*/Object(jsx_runtime["jsx"])(MarkdownElement_MarkdownElement,{text:body})]});}/* harmony default export */ var Proposal_ProposalBody = (ProposalBody);
// EXTERNAL MODULE: ./package.json
var package_0 = __webpack_require__(28);

// CONCATENATED MODULE: ./src/helpers/utils.ts
var shortenText=function shortenText(){var str=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"";var numberOfLetters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:7;return(str===null||str===void 0?void 0:str.length)>numberOfLetters+3?str.substring(0,numberOfLetters).trim()+"...":str;};function lsSet(key,value){return localStorage.setItem("".concat(package_0.name,".").concat(key),JSON.stringify(value));}function lsGet(key,fallback){var item=localStorage.getItem("".concat(package_0.name,".").concat(key));return jsonParse(item,fallback);}function lsRemove(key){return localStorage.removeItem("".concat(package_0.name,".").concat(key));}function jsonParse(input,fallback){if(typeof input!=="string"){return fallback||{};}try{return JSON.parse(input);}catch(err){return fallback||{};}}function shortEVMAddress(account){return"".concat(account.substring(0,6),"...").concat(account.substring(account.length-4));}function shortIPFS(account){return"#".concat(account.substring(0,6));}var defaultObj={shortenText:shortenText,lsSet:lsSet,lsGet:lsGet,lsRemove:lsRemove,shortEVMAddress:shortEVMAddress,shortIPFS:shortIPFS};/* harmony default export */ var helpers_utils = (defaultObj);
// CONCATENATED MODULE: ./node_modules/@svgr/webpack/lib?-svgo,+titleProp,+ref!./src/assets/svg/external-link.svg
var _path;

var external_link_excluded = ["title", "titleId"];

function external_link_extends() { external_link_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return external_link_extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = external_link_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function external_link_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



function SvgExternalLink(_ref, svgRef) {
  var title = _ref.title,
      titleId = _ref.titleId,
      props = _objectWithoutProperties(_ref, external_link_excluded);

  return /*#__PURE__*/react["createElement"]("svg", external_link_extends({
    fill: "#000000",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 24 24",
    width: "24px",
    height: "24px",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react["createElement"]("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react["createElement"]("path", {
    d: "M 5 3 C 3.9069372 3 3 3.9069372 3 5 L 3 19 C 3 20.093063 3.9069372 21 5 21 L 19 21 C 20.093063 21 21 20.093063 21 19 L 21 12 L 19 12 L 19 19 L 5 19 L 5 5 L 12 5 L 12 3 L 5 3 z M 14 3 L 14 5 L 17.585938 5 L 8.2929688 14.292969 L 9.7070312 15.707031 L 19 6.4140625 L 19 10 L 21 10 L 21 3 L 14 3 z"
  })));
}

var ForwardRef = /*#__PURE__*/react["forwardRef"](SvgExternalLink);
/* harmony default export */ var external_link = (__webpack_require__.p + "static/media/external-link.54c826b3.svg");

// CONCATENATED MODULE: ./src/components/ExternalLink/index.tsx
function ExternalLink(props){var link=props.link,children=props.children,className=props.className,_props$styles=props.styles,styles=_props$styles===void 0?{}:_props$styles;var fillColor=window.COLOR_TEMPLATE==="dark_template"?"white":"dark";return/*#__PURE__*/Object(jsx_runtime["jsxs"])("a",{className:className||"",href:link,target:"_blank",rel:"noreferrer",style:styles,children:[children," ",/*#__PURE__*/Object(jsx_runtime["jsx"])(ForwardRef,{fill:fillColor,style:{position:"absolute",width:"1.2rem",height:"1rem"}})]});}/* harmony default export */ var components_ExternalLink = (ExternalLink);
// CONCATENATED MODULE: ./src/pages/Proposal/ProposalInfo/index.tsx
function ProposalInfo(props){var proposalData=props.proposalData;var strategies=proposalData.strategies,author=proposalData.author,ipfs=proposalData.ipfs,start=proposalData.start,end=proposalData.end,snapshot=proposalData.snapshot,network=proposalData.network;var networkId=+network;var tokenSymbol="",tokenAddress="";if(strategies===null||strategies===void 0?void 0:strategies.length){tokenSymbol=strategies[0].params.symbol;tokenAddress=strategies[0].params.address;}var haveContent=(strategies===null||strategies===void 0?void 0:strategies.length)||author||ipfs;return/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:haveContent&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-widget-header",children:"Proposal Info"}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"p-1",children:[tokenSymbol&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"Token symbol: "}),"".concat(tokenSymbol)]}),tokenAddress&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"Token address: "}),network?/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"".concat(NETWORK_EXPLORER_URLS[networkId],"address/").concat(tokenAddress),children:shortEVMAddress(tokenAddress)}):tokenAddress]}),author&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"Author: "}),network?/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"".concat(NETWORK_EXPLORER_URLS[networkId],"address/").concat(author),children:shortEVMAddress(author)}):author]}),ipfs&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"IPFS: "}),/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"https://cloudflare-ipfs.com/ipfs/".concat(ipfs),children:shortIPFS(ipfs)})]}),start&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"Start date: "}),"".concat(new Date(start*Math.pow(10,3)).toUTCString())]}),end&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"End date: "}),"".concat(new Date(end*Math.pow(10,3)).toUTCString())]}),snapshot&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("b",{children:"Snapshot: "}),network?/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"".concat(NETWORK_EXPLORER_URLS[networkId],"block/").concat(snapshot),children:snapshot}):snapshot]})]})]})});}/* harmony default export */ var Proposal_ProposalInfo = (ProposalInfo);
// CONCATENATED MODULE: ./src/pages/Proposal/ProposalResults/index.tsx
function ProposalResults(props){var choices=props.choices,results=props.results,strategies=props.strategies;var tokenSymbol=strategies[0].params.symbol;return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-widget-header",children:"Results"}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"p-1",children:choices.map(function(choice,i){var resultByVoteBalance=results.resultsByVoteBalance[i];var persentsOfChoice=resultByVoteBalance/results.sumOfResultsBalance*100;return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-item",children:["".concat(choice," - ").concat(resultByVoteBalance.toFixed(4)," ").concat(tokenSymbol," (").concat(persentsOfChoice.toFixed(2)," %)"),/*#__PURE__*/Object(jsx_runtime["jsx"])("progress",{max:"100",value:persentsOfChoice,style:{width:"100%"}})]},i);})})]});}/* harmony default export */ var Proposal_ProposalResults = (ProposalResults);
// EXTERNAL MODULE: ./src/pages/Proposal/ProposalVotes/index.scss
var ProposalVotes = __webpack_require__(82);

// CONCATENATED MODULE: ./src/pages/Proposal/ProposalVotes/index.tsx
function ProposalVotes_ProposalVotes(props){var votes=props.votes,choices=props.choices,strategies=props.strategies,totalVotes=props.totalVotes;var tokenSymbol=strategies[0].params.symbol;return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget",children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget-header",children:["Top ",votes.length," of ",totalVotes," votes"]}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{children:votes.map(function(voute,i){return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"voteRow",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"voteCol",children:shortEVMAddress(voute.voter)}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"voteCol",children:choices[voute.choice-1]}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"voteCol",children:"".concat(voute.balance.toFixed(4)," ").concat(tokenSymbol)})]},i);})})]});}/* harmony default export */ var Proposal_ProposalVotes = (ProposalVotes_ProposalVotes);
// CONCATENATED MODULE: ./src/hooks/usePower.ts
var usePower_usePower=function usePower(proposal){var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=Object(react["useState"])([{}]),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),scores=_useState4[0],setScores=_useState4[1];var _useState5=Object(react["useState"])(0),_useState6=Object(slicedToArray["a" /* default */])(_useState5,2),totalScore=_useState6[0],setTotalScore=_useState6[1];var _useWeb3React=useWeb3React(),_useWeb3React$account=_useWeb3React.account,account=_useWeb3React$account===void 0?"":_useWeb3React$account;Object(react["useEffect"])(function(){var _fetchData=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var strategies,network,space,snapshot,_scores;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);if(account){_context.next=4;break;}throw new Error("Please, connect to wallet");case 4:strategies=proposal.strategies,network=proposal.network,space=proposal.space,snapshot=proposal.snapshot;_context.next=7;return getScores(space.id,strategies,network,[account],parseInt(snapshot));case 7:_scores=_context.sent;_scores=_scores.map(function(score){return Object.values(score).reduce(function(a,b){return a+b;},0);});setScores(_scores);setTotalScore(_scores.reduce(function(a,b){return a+b;},0));_context.next=16;break;case 13:_context.prev=13;_context.t0=_context["catch"](0);console.error("Error: Can't fetch user power. Description: ".concat(_context.t0));case 16:_context.prev=16;setIsLoading(false);return _context.finish(16);case 19:case"end":return _context.stop();}}},_callee,null,[[0,13,16,19]]);}));return function _fetchData(){return _ref.apply(this,arguments);};}();_fetchData();},[]);return{isPowerLoading:isLoading,scores:scores,power:totalScore};};
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function objectWithoutProperties_objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose_objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}
// CONCATENATED MODULE: ./src/components/Spinner/index.tsx
var Spinner_excluded=["color"];// <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->
function Spinner(_ref){var color=_ref.color,rest=objectWithoutProperties_objectWithoutProperties(_ref,Spinner_excluded);return/*#__PURE__*/Object(jsx_runtime["jsx"])("svg",_objectSpread2(_objectSpread2({width:"38",height:"38",viewBox:"0 0 38 38",xmlns:"http://www.w3.org/2000/svg",stroke:color},rest),{},{children:/*#__PURE__*/Object(jsx_runtime["jsx"])("g",{fill:"none",fillRule:"evenodd",children:/*#__PURE__*/Object(jsx_runtime["jsxs"])("g",{transform:"translate(1 1)",strokeWidth:"2",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("circle",{strokeOpacity:".5",cx:"18",cy:"18",r:"18"}),/*#__PURE__*/Object(jsx_runtime["jsx"])("path",{d:"M36 18c0-9.94-8.06-18-18-18",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"1s",repeatCount:"indefinite"})})]})})}));}
// CONCATENATED MODULE: ./src/components/Modal/Modals/Voting/index..tsx
function VotingModalButton(props){var proposal=props.proposal,checkedChoice=props.checkedChoice;var _useState=Object(react["useState"])(checkedChoice!==-1),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];var setModalOptions=Object(react["useContext"])(ModalUpdaterContext);var closeModal=function closeModal(){return setModalOptions({isOpen:false});};Object(react["useEffect"])(function(){setIsActive(checkedChoice!==-1);},[checkedChoice]);var modalProps={headerContent:"Confirm vote",bodyContent:/*#__PURE__*/Object(jsx_runtime["jsx"])(index_VoteModalContent,{proposal:proposal,checkedChoice:checkedChoice,closeModal:closeModal}),onCancel:function onCancel(){return closeModal();}};var onVoteClick=function onVoteClick(){console.log("click on vote");setModalOptions({isOpen:true,modalProps:modalProps});};return/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"primaryButton ".concat(isActive?"active":""),disabled:!isActive,onClick:onVoteClick,children:/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{children:"Vote"})});}var index_VoteModalContent=function VoteModalContent(props){var navigate=useNavigate();var proposal=props.proposal,checkedChoice=props.checkedChoice,closeModal=props.closeModal;var network=proposal.network,choices=proposal.choices,snapshot=proposal.snapshot,strategies=proposal.strategies;var _useClient=useClient(),send=_useClient.send,clientLoading=_useClient.clientLoading;var _usePower=usePower_usePower(proposal),power=_usePower.power;var tokenSymbol=strategies[0].params.symbol;var networkId=+network;var isFooterButtonActive=!!power&&!clientLoading;var handleSubmit=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var vote,result;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:vote={proposal:proposal,choice:checkedChoice+1,metadata:{}};_context.prev=1;_context.next=4;return send(proposal.space,"vote",vote);case 4:result=_context.sent;console.log("Result",result);closeModal();navigate("/proposals}");navigate("/proposal/".concat(proposal.id));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context["catch"](1);console.error("Can't set vote. Error: ".concat(_context.t0.message||_context.t0));case 14:case"end":return _context.stop();}}},_callee,null,[[1,11]]);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"voteBody",children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"textCenter boldText",children:["Are you sure you want to vote \"",choices[checkedChoice],"\"?",/*#__PURE__*/Object(jsx_runtime["jsx"])("br",{}),"This action cannot be undone."]}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"border rounded-md m-1 p-1",children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"flex",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"flexAuto textColor",children:"Option(s)"}),/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"textRight",children:choices[checkedChoice]})]}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"flex",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"flexAuto textColor",children:"Snapshot"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{className:"mr-1",link:"".concat(NETWORK_EXPLORER_URLS[networkId],"block/").concat(snapshot),children:snapshot})]}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"flex",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"flexAuto textColor",children:"Your voting power"}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("span",{className:"textRight",children:[power," ",tokenSymbol]})]})]})]}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"textCenter p-1 border-t",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{type:"button",className:"primaryButton ".concat(isFooterButtonActive?"active":""),onClick:handleSubmit,disabled:!isFooterButtonActive,children:!isFooterButtonActive?/*#__PURE__*/Object(jsx_runtime["jsx"])(Spinner,{color:"white",style:{height:"1rem",marginRight:"0.5rem"}}):"Vote"})})]});};/* harmony default export */ var index_ = (VotingModalButton);
// CONCATENATED MODULE: ./src/pages/Proposal/ProposalVoting/ChoiceButton.tsx
function ChoiceButton(props){var isActive=props.isActive,id=props.id,text=props.text,onClick=props.onClick;return/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{id:id,onClick:onClick,className:"secondaryButton ".concat(isActive?"active":""),children:/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{children:text})});}/* harmony default export */ var ProposalVoting_ChoiceButton = (ChoiceButton);
// CONCATENATED MODULE: ./src/pages/Proposal/ProposalVoting/index.tsx
function ProposalVoting(props){var proposal=props.proposal;var choices=proposal.choices;var _useState=Object(react["useState"])(-1),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),checkedChoice=_useState2[0],setCheckedChoice=_useState2[1];return/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-widget-header",children:"Cast your vote"}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"p-1",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"mb-1",children:choices.map(function(choice,i){return/*#__PURE__*/Object(jsx_runtime["jsx"])(ProposalVoting_ChoiceButton,{id:"choice-".concat(i),text:choice,isActive:checkedChoice===i,onClick:function onClick(){setCheckedChoice(i);}},i);})}),/*#__PURE__*/Object(jsx_runtime["jsx"])(index_,{checkedChoice:checkedChoice,proposal:proposal})]})]})});}/* harmony default export */ var Proposal_ProposalVoting = (ProposalVoting);
// CONCATENATED MODULE: ./src/pages/Proposal/index.tsx
function ProposalDetail(){var _ref=useParams(),_ref$proposalId=_ref.proposalId,proposalId=_ref$proposalId===void 0?"":_ref$proposalId;var _useProposal=useProposals_useProposal(proposalId),proposalData=_useProposal.proposalData,isLoading=_useProposal.isLoading;var id=proposalData.id,space=proposalData.space,snapshot=proposalData.snapshot,network=proposalData.network,strategies=proposalData.strategies,state=proposalData.state,choices=proposalData.choices;var haveDataForRenderOtherElements=!!(id&&(space===null||space===void 0?void 0:space.id)&&snapshot&&network&&(strategies===null||strategies===void 0?void 0:strategies.length)&&state);return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-page proposal",children:[isLoading&&/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{className:"textCenter",children:"Loading..."}),haveDataForRenderOtherElements&&/*#__PURE__*/Object(jsx_runtime["jsx"])(Proposal_ProposalBody,{proposal:proposalData}),choices&&state!=="closed"&&/*#__PURE__*/Object(jsx_runtime["jsx"])(Proposal_ProposalVoting,{proposal:proposalData}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Proposal_ProposalInfo,{proposalData:proposalData}),haveDataForRenderOtherElements&&/*#__PURE__*/Object(jsx_runtime["jsx"])(ProposalVotesContent,{proposalData:proposalData})]});}function ProposalVotesContent(props){var proposalData=props.proposalData;var _useVotes=useVotes_useVotes(proposalData),votesData=_useVotes.votesData,resultData=_useVotes.resultData,isLoading=_useVotes.isLoading;return/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:isLoading?/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Loading votes..."}):!!votesData.length&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[resultData&&/*#__PURE__*/Object(jsx_runtime["jsx"])(Proposal_ProposalResults,{strategies:proposalData.strategies,choices:proposalData.choices,results:resultData}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Proposal_ProposalVotes,{choices:proposalData.choices,votes:votesData.slice(0,10),strategies:proposalData.strategies,totalVotes:votesData.length})]})});}/* harmony default export */ var pages_Proposal = (ProposalDetail);
// EXTERNAL MODULE: ./node_modules/remove-markdown/index.js
var remove_markdown = __webpack_require__(53);
var remove_markdown_default = /*#__PURE__*/__webpack_require__.n(remove_markdown);

// EXTERNAL MODULE: ./src/pages/Proposals/index.scss
var Proposals = __webpack_require__(83);

// CONCATENATED MODULE: ./src/pages/Proposals/index.tsx
function Proposals_Proposals(){var _useProposalList=useProposals_useProposalList({space_in:[window.ENS_DOMAIN||"onout.eth"],tokenAddress:window.TOKEN_ADDRESS}),proposals=_useProposalList.offChainProposalList,isLoading=_useProposalList.isLoading;var renderedProposalList=proposals.map(function(_ref,index){var author=_ref.author,body=_ref.body,title=_ref.title,state=_ref.state,id=_ref.id;var preparedBody=shortenText(remove_markdown_default()(body),140);return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"proposal-row",children:/*#__PURE__*/Object(jsx_runtime["jsxs"])(Link,{to:"/proposal/".concat(id),children:[/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"proposal-header",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{children:"Created by ".concat(shortEVMAddress(author))}),/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{className:"proposal-state",children:state})]}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"proposal-body",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h2",{children:title}),/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{className:"body-description",children:preparedBody})]})]})},index);});return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-page proposals",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"proposals-header",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{children:"Proposals"})}),isLoading?/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Loading..."}):!!proposals.length?renderedProposalList:/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Let's create your first proposal"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Link,{to:"proposal/create",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"secondaryButton active",children:"Create proposal"})})]})]});}/* harmony default export */ var pages_Proposals = (Proposals_Proposals);
// EXTERNAL MODULE: ./src/pages/About/index.scss
var About = __webpack_require__(84);

// CONCATENATED MODULE: ./src/hooks/useAliasAction.ts
function useAliasAction(){var _aliases$current;var aliases=Object(react["useRef"])(lsGet("aliases")||{});var isValidAlias=Object(react["useRef"])(false);var _useWeb3React=useWeb3React(),_useWeb3React$account=_useWeb3React.account,account=_useWeb3React$account===void 0?"":_useWeb3React$account,library=_useWeb3React.library;var userAlias=Object(react["useRef"])(((_aliases$current=aliases.current)===null||_aliases$current===void 0?void 0:_aliases$current[account||""])||"");var aliasWallet=Object(react["useRef"])(null);Object(react["useEffect"])(function(){if(account){var _aliases$current2;userAlias.current=(_aliases$current2=aliases.current)===null||_aliases$current2===void 0?void 0:_aliases$current2[account];aliasWallet.current=userAlias.current?new lib_esm_Wallet(userAlias.current,library):null;checkAlias();}},[aliases.current,userAlias.current,account,library]);function checkAlias(){return _checkAlias.apply(this,arguments);}function _checkAlias(){_checkAlias=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var _aliasWallet$current;var _alias$,_alias$2,data,alias;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(((_aliasWallet$current=aliasWallet.current)===null||_aliasWallet$current===void 0?void 0:_aliasWallet$current.address)&&account)){_context.next=6;break;}_context.next=3;return Object(dist["request"])(OFFCHAIN_HUB_API,ALIASES_QUERY,{address:account,alias:aliasWallet.current.address});case 3:data=_context.sent;alias=data.aliases;isValidAlias.current=((_alias$=alias[0])===null||_alias$===void 0?void 0:_alias$.address)===account&&((_alias$2=alias[0])===null||_alias$2===void 0?void 0:_alias$2.alias)===aliasWallet.current.address;case 6:case"end":return _context.stop();}}},_callee);}));return _checkAlias.apply(this,arguments);}function setAlias(){return _setAlias.apply(this,arguments);}function _setAlias(){_setAlias=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(){var rndWallet,_aliases$current3,_aliasWallet$current2;return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:rndWallet=lib_esm_Wallet.createRandom();if(!(account&&library)){_context2.next=11;break;}aliases.current=Object.assign(Object(defineProperty["a" /* default */])({},account,rndWallet.privateKey),aliases.current);lsSet("aliases",aliases.current);userAlias.current=(_aliases$current3=aliases.current)===null||_aliases$current3===void 0?void 0:_aliases$current3[account];aliasWallet.current=userAlias.current?new lib_esm_Wallet(userAlias.current,library):null;if(!((_aliasWallet$current2=aliasWallet.current)===null||_aliasWallet$current2===void 0?void 0:_aliasWallet$current2.address)){_context2.next=9;break;}_context2.next=9;return clientEIP712.alias(library,account,{alias:aliasWallet.current.address});case 9:_context2.next=11;return checkAlias();case 11:case"end":return _context2.stop();}}},_callee2);}));return _setAlias.apply(this,arguments);}return{setAlias:setAlias,aliasWallet:aliasWallet,isValidAlias:isValidAlias,checkAlias:checkAlias};}
// CONCATENATED MODULE: ./src/hooks/useFollow.ts
function useFollowSpace(){var spaceId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:"";var _useState=Object(react["useState"])([]),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),following=_useState2[0],setFollowing=_useState2[1];var _useState3=Object(react["useState"])(false),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),isLoadingFollows=_useState4[0],setIsLoadingFollows=_useState4[1];var _useState5=Object(react["useState"])(false),_useState6=Object(slicedToArray["a" /* default */])(_useState5,2),isFollowing=_useState6[0],setIsFolowing=_useState6[1];var _useState7=Object(react["useState"])(false),_useState8=Object(slicedToArray["a" /* default */])(_useState7,2),isLoadingFollow=_useState8[0],setIsLoadingFollow=_useState8[1];var web3=useWeb3React();var account=web3.account||"";var _useAliasAction=useAliasAction(),setAlias=_useAliasAction.setAlias,aliasWallet=_useAliasAction.aliasWallet,isValidAlias=_useAliasAction.isValidAlias,checkAlias=_useAliasAction.checkAlias;function loadFollows(){return _loadFollows.apply(this,arguments);}function _loadFollows(){_loadFollows=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee2(){return regenerator_default.a.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setIsLoadingFollows(true);_context2.prev=1;_context2.t0=Promise;_context2.t1=account;if(!_context2.t1){_context2.next=10;break;}_context2.t2=setFollowing;_context2.next=8;return fetchFollowing([account],[spaceId]);case 8:_context2.t3=_context2.sent;_context2.t1=(0,_context2.t2)(_context2.t3);case 10:_context2.t4=_context2.t1;_context2.t5=[_context2.t4];_context2.t0.all.call(_context2.t0,_context2.t5);_context2.next=18;break;case 15:_context2.prev=15;_context2.t6=_context2["catch"](1);console.error(_context2.t6);case 18:_context2.prev=18;setIsLoadingFollows(false);return _context2.finish(18);case 21:case"end":return _context2.stop();}}},_callee2,null,[[1,15,18,21]]);}));return _loadFollows.apply(this,arguments);}Object(react["useEffect"])(function(){loadFollows();},[account]);Object(react["useEffect"])(function(){setIsFolowing(following.some(function(f){return f.space.id===spaceId&&f.follower===web3.account;}));},[following]);function clickFollow(){web3.active&&web3.account?follow(spaceId):console.log("Please connect to wallet");}var follow=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(spaceId){var account;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:account=web3.account||"";_context.prev=1;setIsLoadingFollow(true);_context.next=5;return checkAlias();case 5:if(!(!aliasWallet.current||!isValidAlias.current)){_context.next=12;break;}_context.next=8;return setAlias();case 8:_context.next=10;return follow(spaceId);case 10:_context.next=21;break;case 12:if(!isFollowing){_context.next=17;break;}_context.next=15;return clientEIP712.unfollow(aliasWallet.current,aliasWallet.current.address,{from:account,space:spaceId});case 15:_context.next=19;break;case 17:_context.next=19;return clientEIP712.follow(aliasWallet.current,aliasWallet.current.address,{from:account,space:spaceId});case 19:_context.next=21;return loadFollows();case 21:_context.next=26;break;case 23:_context.prev=23;_context.t0=_context["catch"](1);console.error(_context.t0);case 26:_context.prev=26;setIsLoadingFollow(false);return _context.finish(26);case 29:case"end":return _context.stop();}}},_callee,null,[[1,23,26,29]]);}));return function follow(_x){return _ref.apply(this,arguments);};}();return{clickFollow:clickFollow,loadFollows:loadFollows,isLoadingFollows:isLoadingFollows,isLoadingFollow:isLoadingFollow,isFollowing:isFollowing};}var fetchFollowing=/*#__PURE__*/function(){var _ref2=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee3(follower_in,space_in){var followingData;return regenerator_default.a.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return Object(dist["request"])(OFFCHAIN_HUB_API,FOLLOWS_QUERY,{follower_in:follower_in,space_in:space_in});case 2:followingData=_context3.sent;return _context3.abrupt("return",followingData.follows);case 4:case"end":return _context3.stop();}}},_callee3);}));return function fetchFollowing(_x2,_x3){return _ref2.apply(this,arguments);};}();
// CONCATENATED MODULE: ./src/hooks/useHover.ts
function useHover(handleMouseOverCallBack,handleMouseOutCallBack){var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),value=_useState2[0],setValue=_useState2[1];var ref=Object(react["useRef"])(null);var handleMouseOver=function handleMouseOver(){setValue(true);if(!!handleMouseOverCallBack){handleMouseOverCallBack();}};var handleMouseOut=function handleMouseOut(){setValue(false);if(!!handleMouseOutCallBack){handleMouseOutCallBack();}};Object(react["useEffect"])(function(){var node=ref.current;if(node){node.addEventListener("mouseover",handleMouseOver);node.addEventListener("mouseout",handleMouseOut);return function(){node.removeEventListener("mouseover",handleMouseOver);node.removeEventListener("mouseout",handleMouseOut);};}},[ref.current]// Recall only if ref changes
);return[ref,value];}
// CONCATENATED MODULE: ./src/pages/About/FollowButton/index.tsx
function FollowButton(props){var spaceObj=props.spaceObj;var _useFollowSpace=useFollowSpace(spaceObj.id),clickFollow=_useFollowSpace.clickFollow,loadFollows=_useFollowSpace.loadFollows,isLoadingFollow=_useFollowSpace.isLoadingFollow,isLoadingFollows=_useFollowSpace.isLoadingFollows,isFollowing=_useFollowSpace.isFollowing;var _useHover=useHover(),_useHover2=Object(slicedToArray["a" /* default */])(_useHover,2),hoverRef=_useHover2[0],isHovered=_useHover2[1];var buttonText=isLoadingFollows||isLoadingFollow?"Loading...":!isFollowing?"Join":isHovered?"Leave":"Joined";Object(react["useEffect"])(function(){loadFollows();},[]);return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{ref:hoverRef,children:/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"secondaryButton",onClick:function onClick(){return clickFollow();},children:buttonText})});}/* harmony default export */ var About_FollowButton = (FollowButton);
// CONCATENATED MODULE: ./src/pages/About/index.tsx
function About_About(){var _useSpaceList=useSpaces_useSpaceList([window.ENS_DOMAIN||"onout.eth"]),spacesData=_useSpaceList.spacesData,isLoading=_useSpaceList.isLoading;var spaceData=spacesData[0];console.groupCollapsed("useSpaceList states");console.log("isLoading",isLoading);console.log("spaceData",spaceData);console.groupEnd();if(isLoading&&!spaceData){return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-page about",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{children:"Loading..."})});}if(!isLoading&&spacesData.length===0){return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-page about",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{children:"Have not any space data."})});}if(!spaceData){return/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-page about",children:/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{children:"Please, try use another space or try reloar."})});}var name=spaceData.name,about=spaceData.about,domain=spaceData.domain,symbol=spaceData.symbol,network=spaceData.network,terms=spaceData.terms,strategies=spaceData.strategies,admins=spaceData.admins,members=spaceData.members;return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-page about",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{style:{textAlign:"center"},children:"About Page"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(About_FollowButton,{spaceObj:spaceData}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{children:[name&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Name"}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("p",{children:[name," ",symbol&&"(".concat(symbol,")")]})]}),about&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"About"}),/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:about})]}),domain&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Domain"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"https://".concat(domain),children:domain})]}),network&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Chain id"}),/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:network})]}),terms&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Terms"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:terms,children:shortenText(terms,35)})]}),strategies.length&&/*#__PURE__*/Object(jsx_runtime["jsxs"])(jsx_runtime["Fragment"],{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Strategie(s)"}),strategies.map(function(strategy,index){return/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:strategy.name},index);})]})]}),!!admins.length&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Admins"}),admins.map(function(admin,index){return/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:admin},index);})]}),!!members.length&&/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h3",{children:"Authors"}),members.map(function(members,index){return/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:members},index);})]})]});}/* harmony default export */ var pages_About = (About_About);
// CONCATENATED MODULE: ./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js











var url_json_rpc_provider_awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};




var url_json_rpc_provider_logger = new logger_lib_esm["a" /* Logger */](_version_version);
 // A StaticJsonRpcProvider is useful when you *know* for certain that
// the backend will never change, as it never calls eth_chainId to
// verify its backend. However, if the backend does change, the effects
// are undefined and may include:
// - inconsistent results
// - locking up the UI
// - block skew warnings
// - wrong results
// If the network is not explicit (i.e. auto-detection is expected), the
// node MUST be running and available to respond to requests BEFORE this
// is instantiated.

var url_json_rpc_provider_StaticJsonRpcProvider = /*#__PURE__*/function (_JsonRpcProvider) {
  Object(inherits["a" /* default */])(StaticJsonRpcProvider, _JsonRpcProvider);

  var _super2 = Object(createSuper["a" /* default */])(StaticJsonRpcProvider);

  function StaticJsonRpcProvider() {
    Object(classCallCheck["a" /* default */])(this, StaticJsonRpcProvider);

    return _super2.apply(this, arguments);
  }

  Object(createClass["a" /* default */])(StaticJsonRpcProvider, [{
    key: "detectNetwork",
    value: function detectNetwork() {
      var _this = this;

      var _super = Object.create(null, {
        detectNetwork: {
          get: function get() {
            return get_get(Object(getPrototypeOf["a" /* default */])(StaticJsonRpcProvider.prototype), "detectNetwork", _this);
          }
        }
      });

      return url_json_rpc_provider_awaiter(this, void 0, void 0, /*#__PURE__*/regenerator_default.a.mark(function _callee() {
        var network;
        return regenerator_default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                network = this.network;

                if (!(network == null)) {
                  _context.next = 7;
                  break;
                }

                _context.next = 4;
                return _super.detectNetwork.call(this);

              case 4:
                network = _context.sent;

                if (!network) {
                  url_json_rpc_provider_logger.throwError("no network detected", logger_lib_esm["a" /* Logger */].errors.UNKNOWN_ERROR, {});
                } // If still not set, set it


                if (this._network == null) {
                  // A static network does not support "any"
                  defineReadOnly(this, "_network", network);
                  this.emit("network", network, null);
                }

              case 7:
                return _context.abrupt("return", network);

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
    }
  }]);

  return StaticJsonRpcProvider;
}(json_rpc_provider_JsonRpcProvider);
var url_json_rpc_provider_UrlJsonRpcProvider = /*#__PURE__*/function (_StaticJsonRpcProvide) {
  Object(inherits["a" /* default */])(UrlJsonRpcProvider, _StaticJsonRpcProvide);

  var _super3 = Object(createSuper["a" /* default */])(UrlJsonRpcProvider);

  function UrlJsonRpcProvider(network, apiKey) {
    var _this2;

    Object(classCallCheck["a" /* default */])(this, UrlJsonRpcProvider);

    url_json_rpc_provider_logger.checkAbstract(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, UrlJsonRpcProvider); // Normalize the Network and API Key

    network = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getNetwork")(network);
    apiKey = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getApiKey")(apiKey);
    var connection = getStatic(this instanceof UrlJsonRpcProvider ? this.constructor : void 0, "getUrl")(network, apiKey);
    _this2 = _super3.call(this, connection, network);

    if (typeof apiKey === "string") {
      defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this2), "apiKey", apiKey);
    } else if (apiKey != null) {
      Object.keys(apiKey).forEach(function (key) {
        defineReadOnly(Object(assertThisInitialized["a" /* default */])(_this2), key, apiKey[key]);
      });
    }

    return _this2;
  }

  Object(createClass["a" /* default */])(UrlJsonRpcProvider, [{
    key: "_startPending",
    value: function _startPending() {
      url_json_rpc_provider_logger.warn("WARNING: API provider does not support pending filters");
    }
  }, {
    key: "isCommunityResource",
    value: function isCommunityResource() {
      return false;
    }
  }, {
    key: "getSigner",
    value: function getSigner(address) {
      return url_json_rpc_provider_logger.throwError("API provider does not support signing", logger_lib_esm["a" /* Logger */].errors.UNSUPPORTED_OPERATION, {
        operation: "getSigner"
      });
    }
  }, {
    key: "listAccounts",
    value: function listAccounts() {
      return Promise.resolve([]);
    } // Return a defaultApiKey if null, otherwise validate the API key

  }], [{
    key: "getApiKey",
    value: function getApiKey(apiKey) {
      return apiKey;
    } // Returns the url or connection for the given network and API key. The
    // API key will have been sanitized by the getApiKey first, so any validation
    // or transformations can be done there.

  }, {
    key: "getUrl",
    value: function getUrl(network, apiKey) {
      return url_json_rpc_provider_logger.throwError("not implemented; sub-classes must override getUrl", logger_lib_esm["a" /* Logger */].errors.NOT_IMPLEMENTED, {
        operation: "getUrl"
      });
    }
  }]);

  return UrlJsonRpcProvider;
}(url_json_rpc_provider_StaticJsonRpcProvider);
// EXTERNAL MODULE: ./src/assets/json/networksSettings.json
var networksSettings = __webpack_require__(54);

// CONCATENATED MODULE: ./src/helpers/utils/web3.ts
var web3_networks=networksSettings;var providers={};function web3_getBlockNumber(_x){return _getBlockNumber.apply(this,arguments);}function _getBlockNumber(){_getBlockNumber=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(provider){var blockNumber;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return provider.getBlockNumber();case 3:blockNumber=_context.sent;return _context.abrupt("return",blockNumber);case 7:_context.prev=7;_context.t0=_context["catch"](0);return _context.abrupt("return",Promise.reject());case 10:case"end":return _context.stop();}}},_callee,null,[[0,7]]);}));return _getBlockNumber.apply(this,arguments);}function getProvider(network){var url=web3_networks[network].rpc[0];if(!providers[network])providers[network]=new url_json_rpc_provider_StaticJsonRpcProvider(url);return providers[network];}/* harmony default export */ var utils_web3 = ({getBlockNumber:web3_getBlockNumber,getProvider:getProvider});
// EXTERNAL MODULE: ./src/pages/CreateProposal/CreateProposalActions/index.scss
var CreateProposalActions = __webpack_require__(47);

// CONCATENATED MODULE: ./src/pages/CreateProposal/CreateProposalActions/PublishProposalButton.tsx
function PublishProposalButton(props){var disable=props.disable,isLoading=props.isLoading,onClick=props.onClick;var _useState=Object(react["useState"])(!disable&&!isLoading),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),isActive=_useState2[0],setIsActive=_useState2[1];var onVoteClick=function onVoteClick(){console.log("click on publish");onClick();};Object(react["useEffect"])(function(){setIsActive(!disable&&!isLoading);},[disable,isLoading]);return/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"primaryButton ".concat(isActive?"active":""),disabled:!isActive,onClick:onVoteClick,children:/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{children:isLoading?/*#__PURE__*/Object(jsx_runtime["jsx"])(Spinner,{color:"white",style:{height:"1rem",marginRight:"0.5rem"}}):"Publish"})});}/* harmony default export */ var CreateProposalActions_PublishProposalButton = (PublishProposalButton);
// CONCATENATED MODULE: ./src/pages/CreateProposal/CreateProposalActions/index.tsx
function CreateProposalActions_CreateProposalActions(props){var navigate=useNavigate();var _useSpaceList=useSpaces_useSpaceList([window.ENS_DOMAIN||"onout.eth"]),spacesData=_useSpaceList.spacesData,isSpaceLoading=_useSpaceList.isLoading;var _useState=Object(react["useState"])(0),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),selectedDuration=_useState2[0],setSelectedDuration=_useState2[1];var _useClient=useClient(),send=_useClient.send,clientLoading=_useClient.clientLoading;var _useState3=Object(react["useState"])(false),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),isWaitResponse=_useState4[0],setIsWaitResponse=_useState4[1];console.groupCollapsed("CreateProposalActions");console.log("clientLoading",clientLoading);console.log("spacesData",spacesData,isSpaceLoading);console.groupEnd();var durationOptions=[{value:0,text:"Duration:"},{value:86400,text:"1d"},{value:259200,text:"3d"},{value:432000,text:"5d"},{value:604800,text:"1w"},{value:1209600,text:"2w"},{value:2419200,text:"1m"}];var handleDurationChange=function handleDurationChange(e){setSelectedDuration(parseInt(e.target.value));};var handleSubmit=/*#__PURE__*/function(){var _ref=Object(asyncToGenerator["a" /* default */])(/*#__PURE__*/regenerator_default.a.mark(function _callee(){var space,network,_space$voting,_space$voting2,_space$voting3,snapshot,strategyParams,dateNow,dateStart,dateEnd,title,body,NewProposal,result;return regenerator_default.a.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:space=spacesData[0];network=window.NETWORK_ID||space.network;setIsWaitResponse(true);_context.prev=3;_context.next=6;return web3_getBlockNumber(getProvider(network));case 6:snapshot=_context.sent;strategyParams={symbol:window.TOKEN_SYMBOL,address:window.TOKEN_ADDRESS,decimals:parseInt(window.TOKEN_DECIMALS)};dateNow=parseInt((Date.now()/1e3).toFixed());dateStart=((_space$voting=space.voting)===null||_space$voting===void 0?void 0:_space$voting.delay)?dateNow+space.voting.delay:dateNow;dateEnd=((_space$voting2=space.voting)===null||_space$voting2===void 0?void 0:_space$voting2.period)?dateStart+space.voting.period:dateStart+durationOptions[selectedDuration].value||3600;title=props.title,body=props.body;NewProposal={title:title,body:body,snapshot:snapshot,network:network,choices:["For","Against","Abstain"],strategies:[{name:"erc20-balance-of",params:strategyParams}],type:"single-choice",plugins:{},metadata:{plugins:[]},timestamp:0,start:dateStart,end:0};NewProposal.timestamp=dateNow;NewProposal.end=((_space$voting3=space.voting)===null||_space$voting3===void 0?void 0:_space$voting3.period)?NewProposal.start+space.voting.period:dateEnd;_context.next=17;return send(space,"proposal",NewProposal);case 17:result=_context.sent;console.log("Result",result);setIsWaitResponse(false);navigate("/proposal/".concat(result.id));_context.next=27;break;case 23:_context.prev=23;_context.t0=_context["catch"](3);console.error("Can't submit proposal. Error: ".concat(_context.t0.message||_context.t0));setIsWaitResponse(false);case 27:case"end":return _context.stop();}}},_callee,null,[[3,23]]);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-widget",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"app-widget-header",children:"Actions"}),/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"p-1",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"mb-1",children:/*#__PURE__*/Object(jsx_runtime["jsx"])(DropDown,{handleChange:handleDurationChange,selectedDuration:selectedDuration,options:durationOptions})}),/*#__PURE__*/Object(jsx_runtime["jsx"])(CreateProposalActions_PublishProposalButton,{disable:selectedDuration===0,onClick:handleSubmit,isLoading:clientLoading||isWaitResponse})]})]})});}function DropDown(props){var handleChange=props.handleChange,options=props.options;return/*#__PURE__*/Object(jsx_runtime["jsx"])("select",{className:"actionDropdown textCenter",name:"option",onChange:handleChange,children:options.map(function(option,i){return/*#__PURE__*/Object(jsx_runtime["jsx"])("option",{value:i,children:option.text},i);})});}/* harmony default export */ var CreateProposal_CreateProposalActions = (CreateProposalActions_CreateProposalActions);
// EXTERNAL MODULE: ./src/pages/CreateProposal/index.scss
var CreateProposal = __webpack_require__(48);

// CONCATENATED MODULE: ./src/pages/CreateProposal/CreateProposalBodyTextArea.tsx
function CreateProposalBodyTextArea(props){var _props$className=props.className,className=_props$className===void 0?"":_props$className,_props$placeholder=props.placeholder,placeholder=_props$placeholder===void 0?"":_props$placeholder,onSetValue=props.onSetValue;var handleKeyDown=function handleKeyDown(e){// Reset field height
e.target.style.height="inherit";// Get the computed styles for the element
var computed=window.getComputedStyle(e.target);// Calculate the height
var height=parseInt(computed.getPropertyValue("border-top-width"),10)+parseInt(computed.getPropertyValue("padding-top"),10)+e.target.scrollHeight+parseInt(computed.getPropertyValue("padding-bottom"),10)+parseInt(computed.getPropertyValue("border-bottom-width"),10);e.target.style.height="".concat(height,"px");onSetValue(e);};return/*#__PURE__*/Object(jsx_runtime["jsx"])("textarea",{className:className,placeholder:placeholder,onChange:function onChange(e){return handleKeyDown(e);}});}/* harmony default export */ var CreateProposal_CreateProposalBodyTextArea = (CreateProposalBodyTextArea);
// CONCATENATED MODULE: ./src/pages/CreateProposal/index.tsx
function CreateProposal_CreateProposal(){var _useState=Object(react["useState"])(""),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=Object(react["useState"])(""),_useState4=Object(slicedToArray["a" /* default */])(_useState3,2),body=_useState4[0],setBody=_useState4[1];return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-page createProposal mb-2",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("input",{maxLength:128,className:"createTitleInput mb-1",placeholder:"Title (proposal in one sentence)",onChange:function onChange(e){return setTitle(e.target.value);},value:title}),/*#__PURE__*/Object(jsx_runtime["jsx"])(CreateProposal_CreateProposalBodyTextArea,{className:"createBodyTextArea mb-1",placeholder:"Tell more about your proposal (optional)",onSetValue:function onSetValue(e){return setBody(e.target.value);},value:body}),/*#__PURE__*/Object(jsx_runtime["jsx"])(CreateProposal_CreateProposalActions,{title:title,body:body})]});}/* harmony default export */ var pages_CreateProposal = (CreateProposal_CreateProposal);
// EXTERNAL MODULE: ./src/pages/NotFound/index.scss
var NotFound = __webpack_require__(85);

// CONCATENATED MODULE: ./src/pages/NotFound/index.tsx
function NotFound_NotFound(){return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"app-page notFound",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("h1",{children:"Not page found"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Link,{to:"/",children:"Go home page"})]});}/* harmony default export */ var pages_NotFound = (NotFound_NotFound);
// EXTERNAL MODULE: ./node_modules/events/events.js
var events = __webpack_require__(36);

// CONCATENATED MODULE: ./node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js



function abstract_connector_esm_inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

var abstract_connector_esm_AbstractConnector = /*#__PURE__*/function (_EventEmitter) {
  abstract_connector_esm_inheritsLoose(AbstractConnector, _EventEmitter);

  function AbstractConnector(_temp) {
    var _this;

    var _ref = _temp === void 0 ? {} : _temp,
        supportedChainIds = _ref.supportedChainIds;

    _this = _EventEmitter.call(this) || this;
    _this.supportedChainIds = supportedChainIds;
    return _this;
  }

  var _proto = AbstractConnector.prototype;

  _proto.emitUpdate = function emitUpdate(update) {
    if (false) {}

    this.emit(ConnectorEvent.Update, update);
  };

  _proto.emitError = function emitError(error) {
    if (false) {}

    this.emit(ConnectorEvent.Error, error);
  };

  _proto.emitDeactivate = function emitDeactivate() {
    if (false) {}

    this.emit(ConnectorEvent.Deactivate);
  };

  return AbstractConnector;
}(events["EventEmitter"]);


// CONCATENATED MODULE: ./node_modules/@web3-react/injected-connector/dist/injected-connector.esm.js



function injected_connector_esm_extends() {
  injected_connector_esm_extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return injected_connector_esm_extends.apply(this, arguments);
}

function injected_connector_esm_inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  subClass.__proto__ = superClass;
}

function injected_connector_esm_getPrototypeOf(o) {
  injected_connector_esm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return injected_connector_esm_getPrototypeOf(o);
}

function injected_connector_esm_setPrototypeOf(o, p) {
  injected_connector_esm_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return injected_connector_esm_setPrototypeOf(o, p);
}

function isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function injected_connector_esm_construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    injected_connector_esm_construct = Reflect.construct;
  } else {
    injected_connector_esm_construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) injected_connector_esm_setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return injected_connector_esm_construct.apply(null, arguments);
}

function injected_connector_esm_isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function injected_connector_esm_wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  injected_connector_esm_wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !injected_connector_esm_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return injected_connector_esm_construct(Class, arguments, injected_connector_esm_getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return injected_connector_esm_setPrototypeOf(Wrapper, Class);
  };

  return injected_connector_esm_wrapNativeSuper(Class);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
} // A type of promise-like that resolves synchronously and supports only one observer


var injected_connector_esm_iteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol("Symbol.iterator")) : "@@iterator"; // Asynchronously iterate through an object's values


var injected_connector_esm_asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== "undefined" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol("Symbol.asyncIterator")) : "@@asyncIterator"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing


function injected_connector_esm_catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
} // Asynchronously await a promise and pass the result to a finally continuation


function parseSendReturn(sendReturn) {
  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;
}

var NoEthereumProviderError = /*#__PURE__*/function (_Error) {
  injected_connector_esm_inheritsLoose(NoEthereumProviderError, _Error);

  function NoEthereumProviderError() {
    var _this;

    _this = _Error.call(this) || this;
    _this.name = _this.constructor.name;
    _this.message = 'No Ethereum provider was found on window.ethereum.';
    return _this;
  }

  return NoEthereumProviderError;
}( /*#__PURE__*/injected_connector_esm_wrapNativeSuper(Error));

var UserRejectedRequestError = /*#__PURE__*/function (_Error2) {
  injected_connector_esm_inheritsLoose(UserRejectedRequestError, _Error2);

  function UserRejectedRequestError() {
    var _this2;

    _this2 = _Error2.call(this) || this;
    _this2.name = _this2.constructor.name;
    _this2.message = 'The user rejected the request.';
    return _this2;
  }

  return UserRejectedRequestError;
}( /*#__PURE__*/injected_connector_esm_wrapNativeSuper(Error));

var InjectedConnector = /*#__PURE__*/function (_AbstractConnector) {
  injected_connector_esm_inheritsLoose(InjectedConnector, _AbstractConnector);

  function InjectedConnector(kwargs) {
    var _this3;

    _this3 = _AbstractConnector.call(this, kwargs) || this;
    _this3.handleNetworkChanged = _this3.handleNetworkChanged.bind(_assertThisInitialized(_this3));
    _this3.handleChainChanged = _this3.handleChainChanged.bind(_assertThisInitialized(_this3));
    _this3.handleAccountsChanged = _this3.handleAccountsChanged.bind(_assertThisInitialized(_this3));
    _this3.handleClose = _this3.handleClose.bind(_assertThisInitialized(_this3));
    return _this3;
  }

  var _proto = InjectedConnector.prototype;

  _proto.handleChainChanged = function handleChainChanged(chainId) {
    if (false) {}

    this.emitUpdate({
      chainId: chainId,
      provider: window.ethereum
    });
  };

  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {
    if (false) {}

    if (accounts.length === 0) {
      this.emitDeactivate();
    } else {
      this.emitUpdate({
        account: accounts[0]
      });
    }
  };

  _proto.handleClose = function handleClose(code, reason) {
    if (false) {}

    this.emitDeactivate();
  };

  _proto.handleNetworkChanged = function handleNetworkChanged(networkId) {
    if (false) {}

    this.emitUpdate({
      chainId: networkId,
      provider: window.ethereum
    });
  };

  _proto.activate = function activate() {
    try {
      var _temp5 = function _temp5(_result) {
        if (_exit2) return _result;

        function _temp2() {
          return injected_connector_esm_extends({
            provider: window.ethereum
          }, account ? {
            account: account
          } : {});
        }

        var _temp = function () {
          if (!account) {
            // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)
            return Promise.resolve(window.ethereum.enable().then(function (sendReturn) {
              return sendReturn && parseSendReturn(sendReturn)[0];
            })).then(function (_window$ethereum$enab) {
              account = _window$ethereum$enab;
            });
          }
        }(); // if unsuccessful, try enable


        return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);
      };

      var _exit2 = false;

      var _this5 = this;

      if (!window.ethereum) {
        throw new NoEthereumProviderError();
      }

      if (window.ethereum.on) {
        window.ethereum.on('chainChanged', _this5.handleChainChanged);
        window.ethereum.on('accountsChanged', _this5.handleAccountsChanged);
        window.ethereum.on('close', _this5.handleClose);
        window.ethereum.on('networkChanged', _this5.handleNetworkChanged);
      }

      if (window.ethereum.isMetaMask) {
        ;
        window.ethereum.autoRefreshOnNetworkChange = false;
      } // try to activate + get account via eth_requestAccounts


      var account;

      var _temp6 = injected_connector_esm_catch(function () {
        return Promise.resolve(window.ethereum.send('eth_requestAccounts').then(function (sendReturn) {
          return parseSendReturn(sendReturn)[0];
        })).then(function (_window$ethereum$send) {
          account = _window$ethereum$send;
        });
      }, function (error) {
        if (error.code === 4001) {
          throw new UserRejectedRequestError();
        }

         false ? undefined : void 0;
      });

      return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getProvider = function getProvider() {
    try {
      return Promise.resolve(window.ethereum);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getChainId = function getChainId() {
    try {
      var _temp12 = function _temp12() {
        function _temp9() {
          if (!chainId) {
            try {
              chainId = parseSendReturn(window.ethereum.send({
                method: 'net_version'
              }));
            } catch (_unused) {
               false ? undefined : void 0;
            }
          }

          if (!chainId) {
            if (window.ethereum.isDapper) {
              chainId = parseSendReturn(window.ethereum.cachedResults.net_version);
            } else {
              chainId = window.ethereum.chainId || window.ethereum.netVersion || window.ethereum.networkVersion || window.ethereum._chainId;
            }
          }

          return chainId;
        }

        var _temp8 = function () {
          if (!chainId) {
            var _temp14 = injected_connector_esm_catch(function () {
              return Promise.resolve(window.ethereum.send('net_version').then(parseSendReturn)).then(function (_window$ethereum$send3) {
                chainId = _window$ethereum$send3;
              });
            }, function () {
               false ? undefined : void 0;
            });

            if (_temp14 && _temp14.then) return _temp14.then(function () {});
          }
        }();

        return _temp8 && _temp8.then ? _temp8.then(_temp9) : _temp9(_temp8);
      };

      if (!window.ethereum) {
        throw new NoEthereumProviderError();
      }

      var chainId;

      var _temp13 = injected_connector_esm_catch(function () {
        return Promise.resolve(window.ethereum.send('eth_chainId').then(parseSendReturn)).then(function (_window$ethereum$send2) {
          chainId = _window$ethereum$send2;
        });
      }, function () {
         false ? undefined : void 0;
      });

      return Promise.resolve(_temp13 && _temp13.then ? _temp13.then(_temp12) : _temp12(_temp13));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getAccount = function getAccount() {
    try {
      var _temp20 = function _temp20() {
        function _temp17() {
          if (!account) {
            account = parseSendReturn(window.ethereum.send({
              method: 'eth_accounts'
            }))[0];
          }

          return account;
        }

        var _temp16 = function () {
          if (!account) {
            var _temp22 = injected_connector_esm_catch(function () {
              return Promise.resolve(window.ethereum.enable().then(function (sendReturn) {
                return parseSendReturn(sendReturn)[0];
              })).then(function (_window$ethereum$enab2) {
                account = _window$ethereum$enab2;
              });
            }, function () {
               false ? undefined : void 0;
            });

            if (_temp22 && _temp22.then) return _temp22.then(function () {});
          }
        }();

        return _temp16 && _temp16.then ? _temp16.then(_temp17) : _temp17(_temp16);
      };

      if (!window.ethereum) {
        throw new NoEthereumProviderError();
      }

      var account;

      var _temp21 = injected_connector_esm_catch(function () {
        return Promise.resolve(window.ethereum.send('eth_accounts').then(function (sendReturn) {
          return parseSendReturn(sendReturn)[0];
        })).then(function (_window$ethereum$send4) {
          account = _window$ethereum$send4;
        });
      }, function () {
         false ? undefined : void 0;
      });

      return Promise.resolve(_temp21 && _temp21.then ? _temp21.then(_temp20) : _temp20(_temp21));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.deactivate = function deactivate() {
    if (window.ethereum && window.ethereum.removeListener) {
      window.ethereum.removeListener('chainChanged', this.handleChainChanged);
      window.ethereum.removeListener('accountsChanged', this.handleAccountsChanged);
      window.ethereum.removeListener('close', this.handleClose);
      window.ethereum.removeListener('networkChanged', this.handleNetworkChanged);
    }
  };

  _proto.isAuthorized = function isAuthorized() {
    try {
      if (!window.ethereum) {
        return Promise.resolve(false);
      }

      return Promise.resolve(injected_connector_esm_catch(function () {
        return Promise.resolve(window.ethereum.send('eth_accounts').then(function (sendReturn) {
          if (parseSendReturn(sendReturn).length > 0) {
            return true;
          } else {
            return false;
          }
        }));
      }, function () {
        return false;
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return InjectedConnector;
}(abstract_connector_esm_AbstractConnector);


// CONCATENATED MODULE: ./node_modules/@web3-react/network-connector/dist/network-connector.esm.js



function network_connector_esm_inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  network_connector_esm_setPrototypeOf(subClass, superClass);
}

function network_connector_esm_getPrototypeOf(o) {
  network_connector_esm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return network_connector_esm_getPrototypeOf(o);
}

function network_connector_esm_setPrototypeOf(o, p) {
  network_connector_esm_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return network_connector_esm_setPrototypeOf(o, p);
}

function network_connector_esm_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function network_connector_esm_construct(Parent, args, Class) {
  if (network_connector_esm_isNativeReflectConstruct()) {
    network_connector_esm_construct = Reflect.construct;
  } else {
    network_connector_esm_construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) network_connector_esm_setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return network_connector_esm_construct.apply(null, arguments);
}

function network_connector_esm_isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function network_connector_esm_wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  network_connector_esm_wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !network_connector_esm_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return network_connector_esm_construct(Class, arguments, network_connector_esm_getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return network_connector_esm_setPrototypeOf(Wrapper, Class);
  };

  return network_connector_esm_wrapNativeSuper(Class);
}

var RequestError = /*#__PURE__*/function (_Error) {
  network_connector_esm_inheritsLoose(RequestError, _Error);

  function RequestError(message, code, data) {
    var _this;

    _this = _Error.call(this) || this;
    _this.code = code;
    _this.data = data;
    _this.name = _this.constructor.name;
    _this.message = message;
    return _this;
  }

  return RequestError;
}( /*#__PURE__*/network_connector_esm_wrapNativeSuper(Error));

var MiniRpcProvider = function MiniRpcProvider(chainId, url) {
  var _this3 = this;

  var _this2 = this;

  this.isMetaMask = false;

  this.sendAsync = function (request, callback) {
    console.log('sendAsync', request.method, request.params);

    _this2.request(request.method, request.params).then(function (result) {
      return callback(null, {
        jsonrpc: '2.0',
        id: request.id,
        result: result
      });
    })["catch"](function (error) {
      return callback(error, null);
    });
  };

  this.request = function (method, params) {
    try {
      if (typeof method !== 'string') {
        params = method.params;
        method = method.method;
      }

      return Promise.resolve(fetch(_this3.url, {
        method: 'POST',
        body: JSON.stringify({
          jsonrpc: '2.0',
          id: 1,
          method: method,
          params: params
        })
      })).then(function (response) {
        if (!response.ok) throw new RequestError(response.status + ": " + response.statusText, -32000);
        return Promise.resolve(response.json()).then(function (body) {
          if ('error' in body) {
            var _body$error, _body$error2, _body$error3;

            throw new RequestError(body == null ? void 0 : (_body$error = body.error) == null ? void 0 : _body$error.message, body == null ? void 0 : (_body$error2 = body.error) == null ? void 0 : _body$error2.code, body == null ? void 0 : (_body$error3 = body.error) == null ? void 0 : _body$error3.data);
          } else if ('result' in body) {
            return body.result;
          } else {
            throw new RequestError("Received unexpected JSON-RPC response to " + method + " request.", -32000, body);
          }
        });
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  this.chainId = chainId;
  this.url = url;
  var parsed = new URL(url);
  this.host = parsed.host;
  this.path = parsed.pathname;
};

var network_connector_esm_NetworkConnector = /*#__PURE__*/function (_AbstractConnector) {
  network_connector_esm_inheritsLoose(NetworkConnector, _AbstractConnector);

  function NetworkConnector(_ref) {
    var _this4;

    var urls = _ref.urls,
        defaultChainId = _ref.defaultChainId;
    !(defaultChainId || Object.keys(urls).length === 1) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
    _this4 = _AbstractConnector.call(this, {
      supportedChainIds: Object.keys(urls).map(function (k) {
        return Number(k);
      })
    }) || this;
    _this4.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);
    _this4.providers = Object.keys(urls).reduce(function (accumulator, chainId) {
      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)]);
      return accumulator;
    }, {});
    return _this4;
  }

  var _proto = NetworkConnector.prototype;

  _proto.activate = function activate() {
    try {
      var _this6 = this;

      return Promise.resolve({
        provider: _this6.providers[_this6.currentChainId],
        chainId: _this6.currentChainId,
        account: null
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getProvider = function getProvider() {
    try {
      var _this8 = this;

      return Promise.resolve(_this8.providers[_this8.currentChainId]);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getChainId = function getChainId() {
    try {
      var _this10 = this;

      return Promise.resolve(_this10.currentChainId);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getAccount = function getAccount() {
    return Promise.resolve(null);
  };

  _proto.deactivate = function deactivate() {
    return;
  };

  _proto.changeChainId = function changeChainId(chainId) {
    !Object.keys(this.providers).includes(chainId.toString()) ?  false ? undefined : tiny_invariant_esm_invariant(false) : void 0;
    this.currentChainId = chainId;
    this.emitUpdate({
      provider: this.providers[this.currentChainId],
      chainId: chainId
    });
  };

  return NetworkConnector;
}(abstract_connector_esm_AbstractConnector);


// CONCATENATED MODULE: ./node_modules/@web3-react/walletconnect-connector/dist/walletconnect-connector.esm.js


function walletconnect_connector_esm_inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;

  walletconnect_connector_esm_setPrototypeOf(subClass, superClass);
}

function walletconnect_connector_esm_getPrototypeOf(o) {
  walletconnect_connector_esm_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return walletconnect_connector_esm_getPrototypeOf(o);
}

function walletconnect_connector_esm_setPrototypeOf(o, p) {
  walletconnect_connector_esm_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return walletconnect_connector_esm_setPrototypeOf(o, p);
}

function walletconnect_connector_esm_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function walletconnect_connector_esm_construct(Parent, args, Class) {
  if (walletconnect_connector_esm_isNativeReflectConstruct()) {
    walletconnect_connector_esm_construct = Reflect.construct;
  } else {
    walletconnect_connector_esm_construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) walletconnect_connector_esm_setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return walletconnect_connector_esm_construct.apply(null, arguments);
}

function walletconnect_connector_esm_isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

function walletconnect_connector_esm_wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  walletconnect_connector_esm_wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !walletconnect_connector_esm_isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return walletconnect_connector_esm_construct(Class, arguments, walletconnect_connector_esm_getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return walletconnect_connector_esm_setPrototypeOf(Wrapper, Class);
  };

  return walletconnect_connector_esm_wrapNativeSuper(Class);
}

function walletconnect_connector_esm_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

var URI_AVAILABLE = 'URI_AVAILABLE';

var walletconnect_connector_esm_UserRejectedRequestError = /*#__PURE__*/function (_Error) {
  walletconnect_connector_esm_inheritsLoose(UserRejectedRequestError, _Error);

  function UserRejectedRequestError() {
    var _this;

    _this = _Error.call(this) || this;
    _this.name = _this.constructor.name;
    _this.message = 'The user rejected the request.';
    return _this;
  }

  return UserRejectedRequestError;
}( /*#__PURE__*/walletconnect_connector_esm_wrapNativeSuper(Error));

function getSupportedChains(_ref) {
  var supportedChainIds = _ref.supportedChainIds,
      rpc = _ref.rpc;

  if (supportedChainIds) {
    return supportedChainIds;
  }

  return rpc ? Object.keys(rpc).map(function (k) {
    return Number(k);
  }) : undefined;
}

var WalletConnectConnector = /*#__PURE__*/function (_AbstractConnector) {
  walletconnect_connector_esm_inheritsLoose(WalletConnectConnector, _AbstractConnector);

  function WalletConnectConnector(config) {
    var _this2;

    _this2 = _AbstractConnector.call(this, {
      supportedChainIds: getSupportedChains(config)
    }) || this;
    _this2.config = config;
    _this2.handleChainChanged = _this2.handleChainChanged.bind(walletconnect_connector_esm_assertThisInitialized(_this2));
    _this2.handleAccountsChanged = _this2.handleAccountsChanged.bind(walletconnect_connector_esm_assertThisInitialized(_this2));
    _this2.handleDisconnect = _this2.handleDisconnect.bind(walletconnect_connector_esm_assertThisInitialized(_this2));
    return _this2;
  }

  var _proto = WalletConnectConnector.prototype;

  _proto.handleChainChanged = function handleChainChanged(chainId) {
    if (false) {}

    this.emitUpdate({
      chainId: chainId
    });
  };

  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {
    if (false) {}

    this.emitUpdate({
      account: accounts[0]
    });
  };

  _proto.handleDisconnect = function handleDisconnect() {
    if (false) {}

    this.emitDeactivate();
  };

  _proto.activate = function activate() {
    try {
      var _this4 = this;

      var _temp3 = function _temp3() {
        _this4.walletConnectProvider.on('chainChanged', _this4.handleChainChanged);

        _this4.walletConnectProvider.on('accountsChanged', _this4.handleAccountsChanged);

        _this4.walletConnectProvider.on('disconnect', _this4.handleDisconnect);

        return Promise.resolve(_this4.walletConnectProvider.enable().then(function (accounts) {
          return accounts[0];
        })["catch"](function (error) {
          // TODO ideally this would be a better check
          if (error.message === 'User closed modal') {
            throw new walletconnect_connector_esm_UserRejectedRequestError();
          }

          throw error;
        })).then(function (account) {
          return {
            provider: _this4.walletConnectProvider,
            account: account
          };
        });
      };

      var _temp4 = function () {
        if (!_this4.walletConnectProvider) {
          return Promise.resolve(__webpack_require__.e(/* import() */ 1).then(__webpack_require__.bind(null, 193)).then(function (m) {
            var _m$default;

            return (_m$default = m == null ? void 0 : m["default"]) != null ? _m$default : m;
          })).then(function (WalletConnectProvider) {
            _this4.walletConnectProvider = new WalletConnectProvider(_this4.config);
          });
        }
      }();

      return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getProvider = function getProvider() {
    try {
      var _this6 = this;

      return Promise.resolve(_this6.walletConnectProvider);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getChainId = function getChainId() {
    try {
      var _this8 = this;

      return Promise.resolve(_this8.walletConnectProvider.chainId);
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.getAccount = function getAccount() {
    try {
      var _this10 = this;

      return Promise.resolve(_this10.walletConnectProvider.accounts).then(function (accounts) {
        return accounts[0];
      });
    } catch (e) {
      return Promise.reject(e);
    }
  };

  _proto.deactivate = function deactivate() {
    if (this.walletConnectProvider) {
      this.walletConnectProvider.removeListener('disconnect', this.handleDisconnect);
      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged);
      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged);
      this.walletConnectProvider.disconnect();
    }
  };

  _proto.close = function close() {
    try {
      var _this12 = this;

      _this12.emitDeactivate();

      return Promise.resolve();
    } catch (e) {
      return Promise.reject(e);
    }
  };

  return WalletConnectConnector;
}(abstract_connector_esm_AbstractConnector);


// CONCATENATED MODULE: ./src/connectors.ts
var injected=new InjectedConnector({supportedChainIds:ALL_SUPPORTED_CHAIN_IDS});var connectors_network=new network_connector_esm_NetworkConnector({urls:NETWORK_RPC_URLS,defaultChainId:SupportedChainId.MAINNET});var walletconnect=new WalletConnectConnector({supportedChainIds:ALL_SUPPORTED_CHAIN_IDS,rpc:NETWORK_RPC_URLS,qrcode:true});
// CONCATENATED MODULE: ./src/hooks/useWeb3Connect.ts
var useWeb3Connect_NetworkContextName="NETWORK";function useActiveWeb3React(){var context=useWeb3React();var contextNetwork=useWeb3React(useWeb3Connect_NetworkContextName);return context.active?context:contextNetwork;}function useEagerConnect(){var _useWeb3React=useWeb3React(),activate=_useWeb3React.activate,active=_useWeb3React.active;var _useState=Object(react["useState"])(false),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),tried=_useState2[0],setTried=_useState2[1];Object(react["useEffect"])(function(){injected.isAuthorized().then(function(isAuthorized){if(isAuthorized){activate(injected,undefined,true).catch(function(){setTried(true);});}else{setTried(true);}});},[]);// intentionally only running on mount (make sure it's only mounted once :))
// if the connection worked, wait until we get confirmation of that to flip the flag
Object(react["useEffect"])(function(){if(!tried&&active){setTried(true);}},[tried,active]);return tried;}function useInactiveListener(){var suppress=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;var _useWeb3React2=useWeb3React(),active=_useWeb3React2.active,error=_useWeb3React2.error,activate=_useWeb3React2.activate;Object(react["useEffect"])(function(){var _window=window,ethereum=_window.ethereum;if(ethereum&&ethereum.on&&!active&&!error&&!suppress){var handleConnect=function handleConnect(){console.log("Handling 'connect' event");activate(injected);};var handleChainChanged=function handleChainChanged(chainId){console.log("Handling 'chainChanged' event with payload",chainId);activate(injected);};var handleAccountsChanged=function handleAccountsChanged(accounts){console.log("Handling 'accountsChanged' event with payload",accounts);if(accounts.length>0){activate(injected);}};var handleNetworkChanged=function handleNetworkChanged(networkId){console.log("Handling 'networkChanged' event with payload",networkId);activate(injected);};ethereum.on("connect",handleConnect);ethereum.on("chainChanged",handleChainChanged);ethereum.on("accountsChanged",handleAccountsChanged);return function(){if(ethereum.removeListener){ethereum.removeListener("connect",handleConnect);ethereum.removeListener("chainChanged",handleChainChanged);ethereum.removeListener("accountsChanged",handleAccountsChanged);ethereum.removeListener("networkChanged",handleNetworkChanged);}};}},[active,error,suppress,activate]);}
// CONCATENATED MODULE: ./src/components/Web3ReactManager/index.tsx
function Web3ReactManager(_ref){var children=_ref.children;var _useWeb3React=useWeb3React(),active=_useWeb3React.active;var _useWeb3React2=useWeb3React(NetworkContextName),isNetworkActive=_useWeb3React2.active,networkError=_useWeb3React2.error,activateNetwork=_useWeb3React2.activate;// try to eagerly connect to an injected provider, if it exists and has granted access already
var triedEager=useEagerConnect();// after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd
Object(react["useEffect"])(function(){if(triedEager&&!isNetworkActive&&!networkError&&!active){activateNetwork(connectors_network);}},[triedEager,isNetworkActive,networkError,activateNetwork,active]);// when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists
useInactiveListener(!triedEager);// if the account context isn't active, and there's an error on the network context, it's an irrecoverable error
if(triedEager&&!active&&networkError){return/*#__PURE__*/Object(jsx_runtime["jsx"])("p",{children:"Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device."});}return children;}
// EXTERNAL MODULE: ./src/components/Header/Navbar/index.scss
var Navbar = __webpack_require__(86);

// CONCATENATED MODULE: ./src/components/Header/Navbar/index.tsx
function Navbar_Navbar(){var getClassNames=function getClassNames(_ref){var isActive=_ref.isActive;return"navbar-item ".concat(isActive?"active":"");};return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"navbar",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(NavLink,{className:getClassNames,id:"proposals-nav-link",to:"/",children:"Proposals"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(NavLink,{className:getClassNames,id:"create-proposal-nav-link",to:"/proposal/create",children:"New proposal"})]});}/* harmony default export */ var Header_Navbar = (Navbar_Navbar);
// CONCATENATED MODULE: ./node_modules/@svgr/webpack/lib?-svgo,+titleProp,+ref!./src/assets/svg/metamask.svg
var _g;

var metamask_excluded = ["title", "titleId"];

function metamask_extends() { metamask_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return metamask_extends.apply(this, arguments); }

function metamask_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = metamask_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function metamask_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



function SvgMetamask(_ref, svgRef) {
  var title = _ref.title,
      titleId = _ref.titleId,
      props = metamask_objectWithoutProperties(_ref, metamask_excluded);

  return /*#__PURE__*/react["createElement"]("svg", metamask_extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 212,
    height: 189,
    viewBox: "0 0 212 189",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react["createElement"]("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react["createElement"]("g", {
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#CDBDB2",
    points: "60.75 173.25 88.313 180.563 88.313 171 90.563 168.75 106.313 168.75 106.313 180 106.313 187.875 89.438 187.875 68.625 178.875"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#CDBDB2",
    points: "105.75 173.25 132.75 180.563 132.75 171 135 168.75 150.75 168.75 150.75 180 150.75 187.875 133.875 187.875 113.063 178.875",
    transform: "matrix(-1 0 0 1 256.5 0)"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#393939",
    points: "90.563 152.438 88.313 171 91.125 168.75 120.375 168.75 123.75 171 121.5 152.438 117 149.625 94.5 150.188"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#F89C35",
    points: "75.375 27 88.875 58.5 95.063 150.188 117 150.188 123.75 58.5 136.125 27"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#F89D35",
    points: "16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#D87C30",
    points: "46.125 101.25 92.25 102.375 87.188 126 65.25 120.375"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EA8D3A",
    points: "46.125 101.813 65.25 119.813 65.25 137.813"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#F89D35",
    points: "65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EB8F35",
    points: "65.25 138.375 60.75 173.25 90.563 152.438"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EA8E3A",
    points: "92.25 102.375 95.063 150.188 86.625 125.719"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#D87C30",
    points: "39.375 138.938 65.25 138.375 60.75 173.25"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EB8F35",
    points: "12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#E8821E",
    points: "88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#DFCEC3",
    points: "60.75 173.25 90.563 152.438 88.313 170.438 88.313 180.563 68.063 176.625"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#DFCEC3",
    points: "121.5 173.25 150.75 152.438 148.5 170.438 148.5 180.563 128.25 176.625",
    transform: "matrix(-1 0 0 1 272.25 0)"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#393939",
    points: "70.313 112.5 64.125 125.438 86.063 119.813",
    transform: "matrix(-1 0 0 1 150.188 0)"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#E88F35",
    points: "12.375 .563 88.875 58.5 75.938 27"
  }), /*#__PURE__*/react["createElement"]("path", {
    fill: "#8E5A30",
    d: "M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z"
  }), /*#__PURE__*/react["createElement"]("g", {
    transform: "matrix(-1 0 0 1 211.5 0)"
  }, /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#F89D35",
    points: "16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#D87C30",
    points: "46.125 101.25 92.25 102.375 87.188 126 65.25 120.375"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EA8D3A",
    points: "46.125 101.813 65.25 119.813 65.25 137.813"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#F89D35",
    points: "65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EB8F35",
    points: "65.25 138.375 60.75 173.25 90 153"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EA8E3A",
    points: "92.25 102.375 95.063 150.188 86.625 125.719"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#D87C30",
    points: "39.375 138.938 65.25 138.375 60.75 173.25"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#EB8F35",
    points: "12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#E8821E",
    points: "88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#393939",
    points: "70.313 112.5 64.125 125.438 86.063 119.813",
    transform: "matrix(-1 0 0 1 150.188 0)"
  }), /*#__PURE__*/react["createElement"]("polygon", {
    fill: "#E88F35",
    points: "12.375 .563 88.875 58.5 75.938 27"
  }), /*#__PURE__*/react["createElement"]("path", {
    fill: "#8E5A30",
    d: "M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z"
  })))));
}

var metamask_ForwardRef = /*#__PURE__*/react["forwardRef"](SvgMetamask);
/* harmony default export */ var metamask = (__webpack_require__.p + "static/media/metamask.09e5f554.svg");

// CONCATENATED MODULE: ./node_modules/@svgr/webpack/lib?-svgo,+titleProp,+ref!./src/assets/svg/walletconnect.svg
var _desc, _defs, walletconnect_g;

var walletconnect_excluded = ["title", "titleId"];

function walletconnect_extends() { walletconnect_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return walletconnect_extends.apply(this, arguments); }

function walletconnect_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = walletconnect_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function walletconnect_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }



function SvgWalletconnect(_ref, svgRef) {
  var title = _ref.title,
      titleId = _ref.titleId,
      props = walletconnect_objectWithoutProperties(_ref, walletconnect_excluded);

  return /*#__PURE__*/react["createElement"]("svg", walletconnect_extends({
    width: "512px",
    height: "590px",
    viewBox: "0 0 512 590",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title === undefined ? /*#__PURE__*/react["createElement"]("title", {
    id: titleId
  }, "logo") : title ? /*#__PURE__*/react["createElement"]("title", {
    id: titleId
  }, title) : null, _desc || (_desc = /*#__PURE__*/react["createElement"]("desc", null, "Created with Sketch.")), _defs || (_defs = /*#__PURE__*/react["createElement"]("defs", null, /*#__PURE__*/react["createElement"]("radialGradient", {
    cx: "0%",
    cy: "50%",
    fx: "0%",
    fy: "50%",
    r: "100%",
    id: "radialGradient-1"
  }, /*#__PURE__*/react["createElement"]("stop", {
    stopColor: "#5D9DF6",
    offset: "0%"
  }), /*#__PURE__*/react["createElement"]("stop", {
    stopColor: "#006FFF",
    offset: "100%"
  })))), walletconnect_g || (walletconnect_g = /*#__PURE__*/react["createElement"]("g", {
    id: "Page-1",
    stroke: "none",
    strokeWidth: 1,
    fill: "none",
    fillRule: "evenodd"
  }, /*#__PURE__*/react["createElement"]("g", {
    id: "logo",
    transform: "translate(-39.000000, 0.000000)"
  }, /*#__PURE__*/react["createElement"]("polygon", {
    id: "Polygon",
    fill: "url(#radialGradient-1)",
    points: "295 0 550.477494 147.5 550.477494 442.5 295 590 39.5225059 442.5 39.5225059 147.5"
  }), /*#__PURE__*/react["createElement"]("path", {
    d: "M194.405895,231.673222 C249.86622,177.442259 339.785174,177.442259 395.245498,231.673222 L401.920237,238.200005 C404.693254,240.911553 404.693254,245.307841 401.920237,248.01939 L379.087286,270.346215 C377.700777,271.70199 375.452803,271.70199 374.066295,270.346215 L364.881061,261.364586 C326.190552,223.53171 263.460842,223.53171 224.770332,261.364586 L214.933705,270.98317 C213.547196,272.338943 211.299222,272.338943 209.912714,270.98317 L187.079763,248.656345 C184.306746,245.944796 184.306746,241.548508 187.079763,238.83696 L194.405895,231.673222 Z M442.604374,278.028982 L462.920749,297.842027 C465.69307,300.545655 465.693086,304.929097 462.920784,307.632745 L371.312843,396.972219 C368.540528,399.675881 364.045685,399.675911 361.273332,396.972289 C361.27332,396.972277 361.273308,396.972265 361.273296,396.972254 L296.255552,333.565428 C295.562469,332.889517 294.438759,332.889517 293.745675,333.565428 C293.74567,333.565432 293.745667,333.565436 293.745662,333.56544 L228.729303,396.972219 C225.956997,399.675888 221.462154,399.675932 218.689792,396.972318 C218.689775,396.972302 218.689758,396.972285 218.689741,396.972269 L127.079251,307.631607 C124.306916,304.927965 124.306916,300.544496 127.079251,297.840855 L147.395662,278.027844 C150.167997,275.324203 154.662839,275.324203 157.435173,278.027844 L222.453863,341.435555 C223.146947,342.111466 224.270657,342.111466 224.963741,341.435555 C224.963751,341.435546 224.96376,341.435536 224.96377,341.435528 L289.979202,278.027844 C292.751473,275.32414 297.246315,275.324039 300.018713,278.027618 C300.018752,278.027656 300.018791,278.027693 300.018829,278.027731 L365.037432,341.435528 C365.730516,342.111438 366.854226,342.111438 367.54731,341.435528 L432.564862,278.028982 C435.337197,275.32534 439.832039,275.32534 442.604374,278.028982 Z",
    id: "WalletConnect",
    fill: "#FFFFFF",
    fillRule: "nonzero"
  })))));
}

var walletconnect_ForwardRef = /*#__PURE__*/react["forwardRef"](SvgWalletconnect);
/* harmony default export */ var svg_walletconnect = (__webpack_require__.p + "static/media/walletconnect.00e3b589.svg");

// EXTERNAL MODULE: ./src/components/Modal/Modals/ConnectWallet/Providers/index.scss
var Providers = __webpack_require__(87);

// CONCATENATED MODULE: ./src/components/Modal/Modals/ConnectWallet/Providers/index.tsx
var _connectorsByName;var EConnectorNames;(function(EConnectorNames){EConnectorNames["Injected"]="Injected";EConnectorNames["WalletConnect"]="WalletConnect";})(EConnectorNames||(EConnectorNames={}));var connectorsByName=(_connectorsByName={},Object(defineProperty["a" /* default */])(_connectorsByName,EConnectorNames.Injected,injected),Object(defineProperty["a" /* default */])(_connectorsByName,EConnectorNames.WalletConnect,walletconnect),_connectorsByName);function getErrorMessage(error){if(error instanceof NoEthereumProviderError){return"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile. (Use http(s) to wallet connect)";}else if(error instanceof UnsupportedChainIdError){return"You're connected to an unsupported network.";}else if(error instanceof UserRejectedRequestError||error instanceof walletconnect_connector_esm_UserRejectedRequestError){return"Please authorize this website to access your Ethereum account.";}else{console.error(error);return"An unknown error occurred. Check the console for more details. (Use http(s) to wallet connect)";}}function ConnectProviders(props){var closeModal=props.closeModal;var context=useWeb3React();var connector=context.connector,activate=context.activate,error=context.error;// handle logic to recognize the connector currently being activated
var _useState=Object(react["useState"])(),_useState2=Object(slicedToArray["a" /* default */])(_useState,2),activatingConnector=_useState2[0],setActivatingConnector=_useState2[1];Object(react["useEffect"])(function(){if(activatingConnector&&activatingConnector===connector){setActivatingConnector(undefined);!error&&closeModal&&closeModal();}},[activatingConnector,connector]);// handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already
var triedEager=useEagerConnect();// handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists
useInactiveListener(!triedEager||!!activatingConnector);return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"connectorsButtons",children:[!!error&&/*#__PURE__*/Object(jsx_runtime["jsx"])("h4",{className:"error",children:getErrorMessage(error)}),Object.keys(connectorsByName).map(function(name){var connectorName=name;var currentConnector=connectorsByName[connectorName];var activating=currentConnector===activatingConnector;var connected=currentConnector===connector;var disabled=!triedEager||!!activatingConnector||connected||!!error;return/*#__PURE__*/Object(jsx_runtime["jsxs"])("button",{className:"secondaryButton alingItemsCenter",disabled:disabled,onClick:function onClick(){setActivatingConnector(currentConnector);activate(connectorsByName[connectorName]);},children:[activating&&/*#__PURE__*/Object(jsx_runtime["jsx"])(Spinner,{color:"grey",style:{height:"1rem",marginRight:"0.5rem"}}),connected&&!error&&/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{role:"img","aria-label":"check",style:{marginRight:"0.5rem",alignItems:"center"},children:"\u2705"}),name==="Injected"?/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:/*#__PURE__*/Object(jsx_runtime["jsx"])(metamask_ForwardRef,{style:{width:"1.5rem",height:"1.5rem",marginRight:"0.5rem"}})}):name==="WalletConnect"?/*#__PURE__*/Object(jsx_runtime["jsx"])(jsx_runtime["Fragment"],{children:/*#__PURE__*/Object(jsx_runtime["jsx"])(walletconnect_ForwardRef,{style:{width:"1.5rem",height:"1.5rem",marginRight:"0.5rem"}})}):"","".concat(name)]},name);})]});}/* harmony default export */ var ConnectWallet_Providers = (ConnectProviders);
// CONCATENATED MODULE: ./src/components/Modal/Modals/ConnectWallet/index.tsx
function ConnectWallet(){var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,deactivate=_useActiveWeb3React.deactivate,chainId=_useActiveWeb3React.chainId;var setModalOptions=Object(react["useContext"])(ModalUpdaterContext);var connectWalletModalProps={headerContent:"Connect wallet",bodyContent:/*#__PURE__*/Object(jsx_runtime["jsx"])(ConnectWallet_Providers,{closeModal:function closeModal(){return setModalOptions({isOpen:false});}}),footerContent:"",onCancel:function onCancel(){return setModalOptions({isOpen:false});}};var disconectButton=/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{style:{display:"flex",padding:"1rem"},children:/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"secondaryButton",onClick:function onClick(){deactivate();setModalOptions({isOpen:false});},children:"Disconnect"})});var networkId=chainId||1;var accountContent=/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{style:{display:"flex",padding:"1rem"},children:[/*#__PURE__*/Object(jsx_runtime["jsx"])("span",{style:{marginRight:"0.5rem"},children:"Account"}),/*#__PURE__*/Object(jsx_runtime["jsx"])(components_ExternalLink,{link:"".concat(NETWORK_EXPLORER_URLS[networkId],"address/").concat(account),children:shortEVMAddress(account||"")})]});var accountModalProps={headerContent:"Account",bodyContent:accountContent,footerContent:disconectButton,onCancel:function onCancel(){return setModalOptions({isOpen:false});}};return/*#__PURE__*/Object(jsx_runtime["jsx"])("button",{className:"secondaryButton",onClick:function onClick(){return setModalOptions({isOpen:true,modalProps:account?accountModalProps:connectWalletModalProps});},style:{width:"auto"},children:account?shortEVMAddress(account):"Connect Wallet"});}/* harmony default export */ var Modals_ConnectWallet = (ConnectWallet);
// EXTERNAL MODULE: ./src/components/Header/index.scss
var Header = __webpack_require__(88);

// CONCATENATED MODULE: ./src/components/Header/index.tsx
function Header_Header(){return/*#__PURE__*/Object(jsx_runtime["jsxs"])("div",{className:"header",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(Header_Navbar,{}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Modals_ConnectWallet,{})]});}/* harmony default export */ var components_Header = (Header_Header);
// EXTERNAL MODULE: ./src/pages/App.scss
var App = __webpack_require__(89);

// CONCATENATED MODULE: ./src/pages/App.tsx
function App_App(){var colorTemplate=window.COLOR_TEMPLATE==="dark_template"?"dark":"light";return/*#__PURE__*/Object(jsx_runtime["jsx"])(HashRouter,{children:/*#__PURE__*/Object(jsx_runtime["jsx"])(Web3ReactManager,{children:/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"App","data-color-theme":colorTemplate,children:/*#__PURE__*/Object(jsx_runtime["jsxs"])(components_WithModal,{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(components_Header,{}),/*#__PURE__*/Object(jsx_runtime["jsx"])("div",{className:"content-wrapper",children:/*#__PURE__*/Object(jsx_runtime["jsxs"])(Routes,{children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(Route,{path:"/",element:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_Proposals,{})}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Route,{path:"about",element:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_About,{})}),/*#__PURE__*/Object(jsx_runtime["jsxs"])(Route,{path:"proposal",children:[/*#__PURE__*/Object(jsx_runtime["jsx"])(Route,{path:"create",element:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_CreateProposal,{})}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Route,{path:":proposalId",element:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_Proposal,{})})]}),/*#__PURE__*/Object(jsx_runtime["jsx"])(Route,{path:"*",element:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_NotFound,{})})]})})]})})})});}/* harmony default export */ var pages_App = (App_App);
// CONCATENATED MODULE: ./src/reportWebVitals.ts
var reportWebVitals=function reportWebVitals(onPerfEntry){if(onPerfEntry&&onPerfEntry instanceof Function){__webpack_require__.e(/* import() */ 2).then(__webpack_require__.bind(null, 192)).then(function(_ref){var getCLS=_ref.getCLS,getFID=_ref.getFID,getFCP=_ref.getFCP,getLCP=_ref.getLCP,getTTFB=_ref.getTTFB;getCLS(onPerfEntry);getFID(onPerfEntry);getFCP(onPerfEntry);getLCP(onPerfEntry);getTTFB(onPerfEntry);});}};/* harmony default export */ var src_reportWebVitals = (reportWebVitals);
// CONCATENATED MODULE: ./src/utils/getLibrary.ts
function getLibrary_getLibrary(provider){var library=new web3_provider_Web3Provider(provider);library.pollingInterval=12000;return library;}
// CONCATENATED MODULE: ./src/index.tsx
var Web3ProviderNetwork=createWeb3ReactRoot(NetworkContextName);var appElement=document.getElementById("daofactory_app");window.ENS_DOMAIN=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-ens"))||"onout.eth";window.NETWORK_ID=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-network"))||"56";window.TOKEN_ADDRESS=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-token-address"))||"0x92648e4537cdfa1ee743a244465a31aa034b1ce8";window.TOKEN_SYMBOL=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-token-symbol"))||"SWAP";window.TOKEN_DECIMALS=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-token-decimals"))||"18";window.COLOR_TEMPLATE=(appElement===null||appElement===void 0?void 0:appElement.getAttribute("data-color-template"))||"light_template";react_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime["jsx"])(react_default.a.StrictMode,{children:/*#__PURE__*/Object(jsx_runtime["jsx"])(core_esm_Web3ReactProvider,{getLibrary:getLibrary_getLibrary,children:/*#__PURE__*/Object(jsx_runtime["jsx"])(Web3ProviderNetwork,{getLibrary:getLibrary_getLibrary,children:/*#__PURE__*/Object(jsx_runtime["jsx"])(pages_App,{})})})}),appElement);// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
src_reportWebVitals();

/***/ }),
/* 91 */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "print", function() { return /* binding */ print; });

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(5);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js
var createForOfIteratorHelper = __webpack_require__(21);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules
var toConsumableArray = __webpack_require__(49);

// CONCATENATED MODULE: ./node_modules/graphql/jsutils/inspect.mjs


var MAX_ARRAY_LENGTH = 10;
var MAX_RECURSIVE_DEPTH = 2;
/**
 * Used to print values in error messages.
 */

function inspect(value) {
  return formatValue(value, []);
}

function formatValue(value, seenValues) {
  switch (typeof value) {
    case 'string':
      return JSON.stringify(value);

    case 'function':
      return value.name ? "[function ".concat(value.name, "]") : '[function]';

    case 'object':
      return formatObjectValue(value, seenValues);

    default:
      return String(value);
  }
}

function formatObjectValue(value, previouslySeenValues) {
  if (value === null) {
    return 'null';
  }

  if (previouslySeenValues.includes(value)) {
    return '[Circular]';
  }

  var seenValues = [].concat(Object(toConsumableArray["a" /* default */])(previouslySeenValues), [value]);

  if (isJSONable(value)) {
    var jsonValue = value.toJSON(); // check for infinite recursion

    if (jsonValue !== value) {
      return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }

  return formatObject(value, seenValues);
}

function isJSONable(value) {
  return typeof value.toJSON === 'function';
}

function formatObject(object, seenValues) {
  var entries = Object.entries(object);

  if (entries.length === 0) {
    return '{}';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[' + getObjectTag(object) + ']';
  }

  var properties = entries.map(function (_ref) {
    var _ref2 = Object(slicedToArray["a" /* default */])(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    return key + ': ' + formatValue(value, seenValues);
  });
  return '{ ' + properties.join(', ') + ' }';
}

function formatArray(array, seenValues) {
  if (array.length === 0) {
    return '[]';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[Array]';
  }

  var len = Math.min(MAX_ARRAY_LENGTH, array.length);
  var remaining = array.length - len;
  var items = [];

  for (var i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }

  if (remaining === 1) {
    items.push('... 1 more item');
  } else if (remaining > 1) {
    items.push("... ".concat(remaining, " more items"));
  }

  return '[' + items.join(', ') + ']';
}

function getObjectTag(object) {
  var tag = Object.prototype.toString.call(object).replace(/^\[object /, '').replace(/]$/, '');

  if (tag === 'Object' && typeof object.constructor === 'function') {
    var name = object.constructor.name;

    if (typeof name === 'string' && name !== '') {
      return name;
    }
  }

  return tag;
}
// CONCATENATED MODULE: ./node_modules/graphql/jsutils/devAssert.mjs
function devAssert(condition, message) {
  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')

  if (!booleanCondition) {
    throw new Error(message);
  }
}
// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(7);

// CONCATENATED MODULE: ./node_modules/graphql/language/ast.mjs



/**
 * Contains a range of UTF-8 character offsets and token references that
 * identify the region of the source from which the AST derived.
 */
var ast_Location = /*#__PURE__*/function (_Symbol$toStringTag) {
  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The Token at which this Node begins.
   */

  /**
   * The Token at which this Node ends.
   */

  /**
   * The Source document the AST represents.
   */
  function Location(startToken, endToken, source) {
    Object(classCallCheck["a" /* default */])(this, Location);

    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }

  Object(createClass["a" /* default */])(Location, [{
    key: _Symbol$toStringTag,
    get: function get() {
      return 'Location';
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        start: this.start,
        end: this.end
      };
    }
  }]);

  return Location;
}(Symbol.toStringTag);
/**
 * Represents a range of characters represented by a lexical token
 * within a Source.
 */

var ast_Token = /*#__PURE__*/function (_Symbol$toStringTag2) {
  /**
   * The kind of Token.
   */

  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The 1-indexed line number on which this Token appears.
   */

  /**
   * The 1-indexed column number at which this Token begins.
   */

  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   *
   * Note: is undefined for punctuation tokens, but typed as string for
   * convenience in the parser.
   */

  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  function Token(kind, start, end, line, column, value) {
    Object(classCallCheck["a" /* default */])(this, Token);

    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

    this.value = value;
    this.prev = null;
    this.next = null;
  }

  Object(createClass["a" /* default */])(Token, [{
    key: _Symbol$toStringTag2,
    get: function get() {
      return 'Token';
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      return {
        kind: this.kind,
        value: this.value,
        line: this.line,
        column: this.column
      };
    }
  }]);

  return Token;
}(Symbol.toStringTag);
/**
 * The list of all possible AST node types.
 */

/**
 * @internal
 */

var QueryDocumentKeys = {
  Name: [],
  Document: ['definitions'],
  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],
  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],
  Variable: ['name'],
  SelectionSet: ['selections'],
  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
  Argument: ['name', 'value'],
  FragmentSpread: ['name', 'directives'],
  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
  FragmentDefinition: ['name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0
  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ['values'],
  ObjectValue: ['fields'],
  ObjectField: ['name', 'value'],
  Directive: ['name', 'arguments'],
  NamedType: ['name'],
  ListType: ['type'],
  NonNullType: ['type'],
  SchemaDefinition: ['description', 'directives', 'operationTypes'],
  OperationTypeDefinition: ['type'],
  ScalarTypeDefinition: ['description', 'name', 'directives'],
  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],
  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],
  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],
  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
  EnumValueDefinition: ['description', 'name', 'directives'],
  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],
  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],
  SchemaExtension: ['directives', 'operationTypes'],
  ScalarTypeExtension: ['name', 'directives'],
  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  UnionTypeExtension: ['name', 'directives', 'types'],
  EnumTypeExtension: ['name', 'directives', 'values'],
  InputObjectTypeExtension: ['name', 'directives', 'fields']
};
var kindValues = new Set(Object.keys(QueryDocumentKeys));
/**
 * @internal
 */

function isNode(maybeNode) {
  var maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;
  return typeof maybeKind === 'string' && kindValues.has(maybeKind);
}
/** Name */

var OperationTypeNode;

(function (OperationTypeNode) {
  OperationTypeNode['QUERY'] = 'query';
  OperationTypeNode['MUTATION'] = 'mutation';
  OperationTypeNode['SUBSCRIPTION'] = 'subscription';
})(OperationTypeNode || (OperationTypeNode = {}));
// CONCATENATED MODULE: ./node_modules/graphql/language/kinds.mjs
/**
 * The set of allowed kind values for AST nodes.
 */
var Kind;
/**
 * The enum type representing the possible kind values of AST nodes.
 *
 * @deprecated Please use `Kind`. Will be remove in v17.
 */

(function (Kind) {
  Kind['NAME'] = 'Name';
  Kind['DOCUMENT'] = 'Document';
  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';
  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';
  Kind['SELECTION_SET'] = 'SelectionSet';
  Kind['FIELD'] = 'Field';
  Kind['ARGUMENT'] = 'Argument';
  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';
  Kind['INLINE_FRAGMENT'] = 'InlineFragment';
  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';
  Kind['VARIABLE'] = 'Variable';
  Kind['INT'] = 'IntValue';
  Kind['FLOAT'] = 'FloatValue';
  Kind['STRING'] = 'StringValue';
  Kind['BOOLEAN'] = 'BooleanValue';
  Kind['NULL'] = 'NullValue';
  Kind['ENUM'] = 'EnumValue';
  Kind['LIST'] = 'ListValue';
  Kind['OBJECT'] = 'ObjectValue';
  Kind['OBJECT_FIELD'] = 'ObjectField';
  Kind['DIRECTIVE'] = 'Directive';
  Kind['NAMED_TYPE'] = 'NamedType';
  Kind['LIST_TYPE'] = 'ListType';
  Kind['NON_NULL_TYPE'] = 'NonNullType';
  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';
  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';
  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';
  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';
  Kind['FIELD_DEFINITION'] = 'FieldDefinition';
  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';
  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';
  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';
  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';
  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';
  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';
  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';
  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';
  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';
  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';
  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';
  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';
  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';
  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';
})(Kind || (Kind = {}));
// CONCATENATED MODULE: ./node_modules/graphql/language/visitor.mjs






/**
 * A visitor is provided to visit, it contains the collection of
 * relevant functions to be called during the visitor's traversal.
 */

var BREAK = Object.freeze({});
/**
 * visit() will walk through an AST using a depth-first traversal, calling
 * the visitor's enter function at each node in the traversal, and calling the
 * leave function after visiting that node and all of its child nodes.
 *
 * By returning different values from the enter and leave functions, the
 * behavior of the visitor can be altered, including skipping over a sub-tree of
 * the AST (by returning false), editing the AST by returning a value or null
 * to remove the value, or to stop the whole traversal by returning BREAK.
 *
 * When using visit() to edit an AST, the original AST will not be modified, and
 * a new version of the AST with the changes applied will be returned from the
 * visit function.
 *
 * ```ts
 * const editedAST = visit(ast, {
 *   enter(node, key, parent, path, ancestors) {
 *     // @return
 *     //   undefined: no action
 *     //   false: skip visiting this node
 *     //   visitor.BREAK: stop visiting altogether
 *     //   null: delete this node
 *     //   any value: replace this node with the returned value
 *   },
 *   leave(node, key, parent, path, ancestors) {
 *     // @return
 *     //   undefined: no action
 *     //   false: no action
 *     //   visitor.BREAK: stop visiting altogether
 *     //   null: delete this node
 *     //   any value: replace this node with the returned value
 *   }
 * });
 * ```
 *
 * Alternatively to providing enter() and leave() functions, a visitor can
 * instead provide functions named the same as the kinds of AST nodes, or
 * enter/leave visitors at a named key, leading to three permutations of the
 * visitor API:
 *
 * 1) Named visitors triggered when entering a node of a specific kind.
 *
 * ```ts
 * visit(ast, {
 *   Kind(node) {
 *     // enter the "Kind" node
 *   }
 * })
 * ```
 *
 * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.
 *
 * ```ts
 * visit(ast, {
 *   Kind: {
 *     enter(node) {
 *       // enter the "Kind" node
 *     }
 *     leave(node) {
 *       // leave the "Kind" node
 *     }
 *   }
 * })
 * ```
 *
 * 3) Generic visitors that trigger upon entering and leaving any node.
 *
 * ```ts
 * visit(ast, {
 *   enter(node) {
 *     // enter any node
 *   },
 *   leave(node) {
 *     // leave any node
 *   }
 * })
 * ```
 */

function visit(root, visitor) {
  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;
  var enterLeaveMap = new Map();

  for (var _i = 0, _Object$values = Object.values(Kind); _i < _Object$values.length; _i++) {
    var kind = _Object$values[_i];
    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));
  }
  /* eslint-disable no-undef-init */


  var stack = undefined;
  var inArray = Array.isArray(root);
  var keys = [root];
  var index = -1;
  var edits = [];
  var node = undefined;
  var key = undefined;
  var parent = undefined;
  var path = [];
  var ancestors = [];
  var newRoot = root;
  /* eslint-enable no-undef-init */

  do {
    index++;
    var isLeaving = index === keys.length;
    var isEdited = isLeaving && edits.length !== 0;

    if (isLeaving) {
      key = ancestors.length === 0 ? undefined : path[path.length - 1];
      node = parent;
      parent = ancestors.pop();

      if (isEdited) {
        if (inArray) {
          node = node.slice();
          var editOffset = 0;

          var _iterator = Object(createForOfIteratorHelper["a" /* default */])(edits),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var _step$value = Object(slicedToArray["a" /* default */])(_step.value, 2),
                  editKey = _step$value[0],
                  editValue = _step$value[1];

              var arrayKey = editKey - editOffset;

              if (editValue === null) {
                node.splice(arrayKey, 1);
                editOffset++;
              } else {
                node[arrayKey] = editValue;
              }
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }
        } else {
          node = Object.defineProperties({}, Object.getOwnPropertyDescriptors(node));

          var _iterator2 = Object(createForOfIteratorHelper["a" /* default */])(edits),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var _step2$value = Object(slicedToArray["a" /* default */])(_step2.value, 2),
                  _editKey = _step2$value[0],
                  _editValue = _step2$value[1];

              node[_editKey] = _editValue;
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
        }
      }

      index = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else {
      key = parent ? inArray ? index : keys[index] : undefined;
      node = parent ? parent[key] : newRoot;

      if (node === null || node === undefined) {
        continue;
      }

      if (parent) {
        path.push(key);
      }
    }

    var result = void 0;

    if (!Array.isArray(node)) {
      var _enterLeaveMap$get, _enterLeaveMap$get2;

      isNode(node) || devAssert(false, "Invalid AST Node: ".concat(inspect(node), "."));
      var visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;
      result = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key, parent, path, ancestors);

      if (result === BREAK) {
        break;
      }

      if (result === false) {
        if (!isLeaving) {
          path.pop();
          continue;
        }
      } else if (result !== undefined) {
        edits.push([key, result]);

        if (!isLeaving) {
          if (isNode(result)) {
            node = result;
          } else {
            path.pop();
            continue;
          }
        }
      }
    }

    if (result === undefined && isEdited) {
      edits.push([key, node]);
    }

    if (isLeaving) {
      path.pop();
    } else {
      var _node$kind;

      stack = {
        inArray: inArray,
        index: index,
        keys: keys,
        edits: edits,
        prev: stack
      };
      inArray = Array.isArray(node);
      keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];
      index = -1;
      edits = [];

      if (parent) {
        ancestors.push(parent);
      }

      parent = node;
    }
  } while (stack !== undefined);

  if (edits.length !== 0) {
    newRoot = edits[edits.length - 1][1];
  }

  return newRoot;
}
/**
 * Creates a new visitor instance which delegates to many visitors to run in
 * parallel. Each visitor will be visited for each node before moving on.
 *
 * If a prior visitor edits a node, no following visitors will see that node.
 */

function visitInParallel(visitors) {
  var skipping = new Array(visitors.length).fill(null);
  var mergedVisitor = Object.create(null);

  var _loop = function _loop() {
    var kind = _Object$values2[_i2];
    var hasVisitor = false;
    var enterList = new Array(visitors.length).fill(undefined);
    var leaveList = new Array(visitors.length).fill(undefined);

    for (var i = 0; i < visitors.length; ++i) {
      var _getEnterLeaveForKind = getEnterLeaveForKind(visitors[i], kind),
          enter = _getEnterLeaveForKind.enter,
          leave = _getEnterLeaveForKind.leave;

      hasVisitor || (hasVisitor = enter != null || leave != null);
      enterList[i] = enter;
      leaveList[i] = leave;
    }

    if (!hasVisitor) {
      return "continue";
    }

    var mergedEnterLeave = {
      enter: function enter() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var node = args[0];

        for (var _i3 = 0; _i3 < visitors.length; _i3++) {
          if (skipping[_i3] === null) {
            var _enterList$i;

            var result = (_enterList$i = enterList[_i3]) === null || _enterList$i === void 0 ? void 0 : _enterList$i.apply(visitors[_i3], args);

            if (result === false) {
              skipping[_i3] = node;
            } else if (result === BREAK) {
              skipping[_i3] = BREAK;
            } else if (result !== undefined) {
              return result;
            }
          }
        }
      },
      leave: function leave() {
        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        var node = args[0];

        for (var _i4 = 0; _i4 < visitors.length; _i4++) {
          if (skipping[_i4] === null) {
            var _leaveList$i;

            var result = (_leaveList$i = leaveList[_i4]) === null || _leaveList$i === void 0 ? void 0 : _leaveList$i.apply(visitors[_i4], args);

            if (result === BREAK) {
              skipping[_i4] = BREAK;
            } else if (result !== undefined && result !== false) {
              return result;
            }
          } else if (skipping[_i4] === node) {
            skipping[_i4] = null;
          }
        }
      }
    };
    mergedVisitor[kind] = mergedEnterLeave;
  };

  for (var _i2 = 0, _Object$values2 = Object.values(Kind); _i2 < _Object$values2.length; _i2++) {
    var _ret = _loop();

    if (_ret === "continue") continue;
  }

  return mergedVisitor;
}
/**
 * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.
 */

function getEnterLeaveForKind(visitor, kind) {
  var kindVisitor = visitor[kind];

  if (typeof kindVisitor === 'object') {
    // { Kind: { enter() {}, leave() {} } }
    return kindVisitor;
  } else if (typeof kindVisitor === 'function') {
    // { Kind() {} }
    return {
      enter: kindVisitor,
      leave: undefined
    };
  } // { enter() {}, leave() {} }


  return {
    enter: visitor.enter,
    leave: visitor.leave
  };
}
/**
 * Given a visitor instance, if it is leaving or not, and a node kind, return
 * the function the visitor runtime should call.
 *
 * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17
 */
// istanbul ignore next (Deprecated code)

function getVisitFn(visitor, kind, isLeaving) {
  var _getEnterLeaveForKind2 = getEnterLeaveForKind(visitor, kind),
      enter = _getEnterLeaveForKind2.enter,
      leave = _getEnterLeaveForKind2.leave;

  return isLeaving ? leave : enter;
}
// CONCATENATED MODULE: ./node_modules/graphql/language/blockString.mjs


/**
 * Produces the value of a block string from its parsed raw value, similar to
 * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.
 *
 * This implements the GraphQL spec's BlockStringValue() static algorithm.
 *
 * @internal
 */
function dedentBlockStringValue(rawString) {
  // Expand a block string's raw value into independent lines.
  var lines = rawString.split(/\r\n|[\n\r]/g); // Remove common indentation from all lines but first.

  var commonIndent = getBlockStringIndentation(rawString);

  if (commonIndent !== 0) {
    for (var i = 1; i < lines.length; i++) {
      lines[i] = lines[i].slice(commonIndent);
    }
  } // Remove leading and trailing blank lines.


  var startLine = 0;

  while (startLine < lines.length && isBlank(lines[startLine])) {
    ++startLine;
  }

  var endLine = lines.length;

  while (endLine > startLine && isBlank(lines[endLine - 1])) {
    --endLine;
  } // Return a string of the lines joined with U+000A.


  return lines.slice(startLine, endLine).join('\n');
}

function isBlank(str) {
  var _iterator = Object(createForOfIteratorHelper["a" /* default */])(str),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var char = _step.value;

      if (char !== ' ' && char !== '\t') {
        return false;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  return true;
}
/**
 * @internal
 */


function getBlockStringIndentation(value) {
  var _commonIndent;

  var isFirstLine = true;
  var isEmptyLine = true;
  var indent = 0;
  var commonIndent = null;

  for (var i = 0; i < value.length; ++i) {
    switch (value.charCodeAt(i)) {
      case 13:
        //  \r
        if (value.charCodeAt(i + 1) === 10) {
          ++i; // skip \r\n as one symbol
        }

      // falls through

      case 10:
        //  \n
        isFirstLine = false;
        isEmptyLine = true;
        indent = 0;
        break;

      case 9: //   \t

      case 32:
        //  <space>
        ++indent;
        break;

      default:
        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {
          commonIndent = indent;
        }

        isEmptyLine = false;
    }
  }

  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;
}
/**
 * Print a block string in the indented block form by adding a leading and
 * trailing blank line. However, if a block string starts with whitespace and is
 * a single-line, adding a leading blank line would strip that whitespace.
 *
 * @internal
 */

function printBlockString(value) {
  var preferMultipleLines = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var isSingleLine = !value.includes('\n');
  var hasLeadingSpace = value.startsWith(' ') || value.startsWith('\t');
  var hasTrailingQuote = value.endsWith('"');
  var hasTrailingSlash = value.endsWith('\\');
  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;
  var result = ''; // Format a multi-line block quote to account for leading space.

  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {
    result += '\n';
  }

  result += value;

  if (printAsMultipleLines) {
    result += '\n';
  }

  return '"""' + result.replace(/"""/g, '\\"""') + '"""';
}
// CONCATENATED MODULE: ./node_modules/graphql/language/printString.mjs
/**
 * Prints a string as a GraphQL StringValue literal. Replaces control characters
 * and excluded characters (" U+0022 and \\ U+005C) with escape sequences.
 */
function printString(str) {
  return "\"".concat(str.replace(escapedRegExp, escapedReplacer), "\"");
} // eslint-disable-next-line no-control-regex

var escapedRegExp = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;

function escapedReplacer(str) {
  return escapeSequences[str.charCodeAt(0)];
} // prettier-ignore


var escapeSequences = ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", '\\b', '\\t', '\\n', "\\u000B", '\\f', '\\r', "\\u000E", "\\u000F", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001A", "\\u001B", "\\u001C", "\\u001D", "\\u001E", "\\u001F", '', '', '\\"', '', '', '', '', '', '', '', '', '', '', '', '', '', // 2F
'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 3F
'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 4F
'', '', '', '', '', '', '', '', '', '', '', '', '\\\\', '', '', '', // 5F
'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 6F
'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', "\\u007F", "\\u0080", "\\u0081", "\\u0082", "\\u0083", "\\u0084", "\\u0085", "\\u0086", "\\u0087", "\\u0088", "\\u0089", "\\u008A", "\\u008B", "\\u008C", "\\u008D", "\\u008E", "\\u008F", "\\u0090", "\\u0091", "\\u0092", "\\u0093", "\\u0094", "\\u0095", "\\u0096", "\\u0097", "\\u0098", "\\u0099", "\\u009A", "\\u009B", "\\u009C", "\\u009D", "\\u009E", "\\u009F"];
// CONCATENATED MODULE: ./node_modules/graphql/language/printer.mjs



/**
 * Converts an AST into a string, using one set of reasonable
 * formatting rules.
 */

function print(ast) {
  return visit(ast, printDocASTReducer);
}
var MAX_LINE_LENGTH = 80;
var printDocASTReducer = {
  Name: {
    leave: function leave(node) {
      return node.value;
    }
  },
  Variable: {
    leave: function leave(node) {
      return '$' + node.name;
    }
  },
  // Document
  Document: {
    leave: function leave(node) {
      return join(node.definitions, '\n\n');
    }
  },
  OperationDefinition: {
    leave: function leave(node) {
      var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');
      var prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' '); // Anonymous queries with no directives or variable definitions can use
      // the query short form.

      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;
    }
  },
  VariableDefinition: {
    leave: function leave(_ref) {
      var variable = _ref.variable,
          type = _ref.type,
          defaultValue = _ref.defaultValue,
          directives = _ref.directives;
      return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));
    }
  },
  SelectionSet: {
    leave: function leave(_ref2) {
      var selections = _ref2.selections;
      return block(selections);
    }
  },
  Field: {
    leave: function leave(_ref3) {
      var alias = _ref3.alias,
          name = _ref3.name,
          args = _ref3.arguments,
          directives = _ref3.directives,
          selectionSet = _ref3.selectionSet;
      var prefix = wrap('', alias, ': ') + name;
      var argsLine = prefix + wrap('(', join(args, ', '), ')');

      if (argsLine.length > MAX_LINE_LENGTH) {
        argsLine = prefix + wrap('(\n', indent(join(args, '\n')), '\n)');
      }

      return join([argsLine, join(directives, ' '), selectionSet], ' ');
    }
  },
  Argument: {
    leave: function leave(_ref4) {
      var name = _ref4.name,
          value = _ref4.value;
      return name + ': ' + value;
    }
  },
  // Fragments
  FragmentSpread: {
    leave: function leave(_ref5) {
      var name = _ref5.name,
          directives = _ref5.directives;
      return '...' + name + wrap(' ', join(directives, ' '));
    }
  },
  InlineFragment: {
    leave: function leave(_ref6) {
      var typeCondition = _ref6.typeCondition,
          directives = _ref6.directives,
          selectionSet = _ref6.selectionSet;
      return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');
    }
  },
  FragmentDefinition: {
    leave: function leave(_ref7 // Note: fragment variable definitions are experimental and may be changed
    ) {
      var name = _ref7.name,
          typeCondition = _ref7.typeCondition,
          variableDefinitions = _ref7.variableDefinitions,
          directives = _ref7.directives,
          selectionSet = _ref7.selectionSet;
      return (// or removed in the future.
        "fragment ".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), " ") + "on ".concat(typeCondition, " ").concat(wrap('', join(directives, ' '), ' ')) + selectionSet
      );
    }
  },
  // Value
  IntValue: {
    leave: function leave(_ref8) {
      var value = _ref8.value;
      return value;
    }
  },
  FloatValue: {
    leave: function leave(_ref9) {
      var value = _ref9.value;
      return value;
    }
  },
  StringValue: {
    leave: function leave(_ref10) {
      var value = _ref10.value,
          isBlockString = _ref10.block;
      return isBlockString ? printBlockString(value) : printString(value);
    }
  },
  BooleanValue: {
    leave: function leave(_ref11) {
      var value = _ref11.value;
      return value ? 'true' : 'false';
    }
  },
  NullValue: {
    leave: function leave() {
      return 'null';
    }
  },
  EnumValue: {
    leave: function leave(_ref12) {
      var value = _ref12.value;
      return value;
    }
  },
  ListValue: {
    leave: function leave(_ref13) {
      var values = _ref13.values;
      return '[' + join(values, ', ') + ']';
    }
  },
  ObjectValue: {
    leave: function leave(_ref14) {
      var fields = _ref14.fields;
      return '{' + join(fields, ', ') + '}';
    }
  },
  ObjectField: {
    leave: function leave(_ref15) {
      var name = _ref15.name,
          value = _ref15.value;
      return name + ': ' + value;
    }
  },
  // Directive
  Directive: {
    leave: function leave(_ref16) {
      var name = _ref16.name,
          args = _ref16.arguments;
      return '@' + name + wrap('(', join(args, ', '), ')');
    }
  },
  // Type
  NamedType: {
    leave: function leave(_ref17) {
      var name = _ref17.name;
      return name;
    }
  },
  ListType: {
    leave: function leave(_ref18) {
      var type = _ref18.type;
      return '[' + type + ']';
    }
  },
  NonNullType: {
    leave: function leave(_ref19) {
      var type = _ref19.type;
      return type + '!';
    }
  },
  // Type System Definitions
  SchemaDefinition: {
    leave: function leave(_ref20) {
      var description = _ref20.description,
          directives = _ref20.directives,
          operationTypes = _ref20.operationTypes;
      return wrap('', description, '\n') + join(['schema', join(directives, ' '), block(operationTypes)], ' ');
    }
  },
  OperationTypeDefinition: {
    leave: function leave(_ref21) {
      var operation = _ref21.operation,
          type = _ref21.type;
      return operation + ': ' + type;
    }
  },
  ScalarTypeDefinition: {
    leave: function leave(_ref22) {
      var description = _ref22.description,
          name = _ref22.name,
          directives = _ref22.directives;
      return wrap('', description, '\n') + join(['scalar', name, join(directives, ' ')], ' ');
    }
  },
  ObjectTypeDefinition: {
    leave: function leave(_ref23) {
      var description = _ref23.description,
          name = _ref23.name,
          interfaces = _ref23.interfaces,
          directives = _ref23.directives,
          fields = _ref23.fields;
      return wrap('', description, '\n') + join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
    }
  },
  FieldDefinition: {
    leave: function leave(_ref24) {
      var description = _ref24.description,
          name = _ref24.name,
          args = _ref24.arguments,
          type = _ref24.type,
          directives = _ref24.directives;
      return wrap('', description, '\n') + name + (hasMultilineItems(args) ? wrap('(\n', indent(join(args, '\n')), '\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));
    }
  },
  InputValueDefinition: {
    leave: function leave(_ref25) {
      var description = _ref25.description,
          name = _ref25.name,
          type = _ref25.type,
          defaultValue = _ref25.defaultValue,
          directives = _ref25.directives;
      return wrap('', description, '\n') + join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');
    }
  },
  InterfaceTypeDefinition: {
    leave: function leave(_ref26) {
      var description = _ref26.description,
          name = _ref26.name,
          interfaces = _ref26.interfaces,
          directives = _ref26.directives,
          fields = _ref26.fields;
      return wrap('', description, '\n') + join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
    }
  },
  UnionTypeDefinition: {
    leave: function leave(_ref27) {
      var description = _ref27.description,
          name = _ref27.name,
          directives = _ref27.directives,
          types = _ref27.types;
      return wrap('', description, '\n') + join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' ');
    }
  },
  EnumTypeDefinition: {
    leave: function leave(_ref28) {
      var description = _ref28.description,
          name = _ref28.name,
          directives = _ref28.directives,
          values = _ref28.values;
      return wrap('', description, '\n') + join(['enum', name, join(directives, ' '), block(values)], ' ');
    }
  },
  EnumValueDefinition: {
    leave: function leave(_ref29) {
      var description = _ref29.description,
          name = _ref29.name,
          directives = _ref29.directives;
      return wrap('', description, '\n') + join([name, join(directives, ' ')], ' ');
    }
  },
  InputObjectTypeDefinition: {
    leave: function leave(_ref30) {
      var description = _ref30.description,
          name = _ref30.name,
          directives = _ref30.directives,
          fields = _ref30.fields;
      return wrap('', description, '\n') + join(['input', name, join(directives, ' '), block(fields)], ' ');
    }
  },
  DirectiveDefinition: {
    leave: function leave(_ref31) {
      var description = _ref31.description,
          name = _ref31.name,
          args = _ref31.arguments,
          repeatable = _ref31.repeatable,
          locations = _ref31.locations;
      return wrap('', description, '\n') + 'directive @' + name + (hasMultilineItems(args) ? wrap('(\n', indent(join(args, '\n')), '\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');
    }
  },
  SchemaExtension: {
    leave: function leave(_ref32) {
      var directives = _ref32.directives,
          operationTypes = _ref32.operationTypes;
      return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');
    }
  },
  ScalarTypeExtension: {
    leave: function leave(_ref33) {
      var name = _ref33.name,
          directives = _ref33.directives;
      return join(['extend scalar', name, join(directives, ' ')], ' ');
    }
  },
  ObjectTypeExtension: {
    leave: function leave(_ref34) {
      var name = _ref34.name,
          interfaces = _ref34.interfaces,
          directives = _ref34.directives,
          fields = _ref34.fields;
      return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
    }
  },
  InterfaceTypeExtension: {
    leave: function leave(_ref35) {
      var name = _ref35.name,
          interfaces = _ref35.interfaces,
          directives = _ref35.directives,
          fields = _ref35.fields;
      return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');
    }
  },
  UnionTypeExtension: {
    leave: function leave(_ref36) {
      var name = _ref36.name,
          directives = _ref36.directives,
          types = _ref36.types;
      return join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' ');
    }
  },
  EnumTypeExtension: {
    leave: function leave(_ref37) {
      var name = _ref37.name,
          directives = _ref37.directives,
          values = _ref37.values;
      return join(['extend enum', name, join(directives, ' '), block(values)], ' ');
    }
  },
  InputObjectTypeExtension: {
    leave: function leave(_ref38) {
      var name = _ref38.name,
          directives = _ref38.directives,
          fields = _ref38.fields;
      return join(['extend input', name, join(directives, ' '), block(fields)], ' ');
    }
  }
};
/**
 * Given maybeArray, print an empty string if it is null or empty, otherwise
 * print all items together separated by separator if provided
 */

function join(maybeArray) {
  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  var _maybeArray$filter$jo;

  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {
    return x;
  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';
}
/**
 * Given array, print each item on its own line, wrapped in an indented `{ }` block.
 */


function block(array) {
  return wrap('{\n', indent(join(array, '\n')), '\n}');
}
/**
 * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.
 */


function wrap(start, maybeString) {
  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';
}

function indent(str) {
  return wrap('  ', str.replace(/\n/g, '\n  '));
}

function hasMultilineItems(maybeArray) {
  var _maybeArray$some; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2203')


  return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(function (str) {
    return str.includes('\n');
  })) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;
}

/***/ }),
/* 92 */,
/* 93 */,
/* 94 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return randomBytes; });
/* harmony import */ var _ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4);
/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(52);





var logger = new _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__[/* Logger */ "a"](_version__WEBPACK_IMPORTED_MODULE_2__[/* version */ "a"]); // Debugging line for testing browser lib in node
//const window = { crypto: { getRandomValues: () => { } } };

var anyGlobal = null;

try {
  anyGlobal = window;

  if (anyGlobal == null) {
    throw new Error("try next");
  }
} catch (error) {
  try {
    anyGlobal = global;

    if (anyGlobal == null) {
      throw new Error("try next");
    }
  } catch (error) {
    anyGlobal = {};
  }
}

var crypto = anyGlobal.crypto || anyGlobal.msCrypto;

if (!crypto || !crypto.getRandomValues) {
  logger.warn("WARNING: Missing strong random number source");
  crypto = {
    getRandomValues: function getRandomValues(buffer) {
      return logger.throwError("no secure random source avaialble", _ethersproject_logger__WEBPACK_IMPORTED_MODULE_1__[/* Logger */ "a"].errors.UNSUPPORTED_OPERATION, {
        operation: "crypto.getRandomValues"
      });
    }
  };
}

function randomBytes(length) {
  if (length <= 0 || length > 1024 || length % 1 || length != length) {
    logger.throwArgumentError("invalid length", "length", length);
  }

  var result = new Uint8Array(length);
  crypto.getRandomValues(result);
  return Object(_ethersproject_bytes__WEBPACK_IMPORTED_MODULE_0__[/* arrayify */ "a"])(result);
}
;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(23)))

/***/ })
/******/ ]);
//# sourceMappingURL=main.js.map